2021-02-26 17:51:51.789 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-26 17:51:51.797 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-26 17:51:51.813 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-26 17:51:51.832 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-26 17:51:51.833 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-26 17:51:51.835 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-26 17:51:51.843 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-26 17:51:51.881 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-26 17:51:51.997 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-26 17:51:52.009 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-26 17:51:52.009 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-26 17:51:52.010 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-26 17:51:52.010 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-26 17:51:52.011 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-26 17:51:55.209 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-9220"]
2021-02-26 17:51:55.210 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-26 17:51:55.210 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-26 17:51:55.420 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-26 17:51:55.516 [ main ] - [ DEBUG ] [ i.m.c.util.internal.logging.InternalLoggerFactory : 61 ] - Using SLF4J as the default logging framework
2021-02-26 17:51:55.670 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-26 17:51:55.673 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-26 17:51:55.685 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-26 17:51:55.707 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-26 17:51:55.708 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-26 17:51:55.716 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-26 17:51:55.716 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-26 17:51:55.719 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1bfa3893
2021-02-26 17:51:55.722 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-26 17:51:55.724 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-26 17:51:55.724 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-26 17:51:55.725 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-26 17:51:55.726 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-26 17:51:55.727 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-26 17:51:55.729 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.search.SmilemallSearchApplication.main(SmilemallSearchApplication.java:18)
2021-02-26 17:51:55.731 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-26 17:51:55.733 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @32f11643
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.search.SmilemallSearchApplication.main(SmilemallSearchApplication.java:18)
2021-02-26 17:51:55.734 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-26 17:51:55.735 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-26 17:51:55.735 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-26 17:51:55.736 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-26 17:51:55.736 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-26 17:51:55.738 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-26 17:51:55.738 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-26 17:51:55.739 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-26 17:51:55.740 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-26 17:51:55.742 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-26 17:51:55.756 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-26 17:51:55.831 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-26 17:51:55.832 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-26 17:51:55.832 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-26 17:51:55.832 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-26 17:51:55.832 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-26 17:51:55.832 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-26 17:51:55.833 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-26 17:51:57.316 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-26 17:51:57.448 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-26 17:51:57.450 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-26 17:51:57.453 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-26 17:51:57.453 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-26 17:51:57.453 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-26 17:51:57.456 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-26 17:51:57.457 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-26 17:51:57.462 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@16c9e378, existing ref count 0
2021-02-26 17:51:57.475 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-26 17:51:57.476 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-26 17:51:57.482 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 13060 (auto-detected)
2021-02-26 17:51:57.485 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-26 17:51:57.485 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-26 17:51:57.848 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-26 17:51:57.849 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-26 17:51:58.202 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-26 17:51:58.224 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-26 17:51:58.225 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-26 17:51:58.225 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-26 17:51:58.245 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-26 17:51:58.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-26 17:51:58.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-26 17:51:58.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-26 17:51:58.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-26 17:51:58.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-26 17:51:58.259 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-26 17:51:58.259 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4d0226ee
2021-02-26 17:51:58.293 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xd0aea85e, [id: 0x71cad6b8] (inactive), chid=0x1] channelRegistered()
2021-02-26 17:51:58.300 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-26 17:51:58.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-26 17:51:58.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-26 17:51:58.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-26 17:51:58.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-26 17:51:58.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-26 17:51:58.303 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-26 17:51:58.304 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-26 17:51:58.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:51:58.310 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:51:58.311 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-26 17:51:58.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:51:58.322 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:51:58.324 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@63b3ada)
2021-02-26 17:51:58.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 17:51:58.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:51:58.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:51:58.332 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:51:58.483 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:51:58.483 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:51:58.486 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:51:58.486 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:51:58.488 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:51:58.493 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-26 17:51:58.493 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:51:58.494 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:51:58.498 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:51:58.528 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-26 17:51:58.529 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-26 17:51:58.535 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-26 17:51:58.535 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-26 17:51:58.565 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-26 17:51:58.569 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-26 17:51:58.570 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-26 17:51:58.571 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-26 17:51:58.572 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-26 17:51:58.572 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-26 17:51:58.573 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-26 17:51:58.573 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-26 17:51:58.574 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-26 17:51:58.575 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-26 17:51:58.577 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-26 17:51:58.578 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-26 17:51:58.578 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-26 17:51:58.578 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-26 17:51:58.579 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-26 17:51:58.579 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-26 17:52:00.834 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-9220"]
2021-02-26 17:52:01.339 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-26 17:52:01.340 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-26 17:52:01.343 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x36e8795c, [id: 0x1cf018b0] (inactive), chid=0x2] channelRegistered()
2021-02-26 17:52:01.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-26 17:52:01.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-26 17:52:01.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-26 17:52:01.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-26 17:52:01.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-26 17:52:01.349 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-26 17:52:01.349 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-26 17:52:01.349 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-26 17:52:01.349 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.349 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.350 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-26 17:52:01.350 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.350 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-26 17:52:01.351 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@18c0651f)
2021-02-26 17:52:01.354 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-26 17:52:01.354 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-26 17:52:01.355 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.357 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:01.359 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.360 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.360 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-26 17:52:01.361 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:01.362 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.366 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-26 17:52:01.367 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-26 17:52:01.367 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.368 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:01.370 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:52:01.371 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:52:01.789 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.789 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.790 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-26 17:52:01.791 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:01.791 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:01.796 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-26 17:52:01.796 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-26 17:52:01.797 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:01.797 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:02.657 [ RMI TCP Connection(2)-192.168.56.1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-26 17:52:02.786 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 1] start execution
2021-02-26 17:52:02.799 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 17:52:02.824 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 17:52:02.825 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 17:52:02.826 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 1] Request connection for {}->http://192.168.31.239:9200
2021-02-26 17:52:02.830 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 0 of 10; total allocated: 0 of 30]
2021-02-26 17:52:02.877 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 0 of 30]
2021-02-26 17:52:02.879 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 1] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 17:52:02.879 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:]: Set attribute http.nio.exchange-handler
2021-02-26 17:52:02.880 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:]: Event set [w]
2021-02-26 17:52:02.880 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:]: Set timeout 0
2021-02-26 17:52:02.880 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 54 ] - http-outgoing-0 [ACTIVE]: Connected
2021-02-26 17:52:02.887 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:]: Set attribute http.nio.http-exchange-state
2021-02-26 17:52:02.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 166 ] - [exchange: 1] Start connection routing
2021-02-26 17:52:02.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 224 ] - [exchange: 1] route completed
2021-02-26 17:52:02.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 188 ] - [exchange: 1] Connection route established
2021-02-26 17:52:02.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 1] Attempt 1 to execute request
2021-02-26 17:52:02.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 1] Target auth state: UNCHALLENGED
2021-02-26 17:52:02.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 1] Proxy auth state: UNCHALLENGED
2021-02-26 17:52:02.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:]: Set timeout 30000
2021-02-26 17:52:02.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> GET /_cluster/health/ HTTP/1.1
2021-02-26 17:52:02.892 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 0
2021-02-26 17:52:02.892 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 17:52:02.892 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 17:52:02.892 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 17:52:02.894 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:]: Event set [w]
2021-02-26 17:52:02.894 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 1] Request completed
2021-02-26 17:52:02.895 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 160 bytes written
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "GET /_cluster/health/ HTTP/1.1[\r][\n]"
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 0[\r][\n]"
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 17:52:02.896 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 17:52:02.897 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 17:52:02.897 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 17:52:02.903 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 491 bytes read
2021-02-26 17:52:02.904 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 17:52:02.904 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 17:52:02.904 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 404[\r][\n]"
2021-02-26 17:52:02.904 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 17:52:02.904 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"cluster_name":"elasticsearch","status":"yellow","timed_out":false,"number_of_nodes":1,"number_of_data_nodes":1,"active_primary_shards":10,"active_shards":10,"relocating_shards":0,"initializing_shards":0,"unassigned_shards":7,"delayed_unassigned_shards":0,"number_of_pending_tasks":0,"number_of_in_flight_fetch":0,"task_max_waiting_in_queue_millis":0,"active_shards_percent_as_number":58.82352941176471}"
2021-02-26 17:52:02.914 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 17:52:02.914 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 17:52:02.915 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 404
2021-02-26 17:52:02.915 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(404)] Response received
2021-02-26 17:52:02.915 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 1] Response received HTTP/1.1 200 OK
2021-02-26 17:52:02.926 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(404)] Input ready
2021-02-26 17:52:02.926 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 1] Consume content
2021-02-26 17:52:02.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 1] Connection can be kept alive indefinitely
2021-02-26 17:52:02.932 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 1] Response processed
2021-02-26 17:52:02.932 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 1] releasing connection
2021-02-26 17:52:02.932 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 17:52:02.932 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:02.933 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 17:52:02.933 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 17:52:02.933 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:02.934 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 404; pos: 404; completed: true]
2021-02-26 17:52:02.935 [ RMI TCP Connection(1)-192.168.56.1 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [GET http://192.168.31.239:9200/_cluster/health/] returned [HTTP/1.1 200 OK]
2021-02-26 17:52:03.040 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-26 17:52:03.040 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-26 17:52:03.040 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-26 17:52:03.043 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x71c3062d, [id: 0x59cf52e8] (inactive), chid=0x3] channelRegistered()
2021-02-26 17:52:03.049 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] channelActive()
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] activating endpoint
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] flushCommands()
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] flushCommands() Flushing 0 commands
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] channelActive() done
2021-02-26 17:52:03.050 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-26 17:52:03.051 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:03.051 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:03.051 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-26 17:52:03.051 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:03.052 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] write() done
2021-02-26 17:52:03.052 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4b2481f2)
2021-02-26 17:52:03.055 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2021-02-26 17:52:03.055 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] Stack contains: 1 commands
2021-02-26 17:52:03.056 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:03.056 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:03.141 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:03.142 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:03.142 [ boundedElastic-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, epid=0x3] write() done
2021-02-26 17:52:03.142 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] write(ctx, SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:03.143 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379] writing command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:03.147 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] Received: 517 bytes, 1 commands in the stack
2021-02-26 17:52:03.147 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x71c3062d, /192.168.31.49:5335 -> /192.168.31.239:6379, chid=0x3] Stack contains: 1 commands
2021-02-26 17:52:03.148 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2021-02-26 17:52:03.148 [ lettuce-nioEventLoop-4-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=INFO, output=StatusOutput [output=# Server
redis_version:6.0.9
redis_git_sha1:00000000
redis_git_dirty:0
redis_build_id:11509227cb1fdf31
redis_mode:standalone
os:Linux 3.10.0-693.el7.x86_64 x86_64
arch_bits:64
multiplexing_api:epoll
atomicvar_api:atomic-builtin
gcc_version:8.3.0
process_id:1
run_id:111165a7b1bb537fcd296740e4f8b4e2a66b585b
tcp_port:6379
uptime_in_seconds:11864
uptime_in_days:0
hz:10
configured_hz:10
lru_clock:3720399
executable:/data/redis-server
config_file:/etc/redis/redis.conf
io_threads_active:0
, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand], empty stack: true
2021-02-26 17:52:53.647 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:53.648 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:53.648 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:53.648 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:53.649 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:53.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:53.654 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:53.654 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:53.654 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@427c0efa=[B@40fd2347, [B@1d4152aa=[B@6254ee7c, [B@755e8633=[B@7517349e}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:54.453 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 2] start execution
2021-02-26 17:52:54.453 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 17:52:54.454 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 17:52:54.454 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 17:52:54.454 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 2] Request connection for {}->http://192.168.31.239:9200
2021-02-26 17:52:54.454 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:54.455 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 17:52:54.455 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:54.455 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 2] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 17:52:54.455 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 17:52:54.456 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 2] Attempt 1 to execute request
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 2] Target auth state: UNCHALLENGED
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 2] Proxy auth state: UNCHALLENGED
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 17:52:54.456 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1668
2021-02-26 17:52:54.457 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 17:52:54.457 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 17:52:54.457 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 17:52:54.457 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 17:52:54.460 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 17:52:54.460 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 17:52:54.460 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 2] produce content
2021-02-26 17:52:54.461 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 2] Request completed
2021-02-26 17:52:54.461 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1668; pos: 1668; completed: true]
2021-02-26 17:52:54.461 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2062 bytes written
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1668[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 17:52:54.462 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"filter":[{"term":{"catalogId":{"value":225,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}}}"
2021-02-26 17:52:54.463 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 17:52:54.463 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 17:52:54.513 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 5392 bytes read
2021-02-26 17:52:54.513 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 17:52:54.513 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 17:52:54.513 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 5304[\r][\n]"
2021-02-26 17:52:54.513 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":42,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":13,"relation":"eq"},"max_score":0.0,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.0,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"2","_score":0.0,"_source":{"skuId":2,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256G[0xffffffe5][0xffffff85][0xffffffa8][0xffffffe7][0xffffffbd][0xffffff91][0xffffffe9][0xffffff80][0xffffff9a][0xffffffef][0xffffffbc][0xffffff88][0xffffffe7][0xffffffa2][0xffffff8e][0xffffffe5][0xffffffb1][0xffffff8f][0xffffffe9][0xffffff99][0xffffffa9][0xffffffe5][0xffffffa5][0xffffff97][0xffffffe9][0xffffffa4][0xffffff90][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":7799.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":0.0,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}}]},"aggregations":{"nested#attrAgg":{"doc_count":61,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":13}]}},{"key":17,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":13}]}},{"key":18,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":13}]}},{"key":8,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2021","doc_count":9}]}},{"key":24,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020","doc_count":9}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":1,"doc_count":9,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","doc_count":9}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"oppo","doc_count":9}]}},{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":13,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":13}]}}]}}}"
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 5304
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(5304)] Response received
2021-02-26 17:52:54.514 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 2] Response received HTTP/1.1 200 OK
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(5304)] Input ready
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 2] Consume content
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 2] Connection can be kept alive indefinitely
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 2] Response processed
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 2] releasing connection
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:54.515 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 17:52:54.516 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 17:52:54.516 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 17:52:54.516 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 5304; pos: 5304; completed: true]
2021-02-26 17:52:54.516 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 17:52:54.817 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-26 17:52:54.946 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@761dc6e0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@65ea388d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@ff191c0
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-26 17:52:54.947 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-26 17:52:55.105 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.106 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.106 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.106 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.107 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.111 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 17:52:55.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.115 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.115 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.116 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.116 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.116 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.120 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:52:55.122 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.124 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.124 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.124 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.127 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.134 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.135 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.135 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.142 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.143 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.143 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.143 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.148 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.148 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.148 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.148 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.157 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.157 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.158 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.162 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.163 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.163 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.164 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:55.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.168 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.169 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.169 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:55.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:55.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@74f95b11=[B@542aef46, [B@5d37a9d2=[B@6ab50701, [B@18d58b06=[B@a2c4abc}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.665 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.666 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:55.668 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:55.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:55.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:55.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:55.674 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3e956d44=[B@1798bc5e, [B@3d46f50f=[B@2720ca4, [B@7f0970a9=[B@8966f68}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:55.666 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.039 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.039 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.040 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:56.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7c83cd24=[B@54e2b43b, [B@47d510f3=[B@36eaa96e, [B@d66e360=[B@595775c8}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.054 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.055 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.055 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.056 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 17:52:56.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.060 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.061 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.061 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.064 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:56.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.065 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.065 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.065 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.066 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:56.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.070 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.071 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.071 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:56.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.075 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.076 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.076 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.076 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.076 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:56.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.080 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.081 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.081 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:52:56.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.086 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.086 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.086 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.090 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:56.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6390f061=[B@234b6b76, [B@2212d344=[B@47bc9486, [B@41d0bfb1=[B@7300e7c6}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.091 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.092 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.092 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.096 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:56.096 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.096 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.096 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c3a9bb2=[B@264c3fb8, [B@18707f24=[B@1e13c7c8, [B@60f87ff9=[B@5011271}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.128 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.128 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.129 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:56.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@26a5b29f=[B@6c614abd, [B@61d3f80c=[B@675b2ce4, [B@617e4e79=[B@1936bb9b}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:52:56.135 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.136 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:52:56.137 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:52:56.136 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:52:56.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-26 17:52:56.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:52:56.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:52:56.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@aa82342=[B@7ebe0ad8, [B@6c7ab408=[B@3547947e, [B@5278996f=[B@ca4ac2a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:53:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:53:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:53:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:53:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:53:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:53:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:53:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:53:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:53:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:53:05.801 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 17:53:05.801 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:53:05.801 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:54:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:54:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:54:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:54:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:55:00.070 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.071 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.079 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:55:00.079 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:55:00.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:55:00.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:55:00.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:55:00.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:55:00.101 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.101 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.102 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:55:00.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:55:00.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:55:00.106 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:55:00.107 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:55:00.107 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:55:00.107 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:56:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:56:24.572 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 17:56:24.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:56:24.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:56:26.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 17:56:26.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:56:26.180 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:57:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:57:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:57:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:57:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:57:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:57:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:57:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:58:00.125 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.125 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:58:00.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.132 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:58:00.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:58:00.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:58:00.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:58:00.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:58:00.164 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.164 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:58:00.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:58:00.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:58:00.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:58:00.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:58:00.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:58:00.164 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:58:05.415 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 17:58:05.416 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:05.416 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:05.716 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 189 bytes, 0 commands in the stack
2021-02-26 17:58:05.717 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:05.717 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:05.720 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:05.720 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:09.658 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-26 17:58:09.660 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:09.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:09.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:09.664 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:09.685 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 17:58:09.686 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:09.686 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:13.047 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 17:58:13.048 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:13.048 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:58:42.908 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 17:58:42.908 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:58:42.908 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 17:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 17:59:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 17:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 17:59:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 17:59:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 17:59:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 17:59:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 17:59:21.070 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 17:59:21.071 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 17:59:21.071 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:00:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:00:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:00:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:00:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:00:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:00:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:00:00.051 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.052 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.053 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:00:00.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:00:00.056 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:00:00.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:00:00.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:00:00.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:00:00.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:00:06.096 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:00:06.097 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:00:06.098 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:01:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:01:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:01:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:02:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:02:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:03:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:03:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:03:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:03:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:03:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:03:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:03:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:03:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:03:09.717 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:03:09.718 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:03:09.718 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:03:13.039 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:03:13.039 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:03:13.039 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:05:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:05:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:06:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:06:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:06:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:07:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:07:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:07:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:07:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:08:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:08:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:08:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:08:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:08:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:08:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:08:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:09:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:09:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:09:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:09:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:09:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:09:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:09:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:09:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:09:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:09:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:09:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:09:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:10:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.030 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:10:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:10:00.038 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:10:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:10:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:10:00.039 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.040 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:10:00.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:10:00.040 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:10:00.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:10:00.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:10:00.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:10:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:10:05.659 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-26 18:10:05.660 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:10:05.660 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:10:05.661 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:10:05.662 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:10:05.688 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:10:05.690 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:10:05.691 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:10:06.353 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:10:06.353 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:10:06.353 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:10:36.282 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 18:10:36.284 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:10:36.285 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:11:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:11:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:11:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:11:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:11:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:11:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:19.271 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:12:19.271 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:12:19.272 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:12:46.872 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:46.873 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:46.873 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:46.873 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:46.874 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:46.878 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 64 bytes, 1 commands in the stack
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 128 bytes, 1 commands in the stack
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e, [B@62779256=[B@310c4bb9}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:12:46.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 192 bytes, 1 commands in the stack
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e, [B@62779256=[B@310c4bb9}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e, [B@62779256=[B@310c4bb9}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e, [B@62779256=[B@310c4bb9}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:46.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3909d313=[B@1fd4ee3e, [B@62779256=[B@310c4bb9, [B@46ea97c0=[B@20ccfc97, [B@7ef7243d=[B@73ce2ab4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.029 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 3] start execution
2021-02-26 18:12:47.030 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 3] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:12:47.031 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:12:47.032 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 3] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:12:47.032 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:12:47.032 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:12:47.032 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:12:47.032 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 3] Attempt 1 to execute request
2021-02-26 18:12:47.032 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 3] Target auth state: UNCHALLENGED
2021-02-26 18:12:47.032 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 3] Proxy auth state: UNCHALLENGED
2021-02-26 18:12:47.032 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1934
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 3] produce content
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 3] Request completed
2021-02-26 18:12:47.033 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1934; pos: 1934; completed: true]
2021-02-26 18:12:47.035 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2328 bytes written
2021-02-26 18:12:47.036 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:12:47.036 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1934[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:12:47.037 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"oppo","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:12:47.038 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:12:47.038 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:12:47.133 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 5273 bytes read
2021-02-26 18:12:47.133 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:12:47.133 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:12:47.133 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 5185[\r][\n]"
2021-02-26 18:12:47.133 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:12:47.134 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":78,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":9,"relation":"eq"},"max_score":0.4237002,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"5","_score":0.4237002,"_source":{"skuId":5,"spuId":2,"skuTitle":"oppo [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 8 + 512G","skuPrice":3999.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-02-18/22b068b9-c8d6-42c3-8c51-efacb740aca4_6a1b2703a9ed8737.jpg","saleCount":0,"hasStock":true,"hotScore":0,"brandId":1,"catalogId":225,"brandName":"oppo","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":8,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2021"},{"attrId":24,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>oppo</b> [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 8 + 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"6","_score":0.4237002,"_source":{"skuId":6,"spuId":2,"skuTitle":"oppo [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 8 + 256G","skuPrice":2999.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-02-18/b9256626-dd29-4854-8ae2-ef5583d76cc2_749d8efdff062fb0.jpg","saleCount":0,"hasStock":true,"hotScore":0,"brandId":1,"catalogId":225,"brandName":"oppo","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":8,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2021"},{"attrId":24,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>oppo</b> [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 8 + 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"7","_score":0.4237002,"_source":{"skuId":7,"spuId":2,"skuTitle":"oppo [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 6 + 128G","skuPrice":1999.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-02-18/b46f4060-c8ed-4439-8984-0df687c3ef11_b8494bf281991f94.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":1,"catalogId":225,"brandName":"oppo","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":8,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2021"},{"attrId":24,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>oppo</b> [0xffffffe6][0xffffff9c][0xffffff88][0xffffffe5][0xffffffb2][0xffffffa9][0xffffffe7][0xffffff81][0xffffffb0] 6 + 128G"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":45,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":9}]}},{"key":8,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2021","doc_count":9}]}},{"key":17,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":9}]}},{"key":18,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":9}]}},{"key":24,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020","doc_count":9}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":1,"doc_count":9,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","doc_count":9}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"oppo","doc_count":9}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":9,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":9}]}}]}}}"
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 5185
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(5185)] Response received
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 3] Response received HTTP/1.1 200 OK
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(5185)] Input ready
2021-02-26 18:12:47.136 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 3] Consume content
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 3] Connection can be kept alive indefinitely
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 3] Response processed
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 3] releasing connection
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:12:47.137 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 5185; pos: 5185; completed: true]
2021-02-26 18:12:47.137 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:12:47.152 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.153 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.153 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.153 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.155 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:12:47.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.160 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.160 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.161 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:47.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.169 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.169 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.170 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:47.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.176 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.176 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.176 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:47.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.182 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.182 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.182 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:47.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.188 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.188 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.188 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.189 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.189 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.189 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.190 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.193 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:12:47.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.194 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.194 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.195 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.195 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.196 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.200 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 272 bytes, 1 commands in the stack
2021-02-26 18:12:47.201 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.201 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6188e79a=[B@6176994a, [B@2619f15a=[B@63ef845a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:12:47.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 308 bytes, 1 commands in the stack
2021-02-26 18:12:47.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.203 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6188e79a=[B@6176994a, [B@2619f15a=[B@63ef845a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.203 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6188e79a=[B@6176994a, [B@2619f15a=[B@63ef845a, [B@457d0b8a=[B@796ed15d, [B@2c07b15e=[B@66bc477e}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:12:47.261 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.262 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.262 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:12:47.263 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:12:47.262 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:12:47.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 400 bytes, 1 commands in the stack
2021-02-26 18:12:47.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@4b303178=[B@55c73220, [B@5a2ce401=[B@51c40851}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:12:47.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 180 bytes, 1 commands in the stack
2021-02-26 18:12:47.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:12:47.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@4b303178=[B@55c73220, [B@5a2ce401=[B@51c40851}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:12:47.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@4b303178=[B@55c73220, [B@5a2ce401=[B@51c40851, [B@1b3558e0=[B@4a3edbb9, [B@2604ab6b=[B@3b49c42f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:00.000 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:11.746 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:13:11.746 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:13:11.746 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:13:57.966 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:57.966 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:57.966 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:57.966 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:57.967 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:57.971 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:13:57.971 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:57.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:57.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@358925b7=[B@1908a3e0, [B@4094e795=[B@2640bb8a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:13:57.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:13:57.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:57.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@358925b7=[B@1908a3e0, [B@4094e795=[B@2640bb8a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:57.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@358925b7=[B@1908a3e0, [B@4094e795=[B@2640bb8a, [B@5a189668=[B@611cc908, [B@3dd77af1=[B@4223a24a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:57.975 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 4] start execution
2021-02-26 18:13:57.976 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:13:57.976 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 4] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:13:57.977 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 4] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:13:57.978 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:13:57.978 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 4] Attempt 1 to execute request
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 4] Target auth state: UNCHALLENGED
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 4] Proxy auth state: UNCHALLENGED
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:13:57.978 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 4] produce content
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 4] Request completed
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:13:57.979 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:13:57.980 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:13:57.980 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:13:57.980 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:13:57.980 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:13:57.980 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:13:58.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:13:58.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:13:58.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:13:58.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:13:58.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":20,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 4] Response received HTTP/1.1 200 OK
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 4] Consume content
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 4] Connection can be kept alive indefinitely
2021-02-26 18:13:58.006 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 4] Response processed
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 4] releasing connection
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:13:58.007 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:13:58.007 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:13:58.014 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.015 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.015 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:13:58.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.020 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.020 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.021 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:58.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.026 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.026 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.026 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:58.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.032 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.032 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.032 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:58.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.038 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.038 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.039 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:58.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.046 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.046 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.046 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:13:58.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.052 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.052 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.052 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.053 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:13:58.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5c16d7b0=[B@686cdc50, [B@5a903e31=[B@33d606da, [B@5dc3e8e2=[B@71106cba, [B@2ad20e2=[B@1ad1e84a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:13:58.080 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.080 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:13:58.081 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:13:58.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:13:58.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:13:58.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:13:58.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:13:58.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@1451291c=[B@6d372ffd, [B@17b20d9a=[B@6aee311c, [B@65b5d66a=[B@21a3acad, [B@7033e12e=[B@4ef61326}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:10.426 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.426 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:10.426 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:10.427 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:10.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:10.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:10.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3d6d2319=[B@d763189, [B@437c78b1=[B@35d39cc4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:10.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:10.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:10.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3d6d2319=[B@d763189, [B@437c78b1=[B@35d39cc4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:10.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3d6d2319=[B@d763189, [B@437c78b1=[B@35d39cc4, [B@6172148c=[B@7dadda2e, [B@41eb51e3=[B@54b14ce3}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:10.483 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 5] start execution
2021-02-26 18:14:10.484 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:10.485 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:10.485 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:10.485 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 5] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:10.485 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:10.486 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:10.486 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:10.486 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 5] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:10.486 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:10.486 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:10.486 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:10.486 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 5] Attempt 1 to execute request
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 5] Target auth state: UNCHALLENGED
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 5] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1985
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 5] produce content
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 5] Request completed
2021-02-26 18:14:10.487 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1985; pos: 1985; completed: true]
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2379 bytes written
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1985[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"filter":[{"terms":{"brandId":[2],"boost":1.0}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:10.488 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:10.523 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:10.523 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:10.523 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:10.523 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:10.523 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":25,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 5] Response received HTTP/1.1 200 OK
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 5] Consume content
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 5] Connection can be kept alive indefinitely
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 5] Response processed
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 5] releasing connection
2021-02-26 18:14:10.524 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:10.525 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:10.525 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:10.525 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:10.525 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:10.525 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:10.525 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:10.726 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-26 18:14:10.727 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-26 18:14:10.728 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-26 18:14:10.728 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-26 18:14:10.766 [ http-nio-9220-exec-7 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-26 18:14:10.781 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [cn-smile-smilemall-product]:  pingIntervalSeconds set to 30
2021-02-26 18:14:10.781 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [cn-smile-smilemall-product]: maxTotalPingTime set to 2
2021-02-26 18:14:10.781 [ http-nio-9220-exec-7 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: cn-smile-smilemall-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-26 18:14:10.788 [ http-nio-9220-exec-7 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-26 18:14:10.800 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:10.800 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:10.800 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:14:10.800 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:10.806 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:14:10.807 [ http-nio-9220-exec-7 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-26 18:14:10.808 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  initialized
2021-02-26 18:14:10.808 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:14:10.809 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:10.810 [ http-nio-9220-exec-7 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client cn-smile-smilemall-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-product,current list of Servers=[192.168.31.49:6001],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:6001;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@ed5e26c
2021-02-26 18:14:10.855 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-26 18:14:10.861 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-product using LB returned Server: 192.168.31.49:6001 for request http:///product/brand/brandInfo
2021-02-26 18:14:10.978 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.979 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.979 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:10.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:10.980 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:10.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:10.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:10.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:10.984 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.984 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:10.984 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:10.985 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:10.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:10.990 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.991 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.991 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:10.991 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:10.992 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:10.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:10.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:10.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:10.996 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.996 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:10.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:10.997 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:10.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:11.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.002 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.002 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:11.003 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:11.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:11.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:11.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:11.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:11.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.013 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.014 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:11.014 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:11.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:11.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.019 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.020 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:11.020 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:11.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:11.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2596f48d=[B@2d060ccc, [B@3ee9dd95=[B@738e9bdb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:11.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:11.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2596f48d=[B@2d060ccc, [B@3ee9dd95=[B@738e9bdb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2596f48d=[B@2d060ccc, [B@3ee9dd95=[B@738e9bdb, [B@612e2bbb=[B@ca659f5, [B@115b577e=[B@b715bf9}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.057 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.057 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.057 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:11.057 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:11.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:11.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:11.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:11.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:11.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@1b12dadf=[B@6288d7d5, [B@50399e64=[B@7e5eaf5e, [B@6eee1c67=[B@604d89d6, [B@6fc12cd0=[B@60c8ea3}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:11.792 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:11.792 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:11.792 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:14:11.792 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:11.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:14:11.793 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-26 18:14:11.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  initialized
2021-02-26 18:14:11.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:14:11.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:12.947 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:12.947 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:12.947 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:12.947 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:12.948 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:12.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:12.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:12.953 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:12.953 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@25be8753=[B@665551de, [B@47256cd1=[B@afaea21, [B@13d1436a=[B@13293207, [B@3700cc72=[B@227b0f4c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:12.960 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 6] start execution
2021-02-26 18:14:12.961 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:12.961 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:12.961 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:12.961 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 6] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 6] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:12.962 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 6] Attempt 1 to execute request
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 6] Target auth state: UNCHALLENGED
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 6] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:12.963 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 6] produce content
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 6] Request completed
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:12.964 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:12.970 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:12.970 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:12.971 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:12.971 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:12.971 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:12.972 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:12.994 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:12.994 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:12.994 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:12.994 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":24,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 6] Response received HTTP/1.1 200 OK
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:12.995 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 6] Consume content
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 6] Connection can be kept alive indefinitely
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 6] Response processed
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 6] releasing connection
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:12.996 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:12.996 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:13.001 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.002 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.002 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:13.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.014 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.014 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.015 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:13.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.042 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.043 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.043 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.044 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:13.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.049 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.049 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.049 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.050 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:13.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.054 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.054 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.054 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:13.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.060 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.060 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.060 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:13.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.066 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.066 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.066 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.066 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:13.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:13.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6979901c=[B@1ee8178d, [B@1382e310=[B@7cbb0017}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:13.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:13.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6979901c=[B@1ee8178d, [B@1382e310=[B@7cbb0017}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6979901c=[B@1ee8178d, [B@1382e310=[B@7cbb0017, [B@596786ec=[B@3f354fe, [B@5df974b3=[B@27ec572f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.127 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.127 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:13.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:13.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:13.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:13.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:13.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@42d9f5d8=[B@534875b, [B@54135ddc=[B@4b07c79c, [B@4ddea704=[B@73d9bf7f, [B@84ec4bf=[B@dccf687}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:13.132 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:17.721 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:17.722 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:17.722 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:17.722 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:17.723 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:17.727 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:17.727 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:17.727 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:17.729 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@67b1d100=[B@61f122d0, [B@d237bbf=[B@771943d2, [B@3cc0ce47=[B@4d911980, [B@8a1db15=[B@4b6e0a54}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.000 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 7] start execution
2021-02-26 18:14:18.000 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 7] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:18.001 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:18.003 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 7] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:18.003 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:18.003 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 7] Attempt 1 to execute request
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 7] Target auth state: UNCHALLENGED
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 7] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 2199
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:18.003 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 7] produce content
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 7] Request completed
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 2199; pos: 2199; completed: true]
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2593 bytes written
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 2199[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:18.004 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"filter":[{"nested":{"query":{"bool":{"must":[{"terms":{"attrs.attrId":["7"],"boost":1.0}},{"terms":{"attrs.attrValues":["2020[0xffffffe5][0xffffffb9][0xffffffb4]"],"boost":1.0}}],"adjust_pure_negative":true,"boost":1.0}},"path":"attrs","ignore_unmapped":false,"score_mode":"none","boost":1.0}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:18.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:18.005 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:18.063 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":49,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:18.064 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 7] Response received HTTP/1.1 200 OK
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 7] Consume content
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 7] Connection can be kept alive indefinitely
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 7] Response processed
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 7] releasing connection
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:18.065 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:18.066 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:18.066 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:18.066 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:18.072 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-26 18:14:18.072 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-product using LB returned Server: 192.168.31.49:6001 for request http:///product/attr/info/7
2021-02-26 18:14:18.177 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.177 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.177 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:18.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.182 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.182 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.182 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:18.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.186 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.186 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.187 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:18.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.192 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.192 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.192 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.193 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.197 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:18.197 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.197 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.197 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.197 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.197 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.198 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:18.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.203 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.203 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.203 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.203 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.204 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.207 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:18.207 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.207 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.208 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.208 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.209 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.209 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.209 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.210 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.213 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@1edb9636=[B@60c44cf2, [B@5bc3d174=[B@493e8dbf}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@1edb9636=[B@60c44cf2, [B@5bc3d174=[B@493e8dbf}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@1edb9636=[B@60c44cf2, [B@5bc3d174=[B@493e8dbf, [B@b96c888=[B@c7a8602, [B@4e9be0ff=[B@3194b147}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:18.246 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.247 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.248 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:18.248 [ http-nio-9220-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:18.249 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:18.252 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:18.252 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:18.253 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:18.253 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@c7bed75=[B@2ad6758, [B@1df6681d=[B@2cb55190, [B@45e4b737=[B@4c88163e, [B@516e2845=[B@6c0423ea}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.008 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.010 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.013 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:20.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@f7029cb=[B@3597622f, [B@422650bc=[B@45c47791, [B@17fdf0db=[B@3d473cda, [B@3ba72ae1=[B@3fb5e9b1}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.022 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 8] start execution
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 8] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:20.023 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:20.024 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:20.024 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 8] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:20.024 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:20.024 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 8] Attempt 1 to execute request
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 8] Target auth state: UNCHALLENGED
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 8] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:20.024 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 8] produce content
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 8] Request completed
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:14:20.025 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:20.026 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:20.026 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:20.026 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:20.026 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:20.027 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:20.027 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:20.027 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:20.046 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:20.046 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:20.046 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:20.046 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:20.046 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":14,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 8] Response received HTTP/1.1 200 OK
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 8] Consume content
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 8] Connection can be kept alive indefinitely
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 8] Response processed
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 8] releasing connection
2021-02-26 18:14:20.047 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:20.048 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:20.048 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:20.048 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:20.048 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:20.048 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:20.048 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:20.053 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.053 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.053 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.053 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:20.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.059 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.059 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.059 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.064 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:20.064 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.064 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.064 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.065 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.065 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.065 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:20.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.070 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.071 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.071 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:20.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.076 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.076 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.077 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.077 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.077 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.078 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:20.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.082 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.082 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.082 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:20.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.087 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.087 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.088 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:20.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5723e32b=[B@43ee3759, [B@5386a4f9=[B@199ae3b4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:20.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:20.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5723e32b=[B@43ee3759, [B@5386a4f9=[B@199ae3b4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5723e32b=[B@43ee3759, [B@5386a4f9=[B@199ae3b4, [B@51e87117=[B@5c91bfc, [B@372fa6bf=[B@4b00dfb2}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:20.117 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.117 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:20.118 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:20.117 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:20.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:20.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:20.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:20.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@59f27f0c=[B@598961e8, [B@132220d3=[B@5baff6b2, [B@5e79cfb0=[B@4b3bb638, [B@13c97682=[B@131eb4bb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:24.941 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.942 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.942 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:24.942 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:24.943 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.947 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:24.947 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:24.948 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:24.948 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@18a0111=[B@4a65598, [B@25b46df4=[B@27b4335, [B@3328850c=[B@758ca693, [B@55f544be=[B@a23dc28}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:24.952 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 9] start execution
2021-02-26 18:14:24.952 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:24.953 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:24.953 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:24.953 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 9] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:24.953 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:24.953 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:24.954 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:24.954 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 9] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:24.954 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:24.954 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 9] Attempt 1 to execute request
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 9] Target auth state: UNCHALLENGED
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 9] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:24.954 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 9] produce content
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 9] Request completed
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:24.955 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:24.956 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:24.956 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:24.956 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:24.956 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:24.956 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:24.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":13,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 9] Response received HTTP/1.1 200 OK
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 9] Consume content
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 9] Connection can be kept alive indefinitely
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 9] Response processed
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 9] releasing connection
2021-02-26 18:14:24.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:24.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:24.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:24.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:24.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:24.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:24.977 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:24.981 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.982 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.982 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:24.982 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:24.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.987 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:24.987 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:24.987 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:24.987 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:24.988 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.988 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.988 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:24.988 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:24.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.993 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:24.993 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:24.993 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:24.993 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:24.993 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.994 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.994 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:24.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:24.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:24.998 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:24.998 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:24.998 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:24.999 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:24.999 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.000 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:25.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.001 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:25.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:25.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:25.005 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.006 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:25.006 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:25.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:25.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:25.011 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.011 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:25.012 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:25.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:25.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:25.018 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.018 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:25.018 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:25.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:25.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3c1f5261=[B@748d4605, [B@64a5cc3c=[B@60db0620}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:25.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:25.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3c1f5261=[B@748d4605, [B@64a5cc3c=[B@60db0620}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@3c1f5261=[B@748d4605, [B@64a5cc3c=[B@60db0620, [B@2611dc00=[B@72bcee2a, [B@6c9f30d2=[B@4aee1c5b}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:25.130 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.131 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:25.131 [ http-nio-9220-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:25.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:25.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:25.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:25.137 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:25.138 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@62b738da=[B@3ffb666, [B@773b9dfe=[B@28800f8a, [B@62e3e08d=[B@551a759f, [B@58d5244e=[B@241ccc26}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.521 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.522 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.523 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.527 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:28.527 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5aae0245=[B@1ce3806a, [B@72fabac5=[B@3b683da1, [B@744a8f88=[B@1b7ed38b, [B@36f500db=[B@593ebe7}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.530 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 10] start execution
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 10] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:28.531 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:28.532 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:28.532 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 10] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:28.532 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:28.532 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:28.532 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:28.532 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 10] Attempt 1 to execute request
2021-02-26 18:14:28.532 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 10] Target auth state: UNCHALLENGED
2021-02-26 18:14:28.532 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 10] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:28.532 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1985
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 10] produce content
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 10] Request completed
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1985; pos: 1985; completed: true]
2021-02-26 18:14:28.533 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2379 bytes written
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1985[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"filter":[{"terms":{"brandId":[2],"boost":1.0}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:28.534 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:28.554 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:28.554 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:28.554 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:28.554 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:28.554 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":14,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:28.555 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 10] Response received HTTP/1.1 200 OK
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 10] Consume content
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 10] Connection can be kept alive indefinitely
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 10] Response processed
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 10] releasing connection
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:28.556 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:28.557 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:28.557 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:28.557 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:28.557 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:28.559 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-26 18:14:28.559 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-product using LB returned Server: 192.168.31.49:6001 for request http:///product/brand/brandInfo
2021-02-26 18:14:28.581 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.581 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.581 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.581 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.582 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.586 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:28.586 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.586 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.586 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.587 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.587 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.588 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.588 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.588 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.591 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:28.591 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.591 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.592 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.592 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.592 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.593 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.593 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.593 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:28.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.597 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.598 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.598 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.598 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.598 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.602 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:28.602 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.602 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.602 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.603 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.603 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.604 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.604 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.605 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.609 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:28.609 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.609 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.610 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.610 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.610 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.610 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.610 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.611 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:28.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.616 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.616 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.616 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.616 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.616 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.620 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:28.620 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.620 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.621 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@573cbef=[B@12830d34, [B@7f0c6bd5=[B@8551050}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:28.621 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:28.621 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.621 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@573cbef=[B@12830d34, [B@7f0c6bd5=[B@8551050}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.621 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@573cbef=[B@12830d34, [B@7f0c6bd5=[B@8551050, [B@13628e06=[B@5cc5b00, [B@f2c1d7c=[B@25bb1c79}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:28.641 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.641 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.641 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:28.641 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:28.641 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:28.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:28.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:28.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:28.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@22aea476=[B@ac632, [B@4d068aa2=[B@79a00f0b, [B@2a75dc59=[B@7d339372, [B@575045ba=[B@281b64fb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:40.702 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:14:41.729 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.729 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.730 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.730 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.730 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.734 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:41.734 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.734 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.734 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@669e2795=[B@77b43642, [B@15d1ab01=[B@6fa51216, [B@5b0dc7db=[B@5aa32326, [B@60810748=[B@32f0c47d}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.737 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 11] start execution
2021-02-26 18:14:41.738 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:14:41.738 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:14:41.738 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:14:41.738 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 11] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 11] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:14:41.739 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:41.739 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:14:41.739 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 11] Attempt 1 to execute request
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 11] Target auth state: UNCHALLENGED
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 11] Proxy auth state: UNCHALLENGED
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 11] produce content
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 11] Request completed
2021-02-26 18:14:41.740 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:14:41.741 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":15,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 11] Response received HTTP/1.1 200 OK
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 11] Consume content
2021-02-26 18:14:41.762 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 11] Connection can be kept alive indefinitely
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 11] Response processed
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 11] releasing connection
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:14:41.763 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:14:41.763 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:14:41.769 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.770 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.770 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.770 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.770 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:14:41.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.775 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.775 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.776 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.776 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.776 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:41.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.780 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.781 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.781 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.781 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.782 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:41.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.786 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.787 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.787 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.787 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.787 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.792 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:41.792 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.792 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.792 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.792 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.793 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.793 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:41.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:14:41.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:14:41.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:41.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:14:41.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:14:41.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:14:41.797 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:41.797 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.797 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.797 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.797 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.798 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.798 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.798 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.798 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.802 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:14:41.802 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.803 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.803 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.803 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.803 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.803 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.803 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.804 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.808 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:14:41.808 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.808 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.808 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6420e247=[B@60abc438, [B@23d26977=[B@54cc277c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:14:41.809 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:14:41.809 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.809 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6420e247=[B@60abc438, [B@23d26977=[B@54cc277c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.809 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6420e247=[B@60abc438, [B@23d26977=[B@54cc277c, [B@371dc578=[B@390015e7, [B@7349b3d=[B@cc2327c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:14:41.835 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.835 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.836 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:14:41.836 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:14:41.836 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:14:41.840 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:14:41.840 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:14:41.841 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:14:41.841 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@55ad1099=[B@6fad7922, [B@76e39462=[B@587a031, [B@4ff51874=[B@62d63e4d, [B@52398224=[B@7c60a891}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:05.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:15:05.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:05.744 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:06.347 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:15:06.347 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:06.347 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:08.898 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.898 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.898 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:08.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7880aa56=[B@17bba285, [B@40be1b5f=[B@276f37ce, [B@13c96153=[B@7ff40989, [B@6a94679b=[B@36951153}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.905 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 12] start execution
2021-02-26 18:15:08.906 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:15:08.906 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:15:08.907 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:15:08.907 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 12] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:15:08.907 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:08.907 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:08.907 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:08.908 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 12] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:15:08.908 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:15:08.908 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:15:08.908 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:08.908 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 12] Attempt 1 to execute request
2021-02-26 18:15:08.908 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 12] Target auth state: UNCHALLENGED
2021-02-26 18:15:08.908 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 12] Proxy auth state: UNCHALLENGED
2021-02-26 18:15:08.908 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1985
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 12] produce content
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 12] Request completed
2021-02-26 18:15:08.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1985; pos: 1985; completed: true]
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2379 bytes written
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1985[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:15:08.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:15:08.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"filter":[{"terms":{"brandId":[2],"boost":1.0}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:15:08.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:08.912 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:15:08.928 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":13,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 12] Response received HTTP/1.1 200 OK
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 12] Consume content
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 12] Connection can be kept alive indefinitely
2021-02-26 18:15:08.929 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 12] Response processed
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 12] releasing connection
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:08.930 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:15:08.930 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:15:08.932 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-26 18:15:08.933 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-product using LB returned Server: 192.168.31.49:6001 for request http:///product/brand/brandInfo
2021-02-26 18:15:08.951 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.952 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.952 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.956 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:15:08.956 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.957 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.957 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.957 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.957 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.958 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.958 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.958 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:08.962 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.963 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:08.963 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.963 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.964 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.968 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.969 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.969 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.969 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.969 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.974 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.974 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.974 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.979 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.979 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.980 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.980 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.980 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.985 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.985 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.985 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.985 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.985 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:08.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:08.989 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.990 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.990 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:08.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:08.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:08.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-26 18:15:08.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7c70228e=[B@7d98461e, [B@22ffab89=[B@6399df77}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:15:08.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-26 18:15:08.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:08.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7c70228e=[B@7d98461e, [B@22ffab89=[B@6399df77}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:08.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7c70228e=[B@7d98461e, [B@22ffab89=[B@6399df77, [B@1e80e5d8=[B@7e6bb0e5, [B@417ca662=[B@53a4aa38}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:09.013 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:09.013 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:09.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:09.014 [ http-nio-9220-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:09.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:09.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:09.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:09.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:09.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@4a132bb1=[B@68a9ce15, [B@6ef8db27=[B@40a011c4, [B@4db7b285=[B@3073b0cf, [B@3b342461=[B@2afe8d8c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:10.703 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:15:11.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:15:21.175 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.176 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.176 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:21.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@61371d4f=[B@5652ec2c, [B@3ffb6e08=[B@323d43c0, [B@3a42f270=[B@1fc1f685, [B@f5645ec=[B@2285b9b4}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.182 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 13] start execution
2021-02-26 18:15:21.183 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:15:21.183 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:15:21.183 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:15:21.183 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 13] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:15:21.183 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:21.184 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:21.184 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:21.184 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 13] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:15:21.184 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:15:21.184 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 13] Attempt 1 to execute request
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 13] Target auth state: UNCHALLENGED
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 13] Proxy auth state: UNCHALLENGED
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:15:21.184 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 13] produce content
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 13] Request completed
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:15:21.185 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:15:21.186 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:15:21.186 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:21.186 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4758 bytes read
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4670[\r][\n]"
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:15:21.211 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":16,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G<b style='color: red'>[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]</b> [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4670
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4670)] Response received
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 13] Response received HTTP/1.1 200 OK
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4670)] Input ready
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 13] Consume content
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 13] Connection can be kept alive indefinitely
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 13] Response processed
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 13] releasing connection
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:15:21.212 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:21.213 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:15:21.213 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:21.213 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:21.213 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4670; pos: 4670; completed: true]
2021-02-26 18:15:21.213 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:15:21.218 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.218 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.218 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.218 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.219 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:15:21.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.224 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.225 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.225 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.231 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:21.231 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.232 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.232 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.232 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.232 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.233 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:21.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.240 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.240 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.240 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.240 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.240 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.241 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:21.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.247 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.247 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.247 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.252 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:21.253 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.253 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.253 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.253 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.253 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.254 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.254 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.254 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.259 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:21.259 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.259 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.260 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.260 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.260 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.261 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.270 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-26 18:15:21.270 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.270 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.270 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@63771244=[B@2be9d293, [B@3b0c7ea9=[B@242e9643}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:15:21.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-26 18:15:21.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@63771244=[B@2be9d293, [B@3b0c7ea9=[B@242e9643}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@63771244=[B@2be9d293, [B@3b0c7ea9=[B@242e9643, [B@7f1045b0=[B@4229b6e2, [B@27b195cd=[B@12e5ac6a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:21.294 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.294 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.295 [ http-nio-9220-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:21.295 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:21.295 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:21.307 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:21.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:21.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:21.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6fa55643=[B@31ebad3d, [B@4491b987=[B@787f7706, [B@4b008951=[B@377a2359, [B@74b9faa7=[B@cad9bd3}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:26.304 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-26 18:15:26.304 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:26.305 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:26.305 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:26.305 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:27.097 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:15:27.097 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:27.098 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:15:40.703 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:15:41.798 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:15:41.798 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:15:41.798 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:15:41.798 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:15:41.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:15:41.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:15:41.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:15:44.120 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.121 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.121 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.126 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:44.126 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.126 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.126 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@60435d3e=[B@1f422df4, [B@6387d177=[B@42134b02, [B@58156b5=[B@4d28890b, [B@659226d5=[B@3978aaf5}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.131 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 14] start execution
2021-02-26 18:15:44.132 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:15:44.133 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:15:44.133 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 14] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 14] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:15:44.134 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:15:44.140 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:44.140 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:15:44.140 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 14] Attempt 1 to execute request
2021-02-26 18:15:44.140 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 14] Target auth state: UNCHALLENGED
2021-02-26 18:15:44.140 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 14] Proxy auth state: UNCHALLENGED
2021-02-26 18:15:44.140 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 14] produce content
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 14] Request completed
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:15:44.141 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe4][0xffffffbb][0xffffffb7][0xffffffe6][0xffffffa0][0xffffffbc]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:44.142 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:15:44.150 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 567 bytes read
2021-02-26 18:15:44.150 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:15:44.150 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:15:44.150 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 480[\r][\n]"
2021-02-26 18:15:44.150 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":3,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":0,"relation":"eq"},"max_score":null,"hits":[]},"aggregations":{"nested#attrAgg":{"doc_count":0,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]}}}"
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 480
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(480)] Response received
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 14] Response received HTTP/1.1 200 OK
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(480)] Input ready
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 14] Consume content
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 14] Connection can be kept alive indefinitely
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 14] Response processed
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 14] releasing connection
2021-02-26 18:15:44.151 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:15:44.152 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:44.152 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:15:44.152 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:44.152 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:44.152 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 480; pos: 480; completed: true]
2021-02-26 18:15:44.152 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:15:44.156 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.156 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.156 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.156 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.157 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:15:44.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.161 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.161 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.162 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.162 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.162 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:44.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.166 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.166 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.167 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.167 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.167 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:44.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.171 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.171 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.171 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.172 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:44.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.176 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.177 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.177 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:44.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.182 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.183 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.183 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:44.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.187 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.188 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.188 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.188 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.188 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@375b1da3=[B@66a1a732, [B@6fc81b11=[B@1af28611}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@375b1da3=[B@66a1a732, [B@6fc81b11=[B@1af28611}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@375b1da3=[B@66a1a732, [B@6fc81b11=[B@1af28611, [B@752b36e9=[B@31e71f89, [B@5a14bbce=[B@3fabd5aa}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:44.214 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.215 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.216 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:44.217 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:44.216 [ http-nio-9220-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:44.220 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:44.220 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:44.220 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:44.220 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@131b20c8=[B@4e8c904e, [B@6c2e33ae=[B@53227972, [B@653c72f5=[B@550f1239, [B@4dbfd7d=[B@e643df0}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:55.963 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:55.963 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:55.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:55.964 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:55.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:55.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:55.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:55.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:55.969 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@24c0d292=[B@4408ab86, [B@64e9c691=[B@6eff20d8, [B@495a8eef=[B@734fe61e, [B@66feb189=[B@60ae6307}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:55.970 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 15] start execution
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 15] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:55.971 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:55.972 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:55.972 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 15] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:15:55.972 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:15:55.973 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:55.973 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:15:55.974 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 15] Attempt 1 to execute request
2021-02-26 18:15:55.974 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 15] Target auth state: UNCHALLENGED
2021-02-26 18:15:55.974 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 15] Proxy auth state: UNCHALLENGED
2021-02-26 18:15:55.974 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:15:55.975 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 15] produce content
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 15] Request completed
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:15:55.976 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb9][0xffffffb3]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:15:55.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:15:55.977 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:15:55.990 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 567 bytes read
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 480[\r][\n]"
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":9,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":0,"relation":"eq"},"max_score":null,"hits":[]},"aggregations":{"nested#attrAgg":{"doc_count":0,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[]}}}"
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 480
2021-02-26 18:15:55.992 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(480)] Response received
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 15] Response received HTTP/1.1 200 OK
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(480)] Input ready
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 15] Consume content
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 15] Connection can be kept alive indefinitely
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 15] Response processed
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 15] releasing connection
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:15:55.993 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 480; pos: 480; completed: true]
2021-02-26 18:15:55.993 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:15:55.996 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:55.997 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:55.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:55.997 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:55.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:15:56.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.002 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.002 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.002 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:56.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.008 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:56.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.013 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.013 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.013 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:56.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.018 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.018 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.018 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:56.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.023 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.023 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.024 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:15:56.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.029 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.029 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.029 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-26 18:15:56.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7695a518=[B@69c320c2, [B@7ae6c2c2=[B@55840e3d}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:15:56.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-26 18:15:56.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7695a518=[B@69c320c2, [B@7ae6c2c2=[B@55840e3d}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@7695a518=[B@69c320c2, [B@7ae6c2c2=[B@55840e3d, [B@ee2dcf0=[B@326b0285, [B@425eef3c=[B@47eb1713}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:56.050 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.051 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:15:56.051 [ http-nio-9220-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:15:56.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:15:56.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:15:56.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:15:56.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:15:56.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@5f764642=[B@7214f01d, [B@6a64759f=[B@3b15ab4d, [B@713d7c=[B@3286eb8e, [B@1f3df1ee=[B@4244deb1}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:15:57.017 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 18:15:57.017 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:15:57.017 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.823 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.823 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.823 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.828 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:16:00.828 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.829 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.829 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@17855afc=[B@48385bc, [B@15cd482=[B@605672cb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:16:00.829 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:16:00.829 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.830 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@17855afc=[B@48385bc, [B@15cd482=[B@605672cb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.831 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@17855afc=[B@48385bc, [B@15cd482=[B@605672cb, [B@5d398687=[B@22907deb, [B@3aa6a166=[B@71039358}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.833 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 16] start execution
2021-02-26 18:16:00.834 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 16] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:16:00.835 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:16:00.836 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 16] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:16:00.836 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:16:00.836 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 16] Attempt 1 to execute request
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 16] Target auth state: UNCHALLENGED
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 16] Proxy auth state: UNCHALLENGED
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1936
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:16:00.836 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 16] produce content
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 16] Request completed
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1936; pos: 1936; completed: true]
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2330 bytes written
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1936[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"must":[{"match":{"skuTitle":{"query":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","operator":"OR","prefix_length":0,"max_expansions":50,"fuzzy_transpositions":true,"lenient":false,"zero_terms_query":"NONE","auto_generate_synonyms_phrase_query":true,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}},"highlight":{"pre_tags":["<b style='color: red'>"],"post_tags":["</b>"],"fields":{"skuTitle":{}}}}"
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:16:00.837 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 4757 bytes read
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 4669[\r][\n]"
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":9,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":4,"relation":"eq"},"max_score":1.0862088,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":1.0862088,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"4","_score":1.0862088,"_source":{"skuId":4,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 512G"]}},{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.91569936,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]},"highlight":{"skuTitle":["<b style='color: red'>[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]</b>mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]"]}}]},"aggregations":{"nested#attrAgg":{"doc_count":16,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":4}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}},{"key":17,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":4}]}},{"key":18,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":4,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":4}]}}]}}}"
2021-02-26 18:16:00.852 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 4669
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(4669)] Response received
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 16] Response received HTTP/1.1 200 OK
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(4669)] Input ready
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 16] Consume content
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 16] Connection can be kept alive indefinitely
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 16] Response processed
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 16] releasing connection
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:16:00.853 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:16:00.854 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:16:00.854 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:16:00.854 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:16:00.854 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 4669; pos: 4669; completed: true]
2021-02-26 18:16:00.854 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:16:00.858 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.858 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.858 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.858 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.859 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:16:00.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.863 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.864 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.864 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.864 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.864 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.868 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:16:00.869 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.869 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:16:00.869 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.869 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:16:00.869 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.870 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.870 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.870 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.870 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.875 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.876 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.877 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.876 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.881 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.881 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.881 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.881 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.882 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.882 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.883 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.883 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.883 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.887 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.887 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.887 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.887 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.887 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.887 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.888 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.893 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.893 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.893 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.893 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.897 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:16:00.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.898 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.898 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.899 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.899 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.899 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:16:00.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.903 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@601f2e41=[B@4ee3599c, [B@6f3d1eb5=[B@23179a4b}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:16:00.904 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:16:00.904 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.904 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@601f2e41=[B@4ee3599c, [B@6f3d1eb5=[B@23179a4b}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.904 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@601f2e41=[B@4ee3599c, [B@6f3d1eb5=[B@23179a4b, [B@3ae3d54e=[B@69573d91, [B@3d2cbc11=[B@760d2732}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:00.926 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.931 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.932 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:16:00.932 [ http-nio-9220-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:16:00.932 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:16:00.936 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-26 18:16:00.936 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:16:00.936 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:16:00.936 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@52e0c518=[B@11286566, [B@af42761=[B@3a4c970d, [B@5a1f281b=[B@19b03faf, [B@4534a0dd=[B@7962560c}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:16:10.704 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:16:11.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:16:40.704 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:16:41.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:16:41.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:16:41.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:16:41.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:16:41.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:16:41.802 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:16:41.802 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:17:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:17:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:17:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:17:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:17:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:17:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:17:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:17:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:17:10.705 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:17:11.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:17:11.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:17:40.705 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:17:41.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:17:58.883 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 18:17:58.883 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:17:58.884 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:17:59.084 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 189 bytes, 0 commands in the stack
2021-02-26 18:17:59.084 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:17:59.084 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:17:59.085 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:17:59.085 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:18:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:18:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:18:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:18:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:18:10.705 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:18:11.758 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 83 bytes, 0 commands in the stack
2021-02-26 18:18:11.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:18:11.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:18:11.807 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:18:11.807 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:18:11.808 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:18:11.809 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:18:11.809 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:18:11.809 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:18:11.809 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:18:19.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 83 bytes, 0 commands in the stack
2021-02-26 18:18:19.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:18:19.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:18:40.706 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:18:41.810 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:18:41.810 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:18:41.810 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:18:41.811 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:18:41.811 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:18:41.811 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:18:41.811 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:19:10.707 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:19:11.813 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:19:40.708 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:19:41.815 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:20:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:20:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:20:10.708 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:20:11.817 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:20:16.120 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 18:20:16.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:20:16.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:20:16.220 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 189 bytes, 0 commands in the stack
2021-02-26 18:20:16.220 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:20:16.220 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:20:16.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:20:16.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:20:26.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:20:26.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:20:26.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:20:27.083 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:20:27.083 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:20:27.083 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:20:40.709 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:20:41.819 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:20:41.819 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:20:41.819 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:20:41.820 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:20:41.820 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:20:41.820 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:20:41.820 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:21:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:21:10.710 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:21:11.821 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:21:25.083 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 83 bytes, 0 commands in the stack
2021-02-26 18:21:25.084 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:21:25.084 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:21:40.710 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:21:41.823 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:21:41.823 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:21:41.823 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:21:41.824 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:21:41.824 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:21:41.824 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:21:41.824 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:22:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:22:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:22:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:22:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:22:10.710 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:22:11.825 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:22:11.825 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:22:11.826 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:22:11.826 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:22:11.826 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:22:11.826 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:22:11.826 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:22:40.711 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:22:41.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:23:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:23:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:23:10.712 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:23:11.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:23:11.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:23:11.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:23:11.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:23:11.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:23:11.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:23:11.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:23:40.713 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:23:41.830 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:23:41.830 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:23:41.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:23:41.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:23:41.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:23:41.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:23:41.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:24:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:24:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:24:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:24:10.713 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:24:11.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:24:11.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:24:11.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:24:11.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:24:11.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:24:11.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:24:11.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:24:40.714 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:24:41.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:24:41.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:24:41.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:24:41.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:24:41.837 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:24:41.837 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:24:41.837 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:25:10.714 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:25:11.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:25:11.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:25:11.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:25:11.839 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:25:11.839 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:25:11.839 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:25:11.839 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:25:40.715 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:25:41.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:25:41.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:25:41.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:25:41.841 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:25:41.841 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:25:41.841 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:25:41.841 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:26:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:26:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:26:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:26:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:26:10.715 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:26:11.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:26:40.715 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:26:41.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:27:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:27:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:27:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:27:10.716 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:27:11.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:27:11.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:27:11.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:27:11.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:27:11.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:27:11.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:27:11.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:27:40.717 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:27:41.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:27:41.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:27:41.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:27:41.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:27:41.850 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:27:41.850 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:27:41.850 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:28:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:28:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:28:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:28:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:28:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:28:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:28:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:28:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:28:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:28:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:28:10.718 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:28:11.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:28:40.718 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:28:41.852 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:28:41.852 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:28:41.852 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:28:41.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:28:41.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:28:41.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:28:41.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:29:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:29:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:29:10.718 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:29:11.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:29:11.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:29:11.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:29:11.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:29:11.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:29:11.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:29:11.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:29:40.719 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:29:41.857 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:29:41.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:30:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:30:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:30:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:30:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:30:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:30:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:30:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:30:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:30:10.719 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:30:11.860 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:30:11.861 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:30:40.720 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:30:41.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:31:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:31:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:31:10.721 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:31:11.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:31:22.365 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:31:22.365 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:31:22.366 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:31:40.721 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:31:41.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:32:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:32:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:32:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:32:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:32:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:32:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:32:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:32:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:32:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:32:10.724 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:32:11.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:32:11.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:32:40.725 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:32:41.920 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:32:41.920 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:32:41.920 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:32:41.920 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:32:41.921 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:32:41.921 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:32:41.921 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:33:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.502 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.502 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:33:00.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.503 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:33:00.507 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:33:00.507 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:33:00.507 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:33:00.507 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:33:00.508 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.508 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:33:00.509 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:33:00.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:33:00.513 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:33:00.513 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:33:00.513 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:33:00.513 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:33:10.756 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:33:11.922 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:33:11.922 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:33:11.923 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:33:11.923 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:33:11.923 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:33:11.923 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:33:11.923 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:33:40.791 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:33:41.927 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:33:41.928 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:33:41.928 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:33:41.928 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:33:41.928 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:33:41.928 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:33:41.929 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:34:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:34:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:34:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:34:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:34:10.791 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:34:11.930 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:34:40.792 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:34:41.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:34:41.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:34:41.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:34:41.934 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:34:41.934 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:34:41.934 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:34:41.934 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:35:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:35:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:35:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:35:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:35:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:35:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:35:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:35:10.792 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:35:11.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:35:11.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:35:11.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:35:11.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:35:11.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:35:11.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:35:11.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:35:40.792 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:35:41.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:35:41.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:35:41.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:35:41.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:35:41.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:35:41.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:35:41.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:03.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:36:03.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:03.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:36:05.528 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 208 bytes, 0 commands in the stack
2021-02-26 18:36:05.529 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:05.529 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:36:05.529 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:05.529 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-26 18:36:05.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 26 bytes, 0 commands in the stack
2021-02-26 18:36:05.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:05.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:36:06.329 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:36:06.330 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:06.330 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:36:07.927 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:07.927 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:07.928 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:07.928 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:07.928 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:07.932 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 240 bytes, 1 commands in the stack
2021-02-26 18:36:07.932 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:07.932 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:07.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2bb30f13=[B@6d4c05dc, [B@75191197=[B@6f5fc4f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:36:07.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 304 bytes, 1 commands in the stack
2021-02-26 18:36:07.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:07.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2bb30f13=[B@6d4c05dc, [B@75191197=[B@6f5fc4f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:07.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2bb30f13=[B@6d4c05dc, [B@75191197=[B@6f5fc4f, [B@350db015=[B@8a59a8a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:36:07.934 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 36 bytes, 1 commands in the stack
2021-02-26 18:36:07.934 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:07.934 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2bb30f13=[B@6d4c05dc, [B@75191197=[B@6f5fc4f, [B@350db015=[B@8a59a8a}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:07.934 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@2bb30f13=[B@6d4c05dc, [B@75191197=[B@6f5fc4f, [B@350db015=[B@8a59a8a, [B@54a0ca7=[B@2c749fc5}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:07.939 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 17] start execution
2021-02-26 18:36:07.940 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 18:36:07.945 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 18:36:07.945 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 18:36:07.945 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 17] Request connection for {}->http://192.168.31.239:9200
2021-02-26 18:36:07.946 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:36:07.946 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:36:07.946 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:36:07.946 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 17] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 18:36:07.946 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 18:36:07.947 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:36:07.947 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 18:36:07.947 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 17] Attempt 1 to execute request
2021-02-26 18:36:07.947 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 17] Target auth state: UNCHALLENGED
2021-02-26 18:36:07.947 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 17] Proxy auth state: UNCHALLENGED
2021-02-26 18:36:07.947 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1668
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 17] produce content
2021-02-26 18:36:07.948 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 17] Request completed
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1668; pos: 1668; completed: true]
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2062 bytes written
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1668[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"filter":[{"term":{"catalogId":{"value":225,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}}}"
2021-02-26 18:36:07.949 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 18:36:07.950 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 5392 bytes read
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 5304[\r][\n]"
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":29,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":13,"relation":"eq"},"max_score":0.0,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.0,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"2","_score":0.0,"_source":{"skuId":2,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256G[0xffffffe5][0xffffff85][0xffffffa8][0xffffffe7][0xffffffbd][0xffffff91][0xffffffe9][0xffffff80][0xffffff9a][0xffffffef][0xffffffbc][0xffffff88][0xffffffe7][0xffffffa2][0xffffff8e][0xffffffe5][0xffffffb1][0xffffff8f][0xffffffe9][0xffffff99][0xffffffa9][0xffffffe5][0xffffffa5][0xffffff97][0xffffffe9][0xffffffa4][0xffffff90][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":7799.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":0.0,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}}]},"aggregations":{"nested#attrAgg":{"doc_count":61,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":13}]}},{"key":17,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":13}]}},{"key":18,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":13}]}},{"key":8,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2021","doc_count":9}]}},{"key":24,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020","doc_count":9}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":1,"doc_count":9,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","doc_count":9}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"oppo","doc_count":9}]}},{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":13,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":13}]}}]}}}"
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 5304
2021-02-26 18:36:07.984 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(5304)] Response received
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 17] Response received HTTP/1.1 200 OK
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(5304)] Input ready
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 17] Consume content
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 17] Connection can be kept alive indefinitely
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 17] Response processed
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 17] releasing connection
2021-02-26 18:36:07.985 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 18:36:07.986 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:36:07.986 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 18:36:07.986 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 18:36:07.986 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 18:36:07.986 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 5304; pos: 5304; completed: true]
2021-02-26 18:36:07.986 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 18:36:07.995 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:07.996 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:07.996 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-26 18:36:08.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.001 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.001 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.002 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:08.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.020 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.021 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.021 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.027 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.027 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.028 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:08.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.034 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.035 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.036 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:08.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.040 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.041 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.042 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:36:08.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.047 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.048 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.049 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 384 bytes, 1 commands in the stack
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@74210f46=[B@58ebb0f, [B@50f4aa82=[B@d8c86cc}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@74210f46=[B@58ebb0f, [B@50f4aa82=[B@d8c86cc}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@74210f46=[B@58ebb0f, [B@50f4aa82=[B@d8c86cc, [B@712bf304=[B@7458625a, [B@47ee719=[B@1d0b20fb}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:08.268 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.270 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:36:08.271 [ http-nio-9220-exec-10 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:36:08.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@40a32cc9=[B@339626cd, [B@77dedc35=[B@329d8119}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:36:08.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@40a32cc9=[B@339626cd, [B@77dedc35=[B@329d8119}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:36:08.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@40a32cc9=[B@339626cd, [B@77dedc35=[B@329d8119, [B@6b0136e7=[B@689d8312, [B@6abf60c6=[B@36564251}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:36:10.793 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:36:11.941 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:36:11.941 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:36:11.941 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:36:11.941 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:36:11.942 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:36:11.942 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:36:11.942 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:36:36.290 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 18:36:36.291 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:36:36.291 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:36:40.793 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:36:41.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:37:00.093 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.094 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.094 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:37:00.094 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:37:00.095 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.154 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:37:00.154 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:37:00.154 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:37:00.154 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:37:00.266 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.266 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:37:00.267 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:37:00.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:37:00.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:37:00.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:37:00.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:37:00.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:37:10.868 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:37:11.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:37:11.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:37:11.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:37:11.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:37:11.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:37:11.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:37:11.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:37:18.777 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:37:18.777 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:37:18.778 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:37:40.869 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:37:41.949 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:37:41.949 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:37:41.949 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:37:41.949 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:37:41.949 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:37:41.950 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:37:41.950 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:38:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:38:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:38:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:38:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:38:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:38:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:38:10.870 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:38:11.956 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:38:11.984 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:38:11.984 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:38:11.984 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:38:11.984 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:38:11.985 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:38:11.985 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:38:40.871 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:38:41.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:39:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:39:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:39:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:39:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:39:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:39:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:39:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:39:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:39:10.871 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:39:11.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:39:11.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:39:11.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:39:11.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:39:11.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:39:11.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:39:11.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:39:40.872 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:39:42.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:39:42.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:39:42.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:39:42.021 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:39:42.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:39:42.034 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:39:42.034 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:39:42.403 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:39:42.404 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:39:42.404 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:40:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:40:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:40:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:40:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:40:10.935 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:40:12.038 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:40:12.038 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:40:12.039 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:40:12.039 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:40:12.039 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:40:12.039 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:40:12.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:40:21.150 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:40:21.150 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:40:21.150 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:40:40.935 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:40:42.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:41:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:41:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:41:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.157 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:41:00.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:41:00.160 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:41:00.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:41:00.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:41:00.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:41:00.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:41:00.654 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:41:00.654 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:00.655 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:05.607 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:41:05.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:05.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:06.434 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 18:41:06.434 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:06.435 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:10.240 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 18:41:10.240 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:10.240 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:10.443 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 189 bytes, 0 commands in the stack
2021-02-26 18:41:10.443 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:10.444 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:10.444 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:41:10.444 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:41:10.936 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:41:12.083 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:41:12.084 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:41:12.084 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:41:12.084 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:41:12.085 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:41:12.085 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:41:12.085 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:41:40.936 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:41:42.087 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:41:42.087 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:41:42.087 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:41:42.088 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:41:42.088 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:41:42.088 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:41:42.089 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:42:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:42:10.979 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:42:12.090 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:42:12.090 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:42:12.090 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:42:12.090 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:42:12.091 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:42:12.091 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:42:12.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:42:40.979 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:42:42.093 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:42:42.093 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:42:42.093 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:42:42.093 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:42:42.093 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:42:42.094 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:42:42.094 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:43:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:43:11.143 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:43:12.095 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:43:41.143 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:43:42.097 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:44:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:44:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:44:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:44:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:44:11.144 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:44:12.605 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:44:12.606 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:44:41.184 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:44:43.133 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:45:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:45:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:45:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:45:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:45:11.184 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:45:13.353 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:45:41.185 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:45:43.368 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:45:43.368 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:45:43.368 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:45:43.369 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:45:43.369 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:45:43.369 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:45:43.369 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:46:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:46:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:46:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:46:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:46:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:46:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:46:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:46:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:46:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:46:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:46:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:46:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:46:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:46:11.186 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:46:13.370 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:46:41.287 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:46:43.371 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:46:43.371 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:46:43.372 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:46:43.372 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:46:43.372 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:46:43.372 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:46:43.372 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:47:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:47:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:47:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:47:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:47:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:47:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:47:00.035 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.036 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:47:00.036 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:47:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:47:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:47:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:47:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:47:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:47:11.288 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:47:13.373 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:47:13.373 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:47:13.373 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:47:13.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:47:13.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:47:13.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:47:13.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:47:41.289 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:47:43.374 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:48:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:48:06.955 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:48:06.956 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:48:06.956 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:48:11.289 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:48:13.377 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:48:41.557 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:48:43.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:48:43.534 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:48:43.534 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:48:43.534 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:48:43.534 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:48:43.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:48:43.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:49:00.080 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.080 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:49:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:49:00.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:49:00.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:49:00.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:49:00.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:49:00.086 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.086 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:49:00.087 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:49:00.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:49:00.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:49:00.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:49:00.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:49:00.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:49:11.557 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:49:13.537 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:49:13.537 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:49:13.537 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:49:13.537 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:49:13.537 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:49:13.538 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:49:13.538 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:49:41.611 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:49:43.736 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:49:43.736 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:49:43.736 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:49:43.736 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:49:43.737 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:49:43.737 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:49:43.737 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:49:55.477 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:49:55.477 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:49:55.478 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:50:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:50:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:50:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:50:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:50:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:50:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:50:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:50:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:50:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:50:11.766 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:50:13.745 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:50:27.137 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 18:50:27.138 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:50:27.138 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:50:41.766 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:50:43.746 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:50:43.746 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:50:43.746 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:50:43.746 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:50:43.746 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:50:43.747 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:50:43.747 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:51:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:51:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:51:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:51:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:51:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:51:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:51:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:51:11.767 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:51:13.748 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:51:13.748 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:51:13.748 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:51:13.748 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:51:13.749 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:51:13.749 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:51:13.749 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:51:41.768 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:51:43.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:51:43.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:52:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:52:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:52:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:52:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:52:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:52:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:52:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:52:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:52:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:52:11.769 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:52:13.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:52:41.770 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:52:43.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:53:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:53:06.747 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 18:53:06.748 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:53:06.748 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:53:06.951 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 160 bytes, 0 commands in the stack
2021-02-26 18:53:06.951 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:53:06.952 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:53:06.952 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:53:06.952 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-26 18:53:06.952 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 29 bytes, 0 commands in the stack
2021-02-26 18:53:06.952 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 18:53:06.953 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 18:53:11.770 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:53:13.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:53:41.771 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:53:43.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:53:43.881 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:54:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:54:11.771 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:54:13.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:54:13.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:54:13.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:54:13.883 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:54:13.883 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:54:13.883 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:54:13.883 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:54:41.771 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:54:43.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:55:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:55:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:55:11.772 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:55:13.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:55:41.773 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:55:43.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:56:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:56:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:56:11.774 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:56:13.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:56:41.774 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:56:43.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:56:43.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:56:43.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:56:43.895 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:56:43.895 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:56:43.895 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:56:43.895 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:57:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:57:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:57:11.775 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:57:13.897 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:57:41.783 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:57:43.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:57:43.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:57:43.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:57:43.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:57:43.899 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:57:43.899 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:57:43.899 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:58:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:58:11.825 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:58:13.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:58:41.826 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:58:43.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 18:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 18:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 18:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 18:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 18:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 18:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 18:59:11.827 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:59:13.905 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 18:59:41.827 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 18:59:43.907 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:00:00.059 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.080 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:00:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:00:00.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:00:00.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:00:00.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:00:00.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:00:00.086 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.086 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:00:00.086 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:00:00.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:00:00.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:00:00.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:00:00.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:00:00.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:00:11.828 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:00:13.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:00:13.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:00:13.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:00:13.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:00:13.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:00:13.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:00:13.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:00:41.829 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:00:43.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:00:43.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:00:43.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:00:43.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:00:43.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:00:43.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:00:43.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:01:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:01:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:01:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:01:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:01:11.904 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:01:13.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:01:13.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:01:13.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:01:13.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:01:13.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:01:13.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:01:13.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:01:41.904 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:01:43.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:01:43.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:01:43.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:01:43.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:01:43.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:01:43.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:01:43.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:02:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:02:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:02:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:02:11.905 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:02:13.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:02:41.923 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:02:43.928 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:02:43.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:03:00.530 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.531 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:03:00.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.535 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:03:00.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:03:00.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:03:00.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:03:00.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:03:00.541 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.542 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.542 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:03:00.543 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:03:00.543 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:03:00.547 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:03:00.547 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:03:00.547 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:03:00.547 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:03:11.923 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:03:13.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:03:13.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:03:13.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:03:13.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:03:13.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:03:13.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:03:13.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:03:41.923 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:03:43.933 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:03:43.934 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:04:11.924 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:04:13.935 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:04:13.935 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:04:13.935 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:04:13.935 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:04:13.936 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:04:13.936 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:04:13.936 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:04:41.924 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:04:43.937 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:04:43.938 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:05:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:05:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:05:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:05:11.924 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:05:13.938 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:05:13.939 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:05:41.925 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:05:43.940 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:05:43.940 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:05:43.940 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:05:43.940 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:05:43.941 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:05:43.941 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:05:43.941 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:06:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:06:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:06:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:06:11.925 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:06:13.942 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:06:13.942 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:06:13.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:06:13.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:06:13.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:06:13.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:06:13.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:06:41.926 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:06:43.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:06:43.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:06:43.943 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:06:43.944 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:06:43.944 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:06:43.944 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:06:43.944 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:07:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:07:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:07:11.926 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:07:14.240 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:07:14.240 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:07:14.241 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:07:14.241 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:07:14.241 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:07:14.241 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:07:14.241 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:07:41.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:07:44.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:07:44.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:07:44.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:07:44.244 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:07:44.244 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:07:44.244 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:07:44.244 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:08:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:08:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:08:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:08:11.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:08:14.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:08:14.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:08:14.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:08:14.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:08:14.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:08:14.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:08:14.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:08:41.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:08:44.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:09:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:09:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:09:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:09:11.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:09:14.248 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:09:41.928 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:09:44.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:09:44.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:09:44.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:09:44.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:09:44.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:09:44.250 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:09:44.250 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:10:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:10:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:10:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:10:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:10:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:10:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:10:11.929 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:10:14.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:10:14.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:10:14.253 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:10:14.253 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:10:14.253 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:10:14.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:10:14.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:10:41.929 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:10:44.255 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:11:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:11:11.930 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:11:14.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:11:14.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:11:14.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:11:14.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:11:14.258 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:11:14.259 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:11:14.259 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:11:41.930 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:11:44.260 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:12:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:12:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:12:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:12:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:12:11.931 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:12:14.262 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:12:41.960 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:12:44.263 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:13:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:13:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:13:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:13:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:13:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:13:11.962 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:13:14.265 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:13:41.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:13:44.266 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:14:11.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:14:14.268 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:14:14.268 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:14:14.268 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:14:14.269 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:14:14.269 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:14:14.269 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:14:14.269 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:14:41.964 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:14:44.270 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:14:44.270 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:14:44.271 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:14:44.271 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:14:44.271 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:14:44.271 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:14:44.271 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:15:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:15:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:15:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:15:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:15:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:15:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:15:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:15:11.965 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:15:14.272 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:15:14.272 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:15:14.272 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:15:14.272 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:15:14.273 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:15:14.273 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:15:14.273 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:15:41.965 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:15:44.274 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:16:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:16:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:16:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:16:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:16:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:16:12.015 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:16:14.277 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:16:14.277 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:16:14.277 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:16:14.277 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:16:14.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:16:14.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:16:14.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:16:42.015 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:16:44.280 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:17:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:17:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:17:12.016 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:17:14.281 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:17:42.016 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:17:44.282 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:17:44.282 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:17:44.282 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:17:44.283 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:17:44.283 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:17:44.283 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:17:44.283 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:18:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:18:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:18:12.017 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:18:14.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:18:42.017 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:18:44.286 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:19:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:19:12.018 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:19:14.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:19:42.018 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:19:44.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:19:44.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:19:44.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:19:44.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:19:44.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:19:44.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:19:44.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:20:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:20:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:20:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:20:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:20:12.019 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:20:14.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:20:14.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:20:14.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:20:14.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:20:14.290 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:20:14.291 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:20:14.291 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:20:34.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-26 19:20:34.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 19:20:34.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 19:20:34.701 [ springSessionRedisMessageListenerContainer-67 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:34.704 [ springSessionRedisMessageListenerContainer-67 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:34.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:20:34.706 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:20:34.706 [ springSessionRedisMessageListenerContainer-67 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:20:34.709 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 64 bytes, 1 commands in the stack
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 128 bytes, 1 commands in the stack
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f, [B@e355a6f=[B@13f87ca0}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 192 bytes, 1 commands in the stack
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:34.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f, [B@e355a6f=[B@13f87ca0}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:34.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f, [B@e355a6f=[B@13f87ca0}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 19:20:34.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-26 19:20:34.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:20:34.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f, [B@e355a6f=[B@13f87ca0}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:20:34.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@6c912dd=[B@130d7c4f, [B@e355a6f=[B@13f87ca0, [B@5d69dbf8=[B@13cfbec, [B@25fe2b1e=[B@51f18a17}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:20:42.019 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:20:44.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:20:44.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:20:44.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:20:44.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:20:44.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:20:44.293 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:20:44.293 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:21:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 57 bytes, 1 commands in the stack
2021-02-26 19:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[[B@42d42dca], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:21:00.009 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 19:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:21:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:21:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:21:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:21:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:21:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:21:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:21:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:21:12.020 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:21:14.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:21:14.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:21:14.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:21:14.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:21:14.295 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:21:14.295 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:21:14.295 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:21:42.021 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:21:44.297 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:21:44.298 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:21:44.298 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:21:44.298 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:21:44.299 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:21:44.299 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:21:44.299 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:22:00.035 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.035 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:22:00.036 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:22:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:22:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:22:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:22:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:22:00.041 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.041 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:22:00.042 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:22:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:22:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:22:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:22:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:22:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:22:12.022 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:22:14.300 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:22:42.022 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:22:44.302 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:23:12.047 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:23:14.304 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:23:14.304 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:23:14.304 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:23:14.304 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:23:14.305 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:23:14.305 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:23:14.305 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:23:42.048 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:23:44.306 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:23:44.306 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:23:44.306 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:23:44.306 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:23:44.307 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:23:44.307 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:23:44.307 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:24:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:24:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:24:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:24:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:24:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:24:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:24:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:24:12.048 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:24:14.308 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:24:14.308 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:24:14.308 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:24:14.309 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:24:14.309 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:24:14.309 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:24:14.309 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:24:42.048 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:24:44.310 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:25:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:25:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:25:12.049 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:25:14.313 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:25:34.627 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 113 bytes, 0 commands in the stack
2021-02-26 19:25:34.628 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 19:25:34.628 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 19:25:42.049 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:25:44.315 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:25:44.315 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:25:44.315 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:25:44.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:25:44.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:25:44.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:25:44.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:26:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:26:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:26:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:26:12.050 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:26:14.318 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:26:14.318 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:26:14.319 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:26:14.319 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:26:14.319 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:26:14.319 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:26:14.319 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:26:42.050 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:26:44.321 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:27:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:27:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:27:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:27:12.051 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:27:14.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:27:42.051 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:27:44.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:27:44.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:27:44.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:27:44.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:27:44.326 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:27:44.326 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:27:44.326 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:28:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:28:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:28:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:28:12.051 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:28:14.327 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:28:42.052 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:28:44.328 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:28:44.328 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:28:44.328 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:28:44.329 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:28:44.329 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:28:44.329 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:28:44.329 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:29:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:29:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:29:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:29:12.053 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:29:14.330 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:29:42.089 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:29:44.331 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:29:44.332 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:29:44.332 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:29:44.332 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:29:44.333 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:29:44.333 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:29:44.333 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:30:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:30:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:30:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:30:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:30:12.089 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:30:14.414 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:30:14.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:30:14.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:30:14.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:30:14.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:30:14.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:30:14.416 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:30:42.089 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:30:44.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:31:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:31:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:31:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:31:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:31:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:31:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:31:12.248 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:31:14.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:31:42.248 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:31:44.421 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:31:44.421 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:31:44.421 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:31:44.421 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:31:44.421 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:31:44.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:31:44.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:32:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:32:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:32:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:32:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:32:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:32:12.253 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:32:14.424 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: []
2021-02-26 19:32:14.424 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: []
2021-02-26 19:32:14.424 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:32:14.424 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {}
2021-02-26 19:32:14.424 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:32:42.253 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:32:44.425 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: []
2021-02-26 19:32:44.425 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: []
2021-02-26 19:32:44.425 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:32:44.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {}
2021-02-26 19:32:44.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:33:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:33:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:33:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:33:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:33:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:33:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:33:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:33:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:33:12.253 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:33:14.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:33:14.429 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:33:42.253 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:33:44.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:34:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:34:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:34:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:34:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:34:12.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:34:14.432 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:34:42.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:34:44.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:35:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:35:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:35:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:35:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:35:12.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:35:14.436 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:35:42.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:35:44.439 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:35:44.440 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:36:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:36:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:36:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:36:12.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:36:14.442 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:36:42.254 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:36:44.444 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:37:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:37:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:37:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:37:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:37:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:37:12.255 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:37:14.446 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:37:14.446 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:37:14.446 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:37:14.447 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:37:14.447 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:37:14.447 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:37:14.447 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:37:42.255 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:37:44.479 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:37:44.479 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:37:44.479 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:37:44.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:37:44.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:37:44.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:37:44.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:38:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:38:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:38:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:38:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:38:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:38:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:38:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:38:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:38:12.256 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:38:14.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:38:14.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:38:14.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:38:14.480 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:38:14.481 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:38:14.481 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:38:14.481 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:38:42.256 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:38:44.482 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:39:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:39:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:39:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:39:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:39:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:39:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:39:12.257 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:39:14.486 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:39:14.487 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:39:42.257 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:39:44.489 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:39:44.489 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:39:44.489 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:39:44.489 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:39:44.489 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:39:44.490 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:39:44.490 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:40:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:40:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:40:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:40:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:40:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:40:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:40:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:40:12.258 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:40:14.491 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:40:14.491 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:40:14.491 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:40:14.492 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:40:14.492 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:40:14.492 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:40:14.492 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:40:42.258 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:40:44.493 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:41:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:41:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:41:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:41:12.259 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:41:14.495 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:41:14.495 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:41:14.495 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:41:14.495 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:41:14.495 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:41:14.496 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:41:14.496 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:41:42.259 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:41:44.497 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:41:44.497 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:41:44.497 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:41:44.497 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:41:44.498 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:41:44.498 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:41:44.498 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:42:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:42:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:42:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:42:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:42:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:42:12.259 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:42:14.500 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:42:14.500 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:42:14.500 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:42:14.500 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:42:14.500 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:42:14.501 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:42:14.501 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:42:42.260 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:42:44.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:43:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:43:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:43:12.261 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:43:14.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:43:42.261 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:43:44.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:43:44.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:43:44.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:43:44.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:43:44.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:43:44.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:43:44.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:44:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:44:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:44:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:44:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:44:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:44:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:44:12.261 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:44:14.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:44:42.262 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:44:44.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:45:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:45:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:45:12.262 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:45:14.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:45:42.263 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:45:44.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:46:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:46:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:46:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:46:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:46:12.263 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:46:14.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:46:42.263 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:46:44.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:46:44.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:47:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:47:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:47:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:47:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:47:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:47:12.263 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:47:14.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:47:14.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:47:14.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:47:14.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:47:14.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:47:14.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:47:14.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:47:42.263 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:47:44.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:48:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:48:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:48:12.264 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:48:14.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:48:42.264 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:48:44.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:48:44.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:48:44.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:48:44.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:48:44.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:48:44.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:48:44.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:49:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:49:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:49:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:49:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:49:12.282 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:49:14.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:49:14.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:49:14.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:49:14.529 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:49:14.529 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:49:14.529 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:49:14.529 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:49:42.281 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:49:44.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:50:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:50:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:50:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:50:12.281 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:50:14.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:50:14.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:50:14.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:50:14.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:50:14.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:50:14.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:50:14.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:50:42.282 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:50:44.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:51:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:51:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:51:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:51:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:51:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:51:12.282 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:51:14.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:51:14.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:51:14.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:51:14.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:51:14.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:51:14.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:51:14.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:51:42.282 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:51:44.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:51:44.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:51:44.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:51:44.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:51:44.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:51:44.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:51:44.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:52:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:52:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:52:12.283 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:52:14.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:52:14.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:52:14.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:52:14.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:52:14.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:52:14.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:52:14.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:52:42.283 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:52:44.542 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:52:44.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:53:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:53:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:53:12.283 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:53:14.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:53:42.283 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:53:44.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:53:44.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:53:44.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:53:44.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:53:44.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:53:44.549 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:53:44.549 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:54:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:54:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:54:12.284 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:54:14.550 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:54:42.284 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:54:44.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:54:44.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:54:44.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:54:44.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:54:44.552 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:54:44.552 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:54:44.552 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:55:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:55:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:55:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:55:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:55:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:55:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:55:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:55:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:55:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:55:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:55:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:55:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:55:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:55:12.284 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:55:14.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:55:42.285 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:55:44.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:56:12.285 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:56:14.556 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:56:14.557 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:56:42.285 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:56:44.558 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:56:44.558 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:56:44.558 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:56:44.559 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:56:44.559 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:56:44.559 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:56:44.559 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:57:12.286 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:57:14.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:57:14.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:57:14.563 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:57:14.563 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:57:14.563 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:57:14.563 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:57:14.563 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:57:42.301 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:57:44.565 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:57:44.566 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:57:44.566 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:57:44.566 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:57:44.566 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:57:44.567 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:57:44.567 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:58:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:58:12.301 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:58:14.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:58:42.301 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:58:44.571 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:59:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 19:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 19:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 19:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 19:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 19:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 19:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 19:59:12.302 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:59:14.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:59:14.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:59:14.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:59:14.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:59:14.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:59:14.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:59:14.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 19:59:42.302 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 19:59:44.576 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:59:44.576 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 19:59:44.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 19:59:44.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 19:59:44.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 19:59:44.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 19:59:44.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:00:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:00:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:00:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:00:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:00:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:00:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:00:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:00:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:00:12.303 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:00:14.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:00:14.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:00:14.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:00:14.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:00:14.587 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:00:14.587 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:00:14.587 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:00:42.303 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:00:44.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:00:44.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:01:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:01:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:01:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:01:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:01:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:01:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:01:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:01:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:01:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:01:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:01:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:01:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:01:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:01:12.306 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:01:14.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:01:36.579 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 192 bytes, 0 commands in the stack
2021-02-26 20:01:36.580 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:01:36.580 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:01:36.580 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:01:36.580 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-26 20:01:36.581 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 42 bytes, 0 commands in the stack
2021-02-26 20:01:36.581 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:01:36.581 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:01:38.779 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 20:01:38.780 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:01:38.781 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:01:42.306 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:01:44.593 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:01:44.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:01:44.600 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:01:44.601 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:01:44.601 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:01:44.602 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:01:44.602 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:02:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:02:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:02:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:02:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:02:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:02:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:02:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:02:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:02:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:02:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:02:08.594 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 20:02:08.594 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:02:08.594 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:02:12.307 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:02:14.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:02:14.615 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:02:14.615 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:02:14.615 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:02:14.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:02:14.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:02:14.617 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:02:42.307 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:02:44.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:02:44.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:02:44.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:02:44.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:02:44.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:02:44.619 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:02:44.619 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:03:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:03:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:03:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:03:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:03:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:03:12.307 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:03:14.621 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:03:14.622 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:03:14.622 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:03:14.622 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:03:14.623 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:03:14.623 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:03:14.623 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:03:42.308 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:03:44.623 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:03:44.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:03:44.627 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:03:44.627 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:03:44.627 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:03:44.627 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:03:44.627 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:04:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:04:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:04:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:04:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:04:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:04:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:04:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:04:12.309 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:04:14.628 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:04:14.628 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:04:14.628 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:04:14.628 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:04:14.629 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:04:14.629 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:04:14.629 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:04:42.309 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:04:44.634 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:05:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:05:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:05:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:05:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:05:12.310 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:05:14.636 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:05:42.311 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:05:44.638 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:05:44.638 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:05:44.638 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:05:44.638 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:05:44.639 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:05:44.639 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:05:44.639 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:06:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:06:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:06:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:06:12.311 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:06:14.642 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:06:14.643 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:06:36.642 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 20:06:36.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:06:36.645 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:06:38.780 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 20:06:38.781 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 20:06:38.781 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 20:06:42.323 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:06:44.646 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:06:44.646 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:06:44.646 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:06:44.647 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:06:44.647 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:06:44.647 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:06:44.647 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:07:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:07:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:07:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:07:12.323 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:07:14.648 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:07:42.324 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:07:44.650 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:08:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:08:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:08:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:08:12.325 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:08:14.653 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:08:42.326 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:08:44.654 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:09:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:09:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:09:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:09:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:09:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:09:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:09:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:09:12.341 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:09:14.657 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:09:42.341 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:09:44.659 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:09:44.660 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:10:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:10:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:10:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:10:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:10:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:10:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:10:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:10:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:10:12.342 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:10:14.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:10:14.663 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:10:14.663 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:10:14.663 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:10:14.663 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:10:14.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:10:14.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:10:42.342 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:10:44.665 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:11:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:11:12.342 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:11:14.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:11:14.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:11:14.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:11:14.668 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:11:14.668 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:11:14.668 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:11:14.668 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:11:42.343 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:11:44.694 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:11:44.694 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:11:44.694 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:11:44.694 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:11:44.695 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:11:44.695 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:11:44.695 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:12:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:12:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:12:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:12:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:12:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:12:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:12:00.030 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:12:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:12:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:12:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:12:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:12:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:12:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:12:12.343 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:12:14.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:12:14.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:12:14.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:12:14.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:12:14.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:12:14.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:12:14.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:12:42.356 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:12:44.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:13:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:13:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:13:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:13:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:13:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:13:12.356 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:13:14.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:13:42.357 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:13:44.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:13:44.704 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:13:44.704 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:13:44.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:13:44.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:13:44.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:13:44.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:14:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:14:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:14:12.357 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:14:14.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:14:42.358 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:14:44.715 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:14:44.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:14:44.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:14:44.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:14:44.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:14:44.717 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:14:44.717 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:15:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:15:12.359 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:15:14.718 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:15:14.718 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:15:14.719 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:15:14.719 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:15:14.719 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:15:14.719 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:15:14.719 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:15:42.359 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:15:44.720 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:15:44.720 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:15:44.720 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:15:44.720 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:15:44.720 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:15:44.721 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:15:44.721 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:16:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:16:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:16:12.371 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:16:14.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:16:42.371 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:16:44.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:16:44.726 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:16:44.726 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:16:44.726 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:16:44.727 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:16:44.727 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:16:44.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:17:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:17:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:17:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:17:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:17:12.372 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:17:14.731 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:17:14.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:17:42.372 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:17:44.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:17:44.736 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:17:44.736 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:17:44.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:17:44.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:17:44.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:17:44.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:18:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:18:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:18:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:18:12.373 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:18:14.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:18:14.741 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:18:42.373 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:18:44.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:19:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:19:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:19:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:19:12.374 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:19:14.745 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:19:14.745 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:19:14.745 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:19:14.745 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:19:14.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:19:14.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:19:14.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:19:42.374 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:19:44.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:19:44.749 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:20:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:20:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:20:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:20:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:20:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:20:12.405 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:20:14.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:20:42.405 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:20:44.755 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:20:44.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:21:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:21:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:21:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:21:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:21:12.406 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:21:14.757 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:21:14.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:21:42.406 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:21:44.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:21:44.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:21:44.785 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:21:44.785 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:21:44.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:21:44.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:21:44.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:22:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:22:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:22:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:22:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:22:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:22:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:22:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:22:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:22:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:22:12.407 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:22:14.787 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:22:14.787 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:22:14.787 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:22:14.788 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:22:14.788 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:22:14.788 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:22:14.788 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:22:42.407 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:22:44.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:22:44.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:22:44.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:22:44.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:22:44.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:22:44.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:22:44.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:23:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:23:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:23:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:23:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:23:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:23:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:23:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:23:12.408 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:23:14.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:23:42.409 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:23:44.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:23:44.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:23:44.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:23:44.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:23:44.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:23:44.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:23:44.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:24:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:24:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:24:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:24:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:24:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:24:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:24:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:24:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:24:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:24:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:24:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:24:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:24:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:24:12.410 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:24:14.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:24:14.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:24:14.802 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:24:14.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:24:14.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:24:14.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:24:14.804 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:24:42.410 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:24:44.805 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:24:44.806 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:25:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:25:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:25:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:25:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:25:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:25:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:25:12.410 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:25:14.812 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:25:14.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:25:14.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:25:14.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:25:14.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:25:14.814 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:25:14.814 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:25:42.411 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:25:44.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:25:44.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:25:44.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:25:44.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:25:44.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:25:44.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:25:44.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:26:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:26:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:26:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:26:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:26:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:26:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:26:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:26:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:26:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:26:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:26:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:26:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:26:12.411 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:26:14.849 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:26:14.852 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:26:14.853 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:26:14.853 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:26:14.853 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:26:14.853 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:26:14.854 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:26:42.411 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:26:44.855 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:27:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:27:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:27:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:27:12.417 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:27:14.856 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:27:14.857 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:27:42.417 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:27:44.865 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:28:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:28:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:28:12.418 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:28:14.868 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:28:42.418 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:28:44.869 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:28:44.869 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:28:44.869 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:28:44.870 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:28:44.870 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:28:44.870 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:28:44.870 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:29:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:29:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:29:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:29:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:29:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:29:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:29:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:29:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:29:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:29:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:29:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:29:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:29:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:29:12.419 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:29:14.871 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:29:14.871 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:29:14.871 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:29:14.871 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:29:14.871 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:29:14.872 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:29:14.872 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:29:42.420 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:29:44.874 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:29:44.875 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:30:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:30:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:30:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:30:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:30:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:30:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:30:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:30:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:30:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:30:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:30:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:30:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:30:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:30:12.420 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:30:14.877 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:30:42.420 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:30:44.878 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:30:44.879 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:31:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:31:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:31:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:31:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:31:12.421 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:31:14.882 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:31:14.883 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:31:42.422 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:31:44.884 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:31:44.885 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:32:00.037 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.037 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.038 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:32:00.038 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:32:00.038 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:32:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:32:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:32:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:32:00.042 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.043 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:32:00.043 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:32:00.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:32:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:32:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:32:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:32:00.046 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:32:12.432 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:32:14.887 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:32:14.887 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:32:14.887 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:32:14.888 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:32:14.888 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:32:14.888 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:32:14.888 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:32:42.433 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:32:44.890 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:32:44.890 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:32:44.891 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:32:44.892 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:32:44.892 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:32:44.892 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:32:44.892 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:33:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:33:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:33:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:33:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:33:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:33:12.434 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:33:14.894 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:33:42.435 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:33:44.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:33:44.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:33:44.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:33:44.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:33:44.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:33:44.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:33:44.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:34:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:34:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:34:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:34:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:34:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:34:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:34:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:34:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:34:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:34:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:34:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:34:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:34:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:34:12.435 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:34:14.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:34:42.436 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:34:44.910 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:34:44.910 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:34:44.910 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:34:44.910 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:34:44.910 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:34:44.911 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:34:44.911 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:35:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:35:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.027 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:35:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:35:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:35:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:35:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:35:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.033 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:35:00.033 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:35:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:35:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:35:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:35:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:35:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:35:12.436 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:35:14.912 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:35:42.436 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:35:44.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:35:44.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:35:44.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:35:44.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:35:44.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:35:44.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:35:44.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:36:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:36:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:36:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:36:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:36:12.437 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:36:14.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:36:14.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:36:14.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:36:14.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:36:14.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:36:14.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:36:14.918 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:36:42.438 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:36:44.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:36:44.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:36:44.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:36:44.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:36:44.920 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:36:44.920 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:36:44.920 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:37:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:37:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:37:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:37:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:37:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:37:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:37:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:37:12.438 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:37:14.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:37:14.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:37:14.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:37:14.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:37:14.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:37:14.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:37:14.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:37:42.439 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:37:44.951 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:37:44.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:37:44.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:37:44.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:37:44.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:37:44.953 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:37:44.953 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:38:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:38:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:38:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:38:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:38:12.441 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:38:14.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:38:42.442 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:38:44.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:39:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:39:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:39:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:39:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:39:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:39:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:39:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:39:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:39:12.443 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:39:14.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:39:14.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:39:14.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:39:14.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:39:14.957 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:39:14.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:39:14.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:39:42.443 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:39:44.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:39:44.961 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:39:44.962 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:39:44.962 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:39:44.962 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:39:44.963 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:39:44.963 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:40:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:40:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:40:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:40:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:40:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:40:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:40:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:40:12.443 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:40:14.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:40:14.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:40:14.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:40:14.965 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:40:14.965 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:40:14.965 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:40:14.965 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:40:42.444 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:40:44.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:41:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:41:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:41:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:41:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:41:12.444 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:41:14.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:41:42.445 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:41:44.997 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:41:44.998 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:42:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:42:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:42:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:42:12.446 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:42:14.999 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:42:42.446 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:42:45.001 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:43:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:43:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:43:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:43:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:43:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:43:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:43:12.447 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:43:15.002 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:43:42.447 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:43:45.004 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:43:45.004 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:43:45.004 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:43:45.004 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:43:45.004 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:43:45.005 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:43:45.005 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:44:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:44:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:44:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:44:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:44:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:44:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:44:12.447 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:44:15.007 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:44:15.008 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:44:42.448 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:44:45.010 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:45:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:45:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:45:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:45:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:45:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:45:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:45:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:45:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:45:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:45:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:45:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:45:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:45:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:45:12.461 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:45:15.012 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:45:42.462 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:45:45.013 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:45:45.013 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:45:45.013 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:45:45.013 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:45:45.013 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:45:45.014 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:45:45.014 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:46:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:46:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:46:12.462 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:46:15.016 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:46:42.462 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:46:45.017 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:47:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:47:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:47:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:47:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:47:12.464 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:47:15.019 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:47:15.019 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:47:15.019 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:47:15.019 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:47:15.020 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:47:15.020 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:47:15.020 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:47:42.464 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:47:45.020 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:47:45.021 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:48:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:48:12.467 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:48:15.026 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:48:15.027 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:48:42.473 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:48:45.028 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:48:45.028 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:48:45.029 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:48:45.029 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:48:45.029 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:48:45.030 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:48:45.030 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:49:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:49:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:49:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:49:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:49:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:49:12.473 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:49:15.033 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:49:42.474 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:49:45.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:50:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:50:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:50:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:50:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:50:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:50:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:50:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:50:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:50:12.474 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:50:15.035 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:50:15.036 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:50:15.036 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:50:15.036 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:50:15.037 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:50:15.037 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:50:15.037 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:50:42.475 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:50:45.040 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:51:12.475 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:51:15.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:51:42.476 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:51:45.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:51:45.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:51:45.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:51:45.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:51:45.043 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:51:45.044 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:51:45.044 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:52:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:52:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:52:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:52:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:52:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:52:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:52:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:52:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:52:12.476 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:52:15.045 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:52:42.476 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:52:45.065 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:52:45.066 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:53:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:53:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:53:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:53:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:53:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:53:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:53:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:53:12.477 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:53:15.091 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:53:15.092 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:53:42.477 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:53:45.094 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:54:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:54:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:54:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:54:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:54:12.479 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:54:15.103 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:54:15.103 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:54:15.103 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:54:15.103 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:54:15.103 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:54:15.104 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:54:15.104 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:54:42.479 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:54:45.107 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:55:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:55:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:55:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:55:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:55:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:55:12.480 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:55:15.111 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:55:15.112 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:55:15.112 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:55:15.112 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:55:15.112 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:55:15.113 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:55:15.113 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:55:42.481 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:55:45.115 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:56:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:56:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:56:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:56:12.487 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:56:15.117 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:56:42.492 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:56:45.118 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:57:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:57:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:57:12.493 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:57:15.120 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:57:15.120 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:57:15.120 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:57:15.120 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:57:15.120 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:57:15.121 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:57:15.121 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:57:42.494 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:57:45.145 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:57:45.146 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:57:45.146 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:57:45.146 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:57:45.147 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:57:45.147 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:57:45.147 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:58:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:58:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:58:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:58:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:58:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:58:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:58:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:58:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:58:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:58:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:58:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:58:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:58:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:58:12.494 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:58:15.148 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:58:15.148 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:58:15.149 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:58:15.149 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:58:15.149 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:58:15.149 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:58:15.149 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:58:42.495 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:58:45.169 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:58:45.170 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:58:45.170 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:58:45.171 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:58:45.171 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:58:45.171 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:58:45.171 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:59:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:59:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:59:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 20:59:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 20:59:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 20:59:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 20:59:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 20:59:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 20:59:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 20:59:12.495 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:59:15.187 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:59:15.188 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 20:59:42.496 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 20:59:45.189 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:00:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:00:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:00:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:00:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:00:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:00:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:00:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:00:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:00:12.496 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:00:15.190 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:00:15.190 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:00:15.190 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:00:15.191 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:00:15.191 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:00:15.191 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:00:15.191 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:00:42.503 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:00:45.192 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:00:45.192 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:00:45.192 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:00:45.192 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:00:45.192 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:00:45.193 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:00:45.193 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:01:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:01:12.504 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:01:15.195 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:01:42.504 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:01:45.198 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:02:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:02:12.504 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:02:15.200 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:02:15.200 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:02:15.200 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:02:15.201 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:02:15.201 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:02:15.201 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:02:15.201 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:02:42.506 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:02:45.203 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:03:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:03:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:03:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:03:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:03:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:03:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:03:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:03:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:03:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:03:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:03:12.507 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:03:15.205 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:03:15.205 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:03:15.205 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:03:15.205 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:03:15.205 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:03:15.206 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:03:15.206 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:03:42.507 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:03:45.207 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:04:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:04:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:04:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:04:12.523 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:04:15.209 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:04:15.209 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:04:15.209 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:04:15.209 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:04:15.209 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:04:15.210 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:04:15.210 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:04:42.527 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:04:45.212 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:05:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:05:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:05:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:05:12.537 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:05:15.213 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:05:42.538 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:05:45.214 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:05:45.214 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:05:45.214 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:05:45.215 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:05:45.215 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:05:45.215 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:05:45.215 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:06:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:06:12.539 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:06:15.222 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:06:15.223 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:06:15.223 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:06:15.224 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:06:15.224 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:06:15.224 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:06:15.224 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:06:42.539 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:06:45.225 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:06:45.225 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:06:45.225 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:06:45.225 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:06:45.225 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:06:45.226 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:06:45.226 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:07:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:07:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:07:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:07:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:07:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:07:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:07:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:07:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:07:12.540 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:07:15.228 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:07:42.568 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:07:45.230 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:08:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:08:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:08:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:08:12.570 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:08:15.232 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:08:15.232 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:08:15.232 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:08:15.233 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:08:15.233 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:08:15.233 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:08:15.233 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:08:42.570 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:08:45.235 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:09:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:09:00.027 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:09:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:09:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:09:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:09:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:09:00.030 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:09:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:09:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:09:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:09:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:09:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:09:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:09:12.571 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:09:15.239 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:09:15.240 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:09:42.571 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:09:45.242 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:09:45.242 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:09:45.242 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:09:45.242 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:09:45.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:09:45.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:09:45.243 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:10:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:10:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:10:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:10:12.587 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:10:15.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:10:15.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:10:15.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:10:15.245 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:10:15.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:10:15.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:10:15.246 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:10:42.596 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:10:45.247 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:11:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:11:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:11:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:11:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:11:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:11:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:11:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:11:12.604 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:11:15.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:11:15.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:11:15.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:11:15.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:11:15.249 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:11:15.250 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:11:15.250 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:11:42.615 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:11:45.252 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:11:45.253 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:12:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:12:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:12:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:12:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:12:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:12:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:12:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:12:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:12:12.616 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:12:15.254 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:12:42.616 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:12:45.257 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:13:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:13:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:13:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:13:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:13:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:13:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:13:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:13:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:13:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:13:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:13:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:13:12.616 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:13:15.259 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:13:15.260 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:13:15.261 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:13:15.262 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:13:15.262 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:13:15.262 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:13:15.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:13:42.617 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:13:45.264 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:13:45.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:13:45.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:13:45.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:13:45.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:13:45.266 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:13:45.266 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:14:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:14:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:14:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:14:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:14:12.617 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:14:15.268 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:14:15.269 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:14:15.269 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:14:15.270 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:14:15.270 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:14:15.270 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:14:15.270 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:14:42.633 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:14:45.272 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:15:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:15:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:15:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:15:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:15:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:15:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:15:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:15:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:15:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:15:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:15:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:15:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:15:12.634 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:15:15.274 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:15:42.634 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:15:45.275 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:15:45.275 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:15:45.275 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:15:45.276 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:15:45.276 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:15:45.276 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:15:45.276 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:16:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:16:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:16:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:16:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:16:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:16:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:16:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:16:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:16:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:16:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:16:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:16:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:16:12.635 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:16:15.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:16:15.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:16:15.278 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:16:15.279 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:16:15.279 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:16:15.279 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:16:15.279 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:16:42.649 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:16:45.283 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:16:45.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:16:45.284 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:16:45.285 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:16:45.285 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:16:45.285 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:16:45.285 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:17:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:17:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:17:12.650 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:17:15.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:17:15.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:17:15.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:17:15.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:17:15.287 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:17:15.288 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:17:15.288 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:17:42.686 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:17:45.289 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:18:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:18:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:18:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:18:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:18:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:18:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:18:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:18:12.687 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:18:15.291 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:18:15.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:18:15.292 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:18:15.293 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:18:15.293 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:18:15.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:18:15.294 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:18:42.687 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:18:45.315 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:18:45.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:18:45.316 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:18:45.317 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:18:45.318 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:18:45.318 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:18:45.318 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:19:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:19:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:19:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:19:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:19:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:19:12.698 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:19:15.322 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:19:15.322 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:19:15.322 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:19:15.322 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:19:15.322 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:19:15.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:19:15.323 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:19:42.698 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:19:45.325 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:20:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:20:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:20:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:20:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:20:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:20:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:20:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:20:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:20:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:20:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:20:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:20:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:20:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:20:12.700 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:20:15.334 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:20:15.334 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:20:15.334 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:20:15.336 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:20:15.336 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:20:15.336 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:20:15.338 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:20:42.701 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:20:45.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:20:45.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:20:45.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:20:45.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:20:45.340 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:20:45.340 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:20:45.340 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:21:12.701 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:21:15.346 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:21:15.347 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:21:42.709 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:21:45.349 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:21:45.349 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:21:45.349 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:21:45.349 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:21:45.350 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:21:45.350 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:21:45.350 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:22:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:22:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:22:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:22:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:22:12.709 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:22:15.355 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:22:15.355 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:22:15.355 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:22:15.355 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:22:15.356 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:22:15.356 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:22:15.356 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:22:42.731 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:22:45.357 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:22:45.357 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:22:45.357 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:22:45.357 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:22:45.358 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:22:45.358 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:22:45.358 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:23:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:23:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:23:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:23:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:23:12.731 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:23:15.360 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:23:42.745 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:23:45.362 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:23:45.363 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:24:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:24:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:24:12.745 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:24:15.368 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:24:15.368 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:24:15.368 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:24:15.368 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:24:15.369 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:24:15.369 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:24:15.370 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:24:42.746 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:24:45.382 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:24:45.382 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:24:45.383 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:24:45.384 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:24:45.384 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:24:45.384 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:24:45.384 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:25:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:25:12.746 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:25:15.386 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:25:15.386 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:25:15.387 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:25:15.387 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:25:15.387 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:25:15.387 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:25:15.387 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:25:42.747 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:25:45.411 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:25:45.411 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:25:45.413 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:25:45.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:25:45.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:25:45.415 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:25:45.416 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:26:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:26:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:26:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:26:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:26:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:26:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:26:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:26:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:26:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:26:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:26:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:26:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:26:12.747 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:26:15.418 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:26:42.748 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:26:45.419 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:26:45.419 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:26:45.419 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:26:45.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:26:45.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:26:45.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:26:45.420 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:27:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:27:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:27:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:27:12.749 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:27:15.422 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:27:42.750 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:27:45.423 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:28:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:28:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:28:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:28:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:28:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:28:12.751 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:28:15.425 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:28:15.425 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:28:15.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:28:15.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:28:15.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:28:15.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:28:15.426 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:28:42.752 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:28:45.428 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.051 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.051 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:29:00.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:29:00.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:29:00.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:29:00.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:29:00.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:29:00.055 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:29:12.753 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:29:15.430 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:29:15.430 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:29:15.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:29:15.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:29:15.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:29:15.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:29:15.431 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:29:42.753 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:29:45.433 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:30:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:30:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:30:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:30:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:30:12.753 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:30:15.435 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:30:42.754 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:30:45.438 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:31:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:31:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:31:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:31:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:31:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:31:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:31:12.773 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:31:15.452 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:31:15.453 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:31:42.774 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:31:45.454 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:32:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:32:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:32:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:32:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:32:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:32:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:32:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:32:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:32:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:32:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:32:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:32:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:32:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:32:12.775 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:32:15.456 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:32:42.801 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:32:45.458 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:32:45.458 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:32:45.458 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:32:45.458 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:32:45.459 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:32:45.459 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:32:45.459 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:33:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:33:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:33:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:33:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:33:12.802 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:33:15.460 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:33:15.460 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:33:15.460 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:33:15.460 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:33:15.461 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:33:15.461 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:33:15.461 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:33:42.803 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:33:45.463 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:33:45.464 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:34:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:34:12.803 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:34:15.465 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:34:15.465 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:34:15.465 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:34:15.466 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:34:15.466 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:34:15.466 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:34:15.466 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:34:42.804 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:34:45.468 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:34:45.469 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:35:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:35:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:35:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:35:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:35:12.805 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:35:15.471 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:35:42.805 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:35:45.472 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:36:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:36:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:36:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:36:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:36:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:36:12.805 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:36:15.473 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:36:15.473 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:36:15.473 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:36:15.473 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:36:15.474 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:36:15.474 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:36:15.474 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:36:42.805 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:36:45.476 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:37:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:37:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:37:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:37:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:37:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:37:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:37:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:37:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:37:12.806 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:37:15.477 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:37:42.807 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:37:45.479 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:38:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:38:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:38:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:38:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:38:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:38:12.807 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:38:15.481 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:38:42.808 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:38:45.488 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:38:45.488 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:38:45.488 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:38:45.488 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:38:45.488 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:38:45.489 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:38:45.489 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:39:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:39:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:39:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:39:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:39:12.808 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:39:15.490 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:39:42.809 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:39:45.491 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:39:45.491 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:39:45.492 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:39:45.492 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:39:45.492 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:39:45.492 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:39:45.492 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:40:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:40:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:40:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:40:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:40:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:40:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:40:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:40:12.831 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:40:15.494 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:40:42.832 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:40:45.495 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:40:45.495 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:40:45.495 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:40:45.495 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:40:45.495 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:40:45.496 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:40:45.496 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:41:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:41:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:41:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:41:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:41:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:41:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:41:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:41:12.832 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:41:15.498 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:41:42.836 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:41:45.500 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:42:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:42:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:42:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:42:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:42:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:42:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:42:12.836 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:42:15.501 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:42:42.837 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:42:45.502 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:42:45.502 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:42:45.502 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:42:45.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:42:45.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:42:45.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:42:45.503 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:43:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:43:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:43:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:43:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:43:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:43:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:43:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:43:12.837 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:43:15.504 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:43:42.854 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:43:45.505 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:43:45.505 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:43:45.505 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:43:45.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:43:45.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:43:45.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:43:45.506 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:44:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:44:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:44:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:44:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:44:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:44:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:44:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:44:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:44:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:44:12.855 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:44:15.507 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:44:15.507 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:44:15.507 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:44:15.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:44:15.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:44:15.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:44:15.508 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:44:42.855 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:44:45.509 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:45:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:45:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:45:12.855 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:45:15.511 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:45:15.512 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:45:42.870 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:45:45.514 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:46:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:46:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:46:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:46:12.890 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:46:15.515 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:46:42.891 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:46:45.516 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:46:45.517 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:46:45.517 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:46:45.517 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:46:45.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:46:45.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:46:45.518 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:47:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:47:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:47:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:47:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:47:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:47:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:47:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:47:12.891 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:47:15.520 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:47:42.891 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:47:45.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:47:45.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:47:45.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:47:45.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:47:45.521 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:47:45.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:47:45.522 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:48:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:48:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:48:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:48:12.892 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:48:15.523 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:48:15.524 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:48:42.893 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:48:45.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:49:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:49:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:49:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:49:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:49:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:49:12.893 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:49:15.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:49:15.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:49:15.526 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:49:15.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:49:15.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:49:15.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:49:15.527 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:49:42.894 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:49:45.528 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:50:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:50:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:50:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:50:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:50:00.030 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:50:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:50:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:50:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:50:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:50:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:50:12.894 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:50:15.530 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:50:42.904 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:50:45.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:50:45.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:50:45.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:50:45.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:50:45.531 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:50:45.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:50:45.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:51:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:51:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:51:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:51:12.905 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:51:15.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:51:15.532 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:51:15.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:51:15.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:51:15.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:51:15.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:51:15.533 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:51:42.906 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:51:45.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:52:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:52:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:52:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:52:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:52:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:52:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:52:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:52:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:52:12.906 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:52:15.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:52:42.907 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:52:45.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:52:45.537 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:52:45.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:52:45.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:52:45.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:52:45.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:52:45.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:53:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:53:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:53:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:53:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:53:12.907 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:53:15.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:53:15.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:53:15.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:53:15.540 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:53:15.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:53:15.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:53:15.541 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:53:42.908 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:53:45.543 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:54:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:54:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:54:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:54:12.909 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:54:15.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:54:15.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:54:15.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:54:15.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:54:15.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:54:15.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:54:15.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:54:42.909 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:54:45.555 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:54:45.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:55:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:55:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:55:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:55:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:55:12.909 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:55:15.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:55:15.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:55:15.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:55:15.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:55:15.556 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:55:15.557 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:55:15.557 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:55:42.910 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:55:45.559 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:56:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:56:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:56:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:56:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:56:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:56:12.911 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:56:15.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:56:15.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:56:15.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:56:15.561 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:56:15.562 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:56:15.562 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:56:15.562 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:56:42.916 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:56:45.568 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:56:45.568 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:56:45.568 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:56:45.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:56:45.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:56:45.569 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:56:45.570 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:57:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:57:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:57:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:57:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:57:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:57:12.917 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:57:15.572 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:57:42.917 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:57:45.574 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:58:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:58:12.918 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:58:15.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:58:15.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:58:15.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:58:15.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:58:15.575 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:58:15.576 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:58:15.576 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:58:42.919 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:58:45.577 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:59:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 21:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 21:59:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 21:59:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 21:59:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 21:59:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 21:59:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 21:59:12.919 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:59:15.579 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:59:15.579 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:59:15.579 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:59:15.579 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:59:15.579 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:59:15.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:59:15.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 21:59:42.920 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 21:59:45.580 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 21:59:45.581 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:00:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:00:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:00:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:00:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:00:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:00:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:00:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:00:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:00:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:00:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:00:12.920 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:00:15.583 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:00:42.921 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:00:45.584 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:00:45.585 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:01:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:01:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:01:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:01:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:01:12.922 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:01:15.586 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:01:42.923 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:01:45.588 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:02:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:02:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:02:12.923 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:02:15.589 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:02:42.924 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:02:45.590 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:02:45.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:03:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:03:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:03:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:03:12.924 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:03:15.591 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:03:15.592 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:03:42.925 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:03:45.594 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:04:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:04:12.926 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:04:15.595 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:04:42.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:04:45.597 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:05:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:05:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:05:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:05:12.927 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:05:15.599 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:05:15.600 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:05:42.928 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:05:45.601 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:05:45.601 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:05:45.601 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:05:45.602 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:05:45.602 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:05:45.603 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:05:45.603 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:06:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:06:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:06:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:06:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:06:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:06:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:06:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:06:12.928 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:06:15.604 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:06:42.929 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:06:45.607 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:07:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:07:00.000 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:07:00.000 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:07:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:07:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:07:12.929 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:07:15.608 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:07:15.608 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:07:15.608 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:07:15.608 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:07:15.609 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:07:15.609 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:07:15.609 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:07:42.930 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:07:45.610 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:07:45.611 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:08:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:08:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:08:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:08:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:08:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:08:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:08:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:08:12.931 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:08:15.612 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:08:42.931 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:08:45.614 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:08:45.615 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:09:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:09:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:09:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:09:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:09:12.932 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:09:15.616 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:09:15.617 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:09:42.932 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:09:45.618 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:09:45.618 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:09:45.618 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:09:45.618 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:09:45.618 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:09:45.619 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:09:45.619 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:10:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:10:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:10:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:10:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:10:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:10:12.933 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:10:15.620 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:10:42.933 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:10:45.622 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:10:45.622 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:10:45.622 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:10:45.623 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:10:45.623 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:10:45.623 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:10:45.623 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:11:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:11:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:11:12.933 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:11:15.624 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:11:15.625 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:11:42.934 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:11:45.627 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:12:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:12:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:12:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:12:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:12:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:12:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:12:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:12:12.935 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:12:15.629 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:12:15.629 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:12:15.629 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:12:15.629 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:12:15.629 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:12:15.630 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:12:15.630 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:12:42.935 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:12:45.631 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:12:45.631 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:12:45.631 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:12:45.631 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:12:45.632 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:12:45.632 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:12:45.632 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:13:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:13:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:13:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:13:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:13:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:13:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:13:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:13:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:13:12.935 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:13:15.633 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:13:15.633 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:13:15.633 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:13:15.633 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:13:15.634 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:13:15.634 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:13:15.634 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:13:42.936 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:13:45.635 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:14:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:14:12.937 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:14:15.637 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:14:15.637 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:14:15.637 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:14:15.638 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:14:15.638 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:14:15.638 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:14:15.638 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:14:42.937 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:14:45.639 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:15:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:15:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:15:12.938 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:15:15.641 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:15:42.939 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:15:45.642 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:16:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:16:12.940 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:16:15.643 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:16:42.940 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:16:45.645 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:17:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:17:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:17:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:17:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:17:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:17:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:17:12.941 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:17:15.646 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:17:42.941 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:17:45.647 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:18:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:18:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:18:12.941 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:18:15.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:18:15.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:18:15.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:18:15.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:18:15.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:18:15.650 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:18:15.650 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:18:42.942 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:18:45.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:18:45.652 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:19:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:19:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:19:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:19:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:19:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:19:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:19:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:19:12.942 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:19:15.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:19:15.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:19:15.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:19:15.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:19:15.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:19:15.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:19:15.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:19:42.943 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:19:45.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:20:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:20:12.943 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:20:15.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:20:42.944 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:20:45.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:21:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:21:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:21:12.944 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:21:15.662 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:21:15.663 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:21:42.945 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:21:45.664 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:22:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:22:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:22:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:22:12.945 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:22:15.666 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:22:42.946 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:22:45.667 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:23:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:23:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:23:12.946 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:23:15.669 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:23:15.669 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:23:15.669 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:23:15.669 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:23:15.669 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:23:15.670 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:23:15.670 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:23:42.946 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:23:45.672 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:24:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:24:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:24:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:24:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:24:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:24:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:24:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:24:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:24:12.947 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:24:15.673 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:24:15.673 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:24:15.673 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:24:15.674 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:24:15.674 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:24:15.674 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:24:15.674 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:24:42.948 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:24:45.675 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:25:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:25:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:25:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:25:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:25:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:25:12.948 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:25:15.677 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:25:42.949 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:25:45.679 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:26:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:26:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:26:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:26:12.949 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:26:15.681 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:26:15.681 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:26:15.681 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:26:15.681 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:26:15.681 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:26:15.682 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:26:15.682 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:26:42.950 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:26:45.684 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:26:45.684 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:26:45.684 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:26:45.684 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:26:45.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:26:45.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:26:45.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:27:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:27:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:27:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:27:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:27:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:27:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:27:12.950 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:27:15.685 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:27:15.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:27:42.951 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:27:45.686 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:28:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:28:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:28:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:28:12.951 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:28:15.687 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:28:42.952 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:28:45.689 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:29:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:29:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:29:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:29:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:29:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:29:12.953 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:29:15.691 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:29:42.953 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:29:45.692 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:30:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:30:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:30:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:30:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:30:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:30:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:30:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:30:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:30:12.954 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:30:15.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:30:42.955 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:30:45.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:30:45.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:30:45.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:30:45.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:30:45.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:30:45.695 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:30:45.695 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:31:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:31:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:31:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:31:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:31:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:31:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:31:12.955 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:31:15.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:31:42.955 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:31:45.698 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:31:45.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:32:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:32:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:32:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:32:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:32:12.956 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:32:15.699 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:32:15.700 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:32:42.956 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:32:45.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:32:45.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:32:45.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:32:45.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:32:45.701 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:32:45.702 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:32:45.702 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:33:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:33:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:33:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:33:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:33:12.957 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:33:15.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:33:15.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:33:15.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:33:15.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:33:15.703 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:33:15.704 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:33:15.704 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:33:42.957 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:33:45.705 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:34:12.957 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:34:15.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:34:15.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:34:15.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:34:15.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:34:15.707 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:34:15.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:34:15.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:34:42.958 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:34:45.708 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:35:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:35:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:35:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:35:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:35:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:35:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:35:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:35:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:35:12.959 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:35:15.710 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:35:42.960 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:35:45.712 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:36:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:36:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:36:12.961 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:36:15.714 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:36:42.961 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:36:45.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:37:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:37:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:37:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:37:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:37:12.962 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:37:15.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:37:15.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:37:15.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:37:15.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:37:15.716 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:37:15.717 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:37:15.717 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:37:42.962 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:37:45.719 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:37:45.719 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:37:45.719 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:37:45.719 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:37:45.720 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:37:45.720 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:37:45.720 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:38:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:38:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:38:12.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:38:15.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:38:42.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:38:45.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:38:45.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:38:45.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:38:45.721 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:38:45.722 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:38:45.722 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:38:45.722 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:39:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:39:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:39:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:39:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:39:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:39:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:39:12.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:39:15.723 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:39:42.964 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:39:45.724 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:40:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:40:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:40:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:40:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:40:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:40:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:40:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:40:12.964 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:40:15.725 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:40:42.965 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:40:45.728 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:41:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:41:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:41:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:41:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:41:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:41:12.966 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:41:15.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:41:42.966 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:41:45.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:42:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:42:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:42:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:42:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:42:12.966 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:42:15.731 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:42:15.731 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:42:15.731 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:42:15.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:42:15.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:42:15.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:42:15.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:42:42.966 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:42:45.733 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:43:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:43:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:43:12.967 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:43:15.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:43:15.736 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:43:42.967 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:43:45.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:43:45.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:43:45.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:43:45.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:43:45.737 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:43:45.738 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:43:45.738 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:44:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:44:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:44:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:44:12.968 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:44:15.739 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:44:15.739 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:44:15.739 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:44:15.739 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:44:15.739 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:44:15.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:44:15.740 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:44:42.969 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:44:45.741 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:44:45.741 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:44:45.741 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:44:45.741 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:44:45.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:44:45.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:44:45.742 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:45:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:45:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:45:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:45:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:45:12.970 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:45:15.743 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:45:15.743 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:45:15.743 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:45:15.743 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:45:15.744 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:45:15.744 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:45:15.744 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:45:42.970 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:45:45.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:45:45.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:45:45.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:45:45.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:45:45.746 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:45:45.747 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:45:45.747 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:46:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:46:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:46:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:46:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:46:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:46:12.971 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:46:15.748 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:46:15.749 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:46:42.971 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:46:45.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:46:45.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:46:45.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:46:45.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:46:45.751 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:46:45.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:46:45.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:47:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:47:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:47:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:47:12.972 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:47:15.752 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:47:42.973 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:47:45.754 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:47:45.754 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:47:45.754 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:47:45.754 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:47:45.755 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:47:45.755 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:47:45.755 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:48:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:48:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:48:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:48:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:48:12.974 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:48:15.756 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:48:42.974 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:48:45.758 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:49:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:49:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:49:12.974 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:49:15.759 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:49:15.760 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:49:42.974 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:49:45.762 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:49:45.763 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:50:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:50:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:50:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:50:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:50:12.975 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:50:15.765 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:50:42.976 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:50:45.766 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:50:45.767 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:51:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:51:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:51:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:51:12.976 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:51:15.768 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:51:15.769 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:51:42.977 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:51:45.770 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:52:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:52:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:52:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:52:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:52:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:52:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:52:12.978 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:52:15.772 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:52:42.978 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:52:45.774 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:52:45.775 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:53:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:53:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:53:12.979 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:53:15.777 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:53:15.778 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:53:42.979 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:53:45.780 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:54:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:54:12.980 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:54:15.783 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:54:15.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:54:42.980 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:54:45.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:54:45.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:54:45.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:54:45.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:54:45.784 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:54:45.785 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:54:45.785 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:55:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:55:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:55:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:55:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:55:12.980 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:55:15.786 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:55:15.787 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:55:42.980 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:55:45.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:55:45.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:55:45.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:55:45.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:55:45.789 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:55:45.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:55:45.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:56:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:56:12.981 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:56:15.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:56:15.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:56:15.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:56:15.790 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:56:15.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:56:15.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:56:15.791 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:56:42.981 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:56:45.793 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:57:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:57:12.982 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:57:15.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:57:15.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:57:15.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:57:15.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:57:15.794 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:57:15.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:57:15.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:57:42.983 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:57:45.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:57:45.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:57:45.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:57:45.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:57:45.795 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:57:45.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:57:45.796 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:58:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:58:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:58:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:58:12.983 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:58:15.797 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:58:42.983 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:58:45.799 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:59:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 22:59:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 22:59:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 22:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 22:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 22:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 22:59:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 22:59:12.984 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:59:15.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:59:15.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:59:15.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:59:15.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:59:15.801 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:59:15.802 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:59:15.802 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 22:59:42.984 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 22:59:45.803 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:00:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:00:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:00:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:00:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:00:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:00:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:00:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:00:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:00:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:00:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:00:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:00:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:00:12.985 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:00:15.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:00:15.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:00:15.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:00:15.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:00:15.805 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:00:15.806 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:00:15.806 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:00:42.986 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:00:45.808 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:00:45.808 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:00:45.808 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:00:45.808 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:00:45.808 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:00:45.809 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:00:45.809 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:01:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:01:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:01:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:01:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:01:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:01:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:01:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:01:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:01:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:01:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:01:12.986 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:01:15.810 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:01:15.810 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:01:15.810 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:01:15.810 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:01:15.810 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:01:15.811 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:01:15.811 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:01:42.987 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:01:45.813 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:02:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:02:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:02:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:02:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:02:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:02:12.987 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:02:15.815 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:02:15.815 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:02:15.815 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:02:15.815 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:02:15.815 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:02:15.816 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:02:15.816 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:02:42.988 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:02:45.817 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:02:45.817 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:02:45.817 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:02:45.817 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:02:45.817 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:02:45.818 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:02:45.818 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:03:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:03:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:03:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:03:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:03:12.989 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:03:15.827 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:03:42.990 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:03:45.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:03:45.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:03:45.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:03:45.828 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:03:45.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:03:45.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:03:45.829 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:04:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:04:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:04:12.990 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:04:15.830 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:04:15.830 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:04:15.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:04:15.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:04:15.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:04:15.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:04:15.831 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:04:42.991 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:04:45.833 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:05:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:05:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:05:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:05:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:05:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:05:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:05:12.991 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:05:15.834 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:05:42.992 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:05:45.835 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:06:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:06:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:06:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:06:12.993 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:06:15.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:06:15.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:06:15.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:06:15.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:06:15.836 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:06:15.837 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:06:15.837 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:06:42.994 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:06:45.838 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:07:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:07:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:07:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:07:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:07:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:07:12.994 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:07:15.840 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:07:15.841 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:07:42.995 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:07:45.842 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:08:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:08:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:08:12.995 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:08:15.843 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:08:42.996 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:08:45.845 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:09:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:09:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:09:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:09:12.997 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:09:15.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:09:15.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:09:15.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:09:15.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:09:15.846 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:09:15.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:09:15.847 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:09:42.997 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:09:45.848 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:10:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:10:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:10:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:10:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:10:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:10:12.998 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:10:15.849 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:10:15.850 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:10:42.998 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:10:45.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:10:45.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:10:45.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:10:45.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:10:45.851 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:10:45.852 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:10:45.852 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:11:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:11:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:11:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:11:12.999 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:11:15.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:11:15.853 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:11:15.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:11:15.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:11:15.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:11:15.854 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:11:15.855 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:11:43.000 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:11:45.856 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:11:45.856 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:11:45.856 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:11:45.856 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:11:45.856 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:11:45.857 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:11:45.857 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:12:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:12:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:12:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:12:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:12:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:12:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:12:13.000 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:12:15.858 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:12:15.859 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:12:43.000 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:12:45.861 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:12:45.862 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:13:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:13:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:13:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:13:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:13:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:13:13.001 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:13:15.864 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:13:15.865 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:13:20.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 224 bytes, 0 commands in the stack
2021-02-26 23:13:20.463 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:20.463 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:13:20.464 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:20.464 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-26 23:13:20.466 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 10 bytes, 0 commands in the stack
2021-02-26 23:13:20.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:20.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:13:21.307 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:13:21.307 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:21.307 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:13:22.830 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-26 23:13:22.830 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:22.830 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:13:43.001 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:13:45.866 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:13:45.867 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:13:51.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 23:13:51.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:13:51.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:14:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:14:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:14:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:14:13.001 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:14:15.869 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:14:15.869 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:14:15.869 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:14:15.869 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:14:15.869 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:14:15.870 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:14:15.870 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:14:43.001 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:14:45.871 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:15:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:15:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:15:13.002 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:15:15.872 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:15:15.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:15:43.003 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:15:45.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:15:45.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:15:45.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:15:45.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:15:45.873 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:15:45.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:15:45.874 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:16:13.003 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:16:15.875 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:16:15.876 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:16:43.003 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:16:45.877 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:17:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:17:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:17:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:17:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:17:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:17:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:17:13.004 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:17:15.879 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:17:43.004 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:17:45.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:17:45.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:17:45.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:17:45.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:17:45.880 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:17:45.881 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:17:45.881 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:18:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:18:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:18:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:18:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:18:13.004 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:18:15.882 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:18:20.535 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:18:20.535 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:18:20.536 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:18:21.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:18:21.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:18:21.341 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:18:43.005 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:18:45.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:18:45.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:18:45.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:18:45.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:18:45.884 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:18:45.885 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:18:45.885 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:19:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:19:13.005 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:19:15.886 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:19:15.886 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:19:15.886 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:19:15.886 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:19:15.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:19:15.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:19:15.887 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:19:43.006 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:19:45.888 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:19:45.888 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:19:45.888 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:19:45.888 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:19:45.888 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:19:45.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:19:45.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:20:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:20:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:20:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:20:13.006 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:20:15.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:20:43.007 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:20:45.891 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:20:45.891 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:20:45.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:20:45.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:20:45.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:20:45.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:20:45.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:21:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:21:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:21:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:21:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:21:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:21:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:21:13.007 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:21:15.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:21:15.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:21:15.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:21:15.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:21:15.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:21:15.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:21:15.893 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:21:43.007 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:21:45.894 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:22:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:22:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:22:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:22:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:22:13.008 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:22:15.895 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:22:15.896 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:22:43.009 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:22:45.898 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:23:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:23:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:23:13.010 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:23:15.900 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:23:43.011 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:23:45.902 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:23:45.903 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:24:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:24:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:24:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:24:13.011 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:24:15.906 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:24:43.012 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:24:45.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:24:45.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:24:45.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:24:45.909 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:24:45.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:24:45.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:24:45.910 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:25:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:25:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:25:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:25:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:25:13.013 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:25:15.911 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:25:43.013 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:25:45.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:25:45.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:25:45.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:25:45.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:25:45.913 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:25:45.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:25:45.914 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:26:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:26:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:26:13.014 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:26:15.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:26:15.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:26:15.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:26:15.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:26:15.915 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:26:15.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:26:15.916 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:26:43.015 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:26:45.917 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:27:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:27:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:27:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:27:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:27:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:27:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:27:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:27:13.015 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:27:15.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:27:15.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:27:15.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:27:15.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:27:15.919 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:27:15.920 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:27:15.920 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:27:43.016 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:27:45.922 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:28:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:28:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:28:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:28:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:28:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:28:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:28:13.017 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:28:15.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:28:15.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:28:15.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:28:15.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:28:15.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:28:15.924 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:28:15.924 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:28:43.017 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:28:45.925 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:28:45.925 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:28:45.925 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:28:45.926 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:28:45.926 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:28:45.926 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:28:45.926 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:29:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:29:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:29:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:29:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:29:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:29:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:29:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:29:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:29:13.017 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:29:15.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:29:43.018 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:29:45.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:30:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:30:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:30:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:30:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:30:13.018 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:30:15.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:30:43.019 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:30:45.932 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:30:45.932 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:30:45.932 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:30:45.932 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:30:45.932 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:30:45.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:30:45.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:31:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:31:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:31:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:31:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:31:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:31:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:31:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:31:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:31:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:31:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:31:13.020 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:31:15.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:31:15.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:31:15.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:31:15.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:31:15.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:31:15.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:31:15.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:31:43.021 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:31:45.935 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:32:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:32:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:32:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:32:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:32:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:32:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:32:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:32:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:32:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:32:13.021 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:32:15.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:32:15.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:32:15.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:32:15.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:32:15.936 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:32:15.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:32:15.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:32:43.021 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:32:45.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:32:45.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:32:45.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:32:45.937 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:32:45.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:32:45.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:32:45.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:33:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:33:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:33:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:33:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:33:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:33:13.022 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:33:15.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:33:15.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:33:15.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:33:15.938 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:33:15.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:33:15.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:33:15.939 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:33:43.023 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:33:45.940 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:33:45.941 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:34:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:34:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:34:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:34:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:34:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:34:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:34:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:34:13.023 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:34:15.942 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:34:15.942 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:34:15.943 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:34:15.943 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:34:15.943 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:34:15.943 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:34:15.943 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:34:43.023 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:34:45.944 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:35:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:35:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:35:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:35:13.023 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:35:15.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:35:15.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:35:15.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:35:15.946 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:35:15.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:35:15.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:35:15.947 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:35:43.024 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:35:45.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:35:45.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:35:45.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:35:45.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:35:45.948 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:35:45.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:35:45.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:36:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:36:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:36:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:36:13.024 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:36:15.949 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:36:43.024 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:36:45.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:36:45.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:36:45.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:36:45.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:36:45.952 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:36:45.953 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:36:45.953 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:37:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:37:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:37:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:37:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:37:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:37:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:37:13.025 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:37:15.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:37:43.026 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:37:45.956 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:38:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:38:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:38:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:38:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:38:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:38:13.026 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:38:15.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:38:15.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:38:15.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:38:15.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:38:15.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:38:15.959 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:38:15.959 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:38:43.027 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:38:45.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:38:45.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:38:45.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:38:45.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:38:45.960 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:38:45.961 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:38:45.961 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:39:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:39:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:39:13.027 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:39:15.963 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:39:15.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:39:43.028 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:39:45.966 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:40:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:40:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:40:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:40:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:40:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:40:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:40:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:40:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:40:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:40:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:40:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:40:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:40:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:40:13.028 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:40:15.968 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:40:43.028 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:40:45.969 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:40:45.970 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:41:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:41:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:41:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:41:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:41:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:41:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:41:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:41:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:41:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:41:13.029 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:41:15.971 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:41:15.971 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:41:15.971 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:41:15.971 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:41:15.971 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:41:15.972 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:41:15.972 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:41:43.029 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:41:45.974 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:42:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:42:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:42:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:42:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:42:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:42:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:42:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:42:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:42:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:42:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:42:13.030 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:42:15.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:42:43.030 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:42:45.976 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:42:45.977 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:43:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:43:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:43:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:43:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:43:13.030 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:43:15.978 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:43:15.978 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:43:15.978 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:43:15.978 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:43:15.978 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:43:15.979 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:43:15.979 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:43:26.328 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-26 23:43:26.328 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:43:26.329 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:43:26.356 [ springSessionRedisMessageListenerContainer-83 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:26.356 [ springSessionRedisMessageListenerContainer-83 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:26.356 [ springSessionRedisMessageListenerContainer-83 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:43:26.356 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:43:26.356 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:43:26.361 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 64 bytes, 1 commands in the stack
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 128 bytes, 1 commands in the stack
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:26.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748, [B@2ca9dee5=[B@2598d480}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 192 bytes, 1 commands in the stack
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748, [B@2ca9dee5=[B@2598d480}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748, [B@2ca9dee5=[B@2598d480}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: false
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748, [B@2ca9dee5=[B@2598d480}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:43:26.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={[B@75b85ca3=[B@3cda0748, [B@2ca9dee5=[B@2598d480, [B@1272d9d4=[B@1cc2cb49, [B@7e7e7c95=[B@7f9d2085}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:43:43.031 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:43:45.981 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:44:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 57 bytes, 1 commands in the stack
2021-02-26 23:44:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[[B@7ba5eadb], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:44:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:44:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:44:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:44:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:44:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:44:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:44:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:44:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:44:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:44:13.031 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:44:15.982 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:44:15.983 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:44:43.032 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:44:45.984 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:45:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:45:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:45:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:45:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:45:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:45:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:45:13.033 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:45:15.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:45:15.986 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:45:15.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:45:15.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:45:15.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:45:15.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:45:15.987 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:45:43.033 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:45:45.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:45:45.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:45:45.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:45:45.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:45:45.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:45:45.989 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:45:45.989 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:46:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:46:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:46:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:46:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:46:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:46:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:46:13.033 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:46:15.990 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:46:15.990 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:46:15.990 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:46:15.990 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:46:15.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:46:15.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:46:15.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:46:43.034 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:46:45.991 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:47:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:47:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:47:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:47:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:47:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:47:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:47:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:47:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:47:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:47:13.035 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:47:15.993 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:47:43.035 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:47:45.995 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:48:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:48:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:48:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:48:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:48:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:48:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:48:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:48:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:48:13.035 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:48:15.996 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:48:15.997 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:48:26.334 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 113 bytes, 0 commands in the stack
2021-02-26 23:48:26.335 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:48:26.335 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:48:43.040 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:48:45.999 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:49:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:49:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:49:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:49:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:49:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:49:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:49:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:49:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:49:12.648 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 224 bytes, 0 commands in the stack
2021-02-26 23:49:12.648 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:49:12.649 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:49:12.649 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:49:12.650 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-26 23:49:12.650 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 10 bytes, 0 commands in the stack
2021-02-26 23:49:12.650 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:49:12.650 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:49:13.040 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:49:13.364 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:49:13.364 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:49:13.365 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:49:16.001 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:49:21.842 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:21.842 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:21.842 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:49:21.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:49:21.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:21.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:49:21.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:49:21.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:49:21.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:49:21.882 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 18] start execution
2021-02-26 23:49:21.883 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 23:49:21.884 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 23:49:21.884 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 23:49:21.884 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 18] Request connection for {}->http://192.168.31.239:9200
2021-02-26 23:49:21.885 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:21.887 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 23:49:21.887 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:21.887 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 18] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 23:49:21.888 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 23:49:21.888 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 23:49:21.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 23:49:21.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 18] Attempt 1 to execute request
2021-02-26 23:49:21.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 18] Target auth state: UNCHALLENGED
2021-02-26 23:49:21.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 18] Proxy auth state: UNCHALLENGED
2021-02-26 23:49:21.888 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1668
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 18] produce content
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 18] Request completed
2021-02-26 23:49:21.889 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1668; pos: 1668; completed: true]
2021-02-26 23:49:21.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2062 bytes written
2021-02-26 23:49:21.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 23:49:21.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1668[\r][\n]"
2021-02-26 23:49:21.890 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"filter":[{"term":{"catalogId":{"value":225,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}}}"
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 23:49:21.891 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 5392 bytes read
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 5304[\r][\n]"
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":13,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":13,"relation":"eq"},"max_score":0.0,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.0,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"2","_score":0.0,"_source":{"skuId":2,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256G[0xffffffe5][0xffffff85][0xffffffa8][0xffffffe7][0xffffffbd][0xffffff91][0xffffffe9][0xffffff80][0xffffff9a][0xffffffef][0xffffffbc][0xffffff88][0xffffffe7][0xffffffa2][0xffffff8e][0xffffffe5][0xffffffb1][0xffffff8f][0xffffffe9][0xffffff99][0xffffffa9][0xffffffe5][0xffffffa5][0xffffff97][0xffffffe9][0xffffffa4][0xffffff90][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":7799.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":0.0,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}}]},"aggregations":{"nested#attrAgg":{"doc_count":61,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":13}]}},{"key":17,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":13}]}},{"key":18,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":13}]}},{"key":8,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2021","doc_count":9}]}},{"key":24,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020","doc_count":9}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":1,"doc_count":9,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","doc_count":9}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"oppo","doc_count":9}]}},{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":13,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":13}]}}]}}}"
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 5304
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(5304)] Response received
2021-02-26 23:49:21.909 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 18] Response received HTTP/1.1 200 OK
2021-02-26 23:49:21.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(5304)] Input ready
2021-02-26 23:49:21.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 18] Consume content
2021-02-26 23:49:21.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 18] Connection can be kept alive indefinitely
2021-02-26 23:49:21.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 18] Response processed
2021-02-26 23:49:21.910 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 18] releasing connection
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:21.911 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 5304; pos: 5304; completed: true]
2021-02-26 23:49:21.911 [ http-nio-9220-exec-3 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 23:49:26.367 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:26.368 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:26.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:49:26.368 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:49:26.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:49:26.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:49:26.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:49:26.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:49:26.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=HGETALL, output=MapOutput [output=LatencyMeteredCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:49:26.375 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 121 ] - [exchange: 19] start execution
2021-02-26 23:49:26.375 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAddCookies : 123 ] - CookieSpec selected: default
2021-02-26 23:49:26.376 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 131 ] - Re-using cached 'basic' auth scheme for http://192.168.31.239:9200
2021-02-26 23:49:26.376 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.apache.http.client.protocol.RequestAuthCache : 140 ] - No credentials for preemptive authentication
2021-02-26 23:49:26.376 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 366 ] - [exchange: 19] Request connection for {}->http://192.168.31.239:9200
2021-02-26 23:49:26.376 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 279 ] - Connection request: [route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:26.376 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 23:49:26.377 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 303 ] - Connection leased: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:26.377 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 313 ] - [exchange: 19] Connection allocated: CPoolProxy{http-outgoing-0 [ACTIVE]}
2021-02-26 23:49:26.377 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 182 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2021-02-26 23:49:26.377 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 23:49:26.377 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:r]: Event set [w]
2021-02-26 23:49:26.377 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 215 ] - [exchange: 19] Attempt 1 to execute request
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 222 ] - [exchange: 19] Target auth state: UNCHALLENGED
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 229 ] - [exchange: 19] Proxy auth state: UNCHALLENGED
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Set timeout 30000
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 136 ] - http-outgoing-0 >> POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Length: 1668
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Content-Type: application/json
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Host: 192.168.31.239:9200
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> Connection: Keep-Alive
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 139 ] - http-outgoing-0 >> User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 108 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: Event set [w]
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 94 ] - http-outgoing-0 [ACTIVE] Output ready
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 258 ] - [exchange: 19] produce content
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 273 ] - [exchange: 19] Request completed
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 98 ] - http-outgoing-0 [ACTIVE] [content length: 1668; pos: 1668; completed: true]
2021-02-26 23:49:26.378 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 222 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][rw:w]: 2062 bytes written
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "POST /smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true HTTP/1.1[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Length: 1668[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Host: 192.168.31.239:9200[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "User-Agent: Apache-HttpAsyncClient/4.1.4 (Java/11.0.7)[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 >> "[\r][\n]"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 >> "{"from":0,"size":3,"query":{"bool":{"filter":[{"term":{"catalogId":{"value":225,"boost":1.0}}}],"adjust_pure_negative":true,"boost":1.0}},"aggregations":{"brandAgg":{"terms":{"field":"brandId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"brandNameAgg":{"terms":{"field":"brandName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"brandImgAgg":{"terms":{"field":"brandImg","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"catalogAgg":{"terms":{"field":"catalogId","size":20,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"catalogName":{"terms":{"field":"catalogName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}},"attrAgg":{"nested":{"path":"attrs"},"aggregations":{"attrIdAgg":{"terms":{"field":"attrs.attrId","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]},"aggregations":{"attrNameAgg":{"terms":{"field":"attrs.attrName","size":1,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}},"attrValuesAgg":{"terms":{"field":"attrs.attrValues","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"_count":"desc"},{"_key":"asc"}]}}}}}}}}"
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 71 ] - http-outgoing-0 [ACTIVE] Request ready
2021-02-26 23:49:26.379 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 116 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:w]: Event cleared [w]
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 206 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: 5392 bytes read
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-type: application/json; charset=UTF-8[\r][\n]"
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "content-length: 5304[\r][\n]"
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 54 ] - http-outgoing-0 << "[\r][\n]"
2021-02-26 23:49:26.429 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.wire : 68 ] - http-outgoing-0 << "{"took":45,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":13,"relation":"eq"},"max_score":0.0,"hits":[{"_index":"smilemall_product","_type":"_doc","_id":"1","_score":0.0,"_source":{"skuId":1,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256[0xffffffef][0xffffffbc][0xffffff88]12[0xffffffe6][0xffffff9c][0xffffff9f][0xffffffe5][0xffffff85][0xffffff8d][0xffffffe6][0xffffff81][0xffffffaf][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":8599.0,"skuImg":"","saleCount":0,"hasStock":true,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"2","_score":0.0,"_source":{"skuId":2,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe4][0xffffffba][0xffffffae][0xffffffe9][0xffffffbb][0xffffff91][0xffffffe8][0xffffff89][0xffffffb2] 8+256G[0xffffffe5][0xffffff85][0xffffffa8][0xffffffe7][0xffffffbd][0xffffff91][0xffffffe9][0xffffff80][0xffffff9a][0xffffffef][0xffffffbc][0xffffff88][0xffffffe7][0xffffffa2][0xffffff8e][0xffffffe5][0xffffffb1][0xffffff8f][0xffffffe9][0xffffff99][0xffffffa9][0xffffffe5][0xffffffa5][0xffffff97][0xffffffe9][0xffffffa4][0xffffff90][0xffffffef][0xffffffbc][0xffffff89]","skuPrice":7799.0,"skuImg":"","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}},{"_index":"smilemall_product","_type":"_doc","_id":"3","_score":0.0,"_source":{"skuId":3,"spuId":1,"skuTitle":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]mate40pro 5G[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba] [0xffffffe9][0xffffff9b][0xffffffaa][0xffffffe8][0xffffff8a][0xffffffb1][0xffffffe7][0xffffff99][0xffffffbd] 256G","skuPrice":7799.0,"skuImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-25/773261d6-6800-471e-8bce-904cd24775cd_1f15cdbcf9e1273c.jpg","saleCount":0,"hasStock":false,"hotScore":0,"brandId":2,"catalogId":225,"brandName":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","brandImg":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","catalogName":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","attrs":[{"attrId":7,"attrName":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","attrValues":"2020[0xffffffe5][0xffffffb9][0xffffffb4]"},{"attrId":9,"attrName":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]"},{"attrId":17,"attrName":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","attrValues":"Mali-G78"},{"attrId":18,"attrName":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","attrValues":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]"}]}}]},"aggregations":{"nested#attrAgg":{"doc_count":61,"lterms#attrIdAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":7,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020[0xffffffe5][0xffffffb9][0xffffffb4]","doc_count":13}]}},{"key":17,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"GPU[0xffffffe5][0xffffff9e][0xffffff8b][0xffffffe5][0xffffff8f][0xffffffb7]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"Mali-G78","doc_count":13}]}},{"key":18,"doc_count":13,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"CPU[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":13}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffffb5][0xffffffb7][0xffffffe6][0xffffff80][0xffffff9d][0xffffffef][0xffffffbc][0xffffff88]Hisilicon[0xffffffef][0xffffffbc][0xffffff89]","doc_count":13}]}},{"key":8,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe6][0xffffff9c][0xffffff88][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2021","doc_count":9}]}},{"key":24,"doc_count":9,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe4][0xffffffb8][0xffffff8a][0xffffffe5][0xffffffb8][0xffffff82][0xffffffe5][0xffffffb9][0xffffffb4][0xffffffe4][0xffffffbb][0xffffffbd]","doc_count":9}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"2020","doc_count":9}]}},{"key":9,"doc_count":4,"sterms#attrNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff93][0xffffff81][0xffffffe7][0xffffff89][0xffffff8c]","doc_count":4}]},"sterms#attrValuesAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba][0xffffffef][0xffffffbc][0xffffff88]HUAWEI[0xffffffef][0xffffffbc][0xffffff89]","doc_count":4}]}}]}},"lterms#brandAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":1,"doc_count":9,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/7f2ce474-0575-4544-8727-4b4e3c741150_swiper2.jpg","doc_count":9}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"oppo","doc_count":9}]}},{"key":2,"doc_count":4,"sterms#brandImgAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"https://smilemall-zg.oss-cn-beijing.aliyuncs.com/2021-01-23/1a77f58e-8b7c-4b2f-8d80-49318d9a2ce6_swiper4.jpg","doc_count":4}]},"sterms#brandNameAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe5][0xffffff8d][0xffffff8e][0xffffffe4][0xffffffb8][0xffffffba]","doc_count":4}]}}]},"lterms#catalogAgg":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":225,"doc_count":13,"sterms#catalogName":{"doc_count_error_upper_bound":0,"sum_other_doc_count":0,"buckets":[{"key":"[0xffffffe6][0xffffff89][0xffffff8b][0xffffffe6][0xffffff9c][0xffffffba]","doc_count":13}]}}]}}}"
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 125 ] - http-outgoing-0 << HTTP/1.1 200 OK
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-type: application/json; charset=UTF-8
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.headers : 128 ] - http-outgoing-0 << content-length: 5304
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 106 ] - http-outgoing-0 [ACTIVE(5304)] Response received
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 286 ] - [exchange: 19] Response received HTTP/1.1 200 OK
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 81 ] - http-outgoing-0 [ACTIVE(5304)] Input ready
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 325 ] - [exchange: 19] Consume content
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 298 ] - [exchange: 19] Connection can be kept alive indefinitely
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.MainClientExec : 385 ] - [exchange: 19] Response processed
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.http.impl.nio.client.InternalHttpAsyncClient : 239 ] - [exchange: 19] releasing connection
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 190 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Remove attribute http.nio.exchange-handler
2021-02-26 23:49:26.430 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 373 ] - Releasing connection: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 0; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:26.431 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 387 ] - Connection [id: http-outgoing-0][route: {}->http://192.168.31.239:9200] can be kept alive indefinitely
2021-02-26 23:49:26.431 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.nio.conn.ManagedNHttpClientConnectionImpl : 154 ] - http-outgoing-0 192.168.31.49:5334<->192.168.31.239:9200[ACTIVE][r:r]: Set timeout 0
2021-02-26 23:49:26.431 [ I/O dispatcher 1 ] - [ DEBUG ] [ o.a.h.i.n.conn.PoolingNHttpClientConnectionManager : 393 ] - Connection released: [id: http-outgoing-0][route: {}->http://192.168.31.239:9200][total kept alive: 1; route allocated: 1 of 10; total allocated: 1 of 30]
2021-02-26 23:49:26.431 [ I/O dispatcher 1 ] - [ DEBUG ] [ org.apache.http.impl.nio.client.InternalIODispatch : 85 ] - http-outgoing-0 [ACTIVE] [content length: 5304; pos: 5304; completed: true]
2021-02-26 23:49:26.431 [ http-nio-9220-exec-1 ] - [ DEBUG ] [ org.elasticsearch.client.RestClient : 59 ] - request [POST http://192.168.31.239:9200/smilemall_product/_search?typed_keys=true&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512&ccs_minimize_roundtrips=true] returned [HTTP/1.1 200 OK]
2021-02-26 23:49:43.041 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:49:43.309 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-26 23:49:43.309 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:49:43.310 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:49:46.002 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:50:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:50:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:50:13.042 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:50:16.004 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:50:19.963 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-26 23:50:19.963 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:50:19.964 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:50:43.042 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:50:46.007 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:51:13.043 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:51:16.008 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:51:43.043 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:51:46.009 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:52:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:52:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:52:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:52:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:52:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:52:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:52:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:52:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:52:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:52:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:52:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:52:13.043 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:52:16.011 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:52:18.625 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 23:52:18.625 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:52:18.625 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:52:43.154 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:52:46.012 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:52:46.012 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:52:46.013 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:52:46.013 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:52:46.013 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:52:46.013 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:52:46.013 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:53:13.154 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:53:16.014 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:53:16.015 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:53:43.155 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:53:46.016 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:53:50.290 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 23:53:50.290 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:53:50.290 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:54:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:54:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:54:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:54:12.670 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:54:12.671 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:54:12.671 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:13.156 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:54:13.372 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-26 23:54:13.372 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:54:13.373 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:16.017 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:54:16.017 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:54:16.017 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:54:16.017 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:54:16.017 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:54:16.018 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:54:16.018 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:54:31.884 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 84 bytes, 0 commands in the stack
2021-02-26 23:54:31.884 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:54:31.884 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:32.184 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 189 bytes, 0 commands in the stack
2021-02-26 23:54:32.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:54:32.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:32.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:54:32.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:54:43.156 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:54:46.019 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:55:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:55:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:55:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:55:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:55:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:55:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:55:13.157 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:55:16.020 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:55:35.719 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 51 bytes, 0 commands in the stack
2021-02-26 23:55:35.720 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:55:35.720 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:55:43.158 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:55:46.022 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:56:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:56:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:56:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:56:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:56:13.159 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:56:16.024 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:56:17.065 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 23:56:17.066 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:56:17.066 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-26 23:56:43.160 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:56:46.025 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:56:46.025 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:56:46.025 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:56:46.025 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:56:46.026 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:56:46.026 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:56:46.026 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:57:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:57:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:57:13.161 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:57:16.028 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:57:16.028 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:57:16.028 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:57:16.028 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:57:16.029 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:57:16.029 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:57:16.029 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:57:43.161 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:57:46.030 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:58:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:58:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:58:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:58:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:58:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:58:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:58:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:58:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:58:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:58:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:58:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:58:13.162 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:58:16.032 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:58:43.173 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:58:46.033 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:59:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:59:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:59:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-26 23:59:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-26 23:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-26 23:59:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-26 23:59:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xd0aea85e, /192.168.31.49:5321 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-26 23:59:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-26 23:59:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded LatencyMeteredCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-26 23:59:13.174 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:59:16.035 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:59:16.035 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:59:16.035 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:59:16.035 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:59:16.035 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:59:16.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:59:16.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:59:43.175 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-product obtained from Discovery client: [192.168.31.49:6001]
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product]: clearing server list (SET op)
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product]:  addServer [192.168.31.49:6001]
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:6001]}
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-product_unknown]: clearing server list (SET op)
2021-02-26 23:59:46.036 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-product_unknown]:  addServer [192.168.31.49:6001]
2021-02-26 23:59:50.086 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x36e8795c, /192.168.31.49:5327 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-26 23:59:50.086 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-26 23:59:50.086 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
