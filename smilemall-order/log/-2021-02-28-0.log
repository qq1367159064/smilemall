2021-02-28 01:36:30.946 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 01:36:30.951 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 01:36:30.961 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 01:36:30.964 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 01:36:30.964 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 01:36:30.966 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 01:36:30.973 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 01:36:31.001 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 01:36:31.151 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 01:36:31.162 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 01:36:31.162 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 01:36:31.162 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 01:36:31.163 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 01:36:31.164 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 01:36:32.188 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 01:36:33.148 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 01:36:33.149 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 01:36:33.471 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 01:36:34.354 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 01:36:34.355 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 01:36:34.355 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 01:36:34.567 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 01:36:34.656 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 01:36:34.660 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 01:36:34.669 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 01:36:34.695 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 01:36:34.695 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 01:36:34.701 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 01:36:34.702 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 01:36:34.705 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1182413a
2021-02-28 01:36:34.708 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 01:36:34.710 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 01:36:34.710 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 01:36:34.711 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 01:36:34.712 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 01:36:34.713 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 01:36:34.716 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 01:36:34.721 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 01:36:34.723 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @497754ef
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 01:36:34.724 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 01:36:34.725 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 01:36:34.726 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 01:36:34.727 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 01:36:34.728 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 01:36:34.729 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 01:36:34.730 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 01:36:34.732 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 01:36:34.733 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 01:36:34.736 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 01:36:34.752 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 01:36:34.776 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 01:36:34.878 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 01:36:34.878 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 01:36:34.879 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 01:36:34.879 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 01:36:34.880 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 01:36:34.880 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 01:36:34.880 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 01:36:34.880 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 01:36:34.881 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 01:36:34.881 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 01:36:34.881 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 01:36:34.882 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 01:36:35.530 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 01:36:35.745 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 01:36:35.754 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 01:36:35.758 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 01:36:35.782 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 01:36:35.785 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 01:36:35.793 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 01:36:35.797 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 01:36:35.798 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 01:36:35.800 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 01:36:35.804 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 01:36:35.807 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 01:36:35.812 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 01:36:35.816 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 01:36:35.819 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 01:36:35.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 01:36:35.826 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 01:36:35.829 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 01:36:35.830 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 01:36:35.844 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 01:36:35.847 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 01:36:35.850 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 01:36:35.851 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 01:36:35.853 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 01:36:35.856 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 01:36:35.859 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 01:36:35.860 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 01:36:35.862 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 01:36:35.864 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 01:36:35.866 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 01:36:35.868 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 01:36:35.871 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 01:36:35.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 01:36:35.876 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 01:36:35.878 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 01:36:35.881 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 01:36:35.881 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 01:36:35.904 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 01:36:35.907 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 01:36:35.909 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 01:36:35.911 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 01:36:35.913 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 01:36:35.915 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 01:36:35.917 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 01:36:35.918 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 01:36:35.920 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 01:36:35.922 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 01:36:35.924 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 01:36:35.926 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 01:36:35.929 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 01:36:35.931 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 01:36:35.933 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 01:36:35.935 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 01:36:35.937 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 01:36:35.938 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 01:36:35.964 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 01:36:35.967 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 01:36:35.971 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 01:36:35.973 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 01:36:35.976 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 01:36:35.981 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 01:36:35.984 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 01:36:35.984 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 01:36:35.988 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 01:36:35.990 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 01:36:35.995 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 01:36:35.999 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 01:36:36.002 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 01:36:36.006 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 01:36:36.008 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 01:36:36.013 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 01:36:36.017 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 01:36:36.017 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 01:36:36.028 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 01:36:36.031 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 01:36:36.033 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 01:36:36.036 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 01:36:36.038 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 01:36:36.040 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 01:36:36.044 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 01:36:36.045 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 01:36:36.047 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 01:36:36.049 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 01:36:36.051 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 01:36:36.055 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 01:36:36.057 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 01:36:36.060 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 01:36:36.063 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 01:36:36.065 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 01:36:36.068 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 01:36:36.068 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 01:36:36.078 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 01:36:36.079 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 01:36:36.081 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 01:36:36.083 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 01:36:36.085 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 01:36:36.087 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 01:36:36.089 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 01:36:36.089 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 01:36:36.091 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 01:36:36.093 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 01:36:36.094 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 01:36:36.096 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 01:36:36.098 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 01:36:36.100 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 01:36:36.102 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 01:36:36.104 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 01:36:36.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 01:36:36.106 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 01:36:36.116 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 01:36:36.117 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 01:36:36.119 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 01:36:36.121 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 01:36:36.122 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 01:36:36.125 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 01:36:36.127 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 01:36:36.127 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 01:36:36.128 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 01:36:36.130 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 01:36:36.132 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 01:36:36.134 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 01:36:36.144 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 01:36:36.147 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 01:36:36.149 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 01:36:36.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 01:36:36.152 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 01:36:36.153 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 01:36:36.173 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 01:36:36.176 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 01:36:36.179 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 01:36:36.181 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 01:36:36.183 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 01:36:36.186 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 01:36:36.189 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 01:36:36.191 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 01:36:36.193 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 01:36:36.196 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 01:36:36.198 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 01:36:36.200 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 01:36:36.204 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 01:36:36.206 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 01:36:36.208 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 01:36:36.212 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 01:36:36.214 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 01:36:36.215 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 01:36:37.075 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:36:37.210 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 01:36:37.212 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 01:36:37.215 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 01:36:37.215 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 01:36:37.215 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 01:36:37.220 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 01:36:37.221 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 01:36:37.238 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@52a75c12, existing ref count 0
2021-02-28 01:36:37.251 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:36:37.252 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 01:36:37.259 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 15768 (auto-detected)
2021-02-28 01:36:37.261 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 01:36:37.261 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 01:36:37.608 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 01:36:37.609 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 01:36:37.941 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 01:36:37.962 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 01:36:37.962 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 01:36:37.962 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 01:36:37.988 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 01:36:37.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 01:36:37.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 01:36:37.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 01:36:37.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 01:36:38.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 01:36:38.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 01:36:38.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7ef68dde
2021-02-28 01:36:38.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x291f6a75, [id: 0xeaefb38d] (inactive), chid=0x1] channelRegistered()
2021-02-28 01:36:38.057 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 01:36:38.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 01:36:38.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 01:36:38.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 01:36:38.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 01:36:38.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 01:36:38.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 01:36:38.063 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 01:36:38.068 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:38.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:38.073 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 01:36:38.107 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:38.114 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:36:38.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@484cac24)
2021-02-28 01:36:38.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:36:38.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:36:38.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:38.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 01:36:38.133 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:38.134 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:38.138 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:36:38.138 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:36:38.139 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:38.143 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 01:36:38.143 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:36:38.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:38.149 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:36:38.178 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 01:36:38.179 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 01:36:38.186 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 01:36:38.186 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 01:36:38.221 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 01:36:38.224 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 01:36:38.225 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 01:36:38.226 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 01:36:38.229 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 01:36:38.229 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 01:36:38.230 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 01:36:38.230 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 01:36:38.231 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 01:36:38.232 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 01:36:38.235 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 01:36:38.237 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 01:36:38.237 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 01:36:38.237 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 01:36:38.237 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 01:36:38.237 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 01:36:39.379 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 01:36:40.593 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 01:36:41.212 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:36:41.212 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 01:36:41.216 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x4497a6e1, [id: 0xeaa2beb4] (inactive), chid=0x2] channelRegistered()
2021-02-28 01:36:41.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 01:36:41.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 01:36:41.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 01:36:41.221 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 01:36:41.222 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 01:36:41.222 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 01:36:41.222 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 01:36:41.222 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 01:36:41.222 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:41.223 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:41.223 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 01:36:41.223 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:41.224 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:36:41.224 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@343e5428)
2021-02-28 01:36:41.228 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:36:41.228 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:36:41.229 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:36:41.230 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 01:36:41.233 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.234 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.234 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:36:41.234 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:36:41.236 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.241 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 01:36:41.241 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:36:41.241 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:36:41.245 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:36:41.245 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:36:41.637 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.637 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.637 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:36:41.637 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:36:41.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 01:36:41.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:36:41.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:36:41.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:36:41.675 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.918 seconds (JVM running for 15.673)
2021-02-28 01:37:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:37:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:37:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:37:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:37:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:37:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:37:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:37:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:37:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:37:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:37:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:38:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:38:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:38:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:39:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:39:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:39:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:39:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:39:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:40:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.027 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:40:00.027 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:40:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:40:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:40:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:40:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:40:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.038 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:40:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:40:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:40:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:40:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:41:00.180 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.181 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.181 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:41:00.181 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:41:00.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:41:00.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:41:00.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:41:00.186 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.186 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.192 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:41:00.192 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:41:00.193 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:41:00.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:41:00.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:41:00.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:42:00.370 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.371 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:42:00.371 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:42:00.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:42:00.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:42:00.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:42:00.376 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.377 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.377 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:42:00.377 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:42:00.381 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:42:00.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:42:00.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:42:00.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:43:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.039 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:43:00.044 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.040 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:43:00.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:43:00.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:43:00.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:43:00.057 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.058 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:43:00.058 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:43:00.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:43:00.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:43:00.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:43:00.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:44:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:44:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:44:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:44:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:44:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:44:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:17.558 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.559 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:44:17.561 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.560 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:44:17.566 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 01:44:17.567 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:44:17.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:17.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:44:17.569 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:44:17.570 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.572 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:44:17.575 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 01:44:17.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:44:17.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:17.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:17.617 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:44:17.618 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 01:44:17.618 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 01:44:17.624 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 01:44:17.625 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 01:44:17.626 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 01:44:17.627 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 01:44:17.627 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 01:44:17.627 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x4497a6e1, /192.168.31.49:57335 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 01:44:25.563 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 01:44:25.563 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 01:44:25.564 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 01:44:25.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 01:44:25.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 01:44:25.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 01:44:25.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 01:44:25.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 01:44:25.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x291f6a75, /192.168.31.49:57328 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 01:44:25.571 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@52a75c12
2021-02-28 01:44:25.572 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 01:44:25.672 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 01:44:25.677 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 01:44:25.680 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 01:44:37.353 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 01:44:37.359 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 01:44:37.373 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 01:44:37.377 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 01:44:37.378 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 01:44:37.379 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 01:44:37.387 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 01:44:37.423 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 01:44:37.727 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 01:44:37.738 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 01:44:37.739 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 01:44:37.739 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 01:44:37.740 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 01:44:37.742 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 01:44:42.392 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 01:44:46.321 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 01:44:46.330 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 01:44:47.665 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 01:44:49.179 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 01:44:49.180 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 01:44:49.181 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 01:44:50.221 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 01:44:50.396 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 01:44:50.402 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 01:44:50.425 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 01:44:50.477 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 01:44:50.478 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 01:44:50.488 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 01:44:50.489 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 01:44:50.494 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@22b82ddf
2021-02-28 01:44:50.499 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 01:44:50.502 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 01:44:50.503 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 01:44:50.505 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 01:44:50.507 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 01:44:50.509 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 01:44:50.513 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 01:44:50.517 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 01:44:50.523 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @509d60ae
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 01:44:50.525 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 01:44:50.526 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 01:44:50.528 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 01:44:50.529 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 01:44:50.530 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 01:44:50.533 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 01:44:50.535 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 01:44:50.537 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 01:44:50.538 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 01:44:50.541 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 01:44:50.563 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 01:44:50.597 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 01:44:50.684 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 01:44:50.685 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 01:44:50.687 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 01:44:50.687 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 01:44:50.688 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 01:44:50.688 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 01:44:50.689 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 01:44:50.689 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 01:44:50.689 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 01:44:50.689 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 01:44:50.689 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 01:44:50.690 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 01:44:52.552 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 01:44:52.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 01:44:52.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 01:44:52.907 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 01:44:53.383 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 01:44:53.388 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 01:44:53.466 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 01:44:53.473 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 01:44:53.475 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 01:44:53.479 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 01:44:53.482 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 01:44:53.491 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 01:44:53.581 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 01:44:53.589 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 01:44:53.596 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 01:44:53.602 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 01:44:53.610 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 01:44:53.614 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 01:44:53.617 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 01:44:53.641 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 01:44:53.646 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 01:44:53.649 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 01:44:53.652 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 01:44:53.655 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 01:44:53.662 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 01:44:53.667 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 01:44:53.667 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 01:44:53.669 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 01:44:53.673 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 01:44:53.677 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 01:44:53.681 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 01:44:53.685 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 01:44:53.694 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 01:44:53.698 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 01:44:53.704 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 01:44:53.709 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 01:44:53.710 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 01:44:53.742 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 01:44:53.745 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 01:44:53.749 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 01:44:53.753 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 01:44:53.759 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 01:44:53.762 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 01:44:53.765 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 01:44:53.765 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 01:44:53.769 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 01:44:53.771 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 01:44:53.774 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 01:44:53.777 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 01:44:53.779 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 01:44:53.782 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 01:44:53.784 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 01:44:53.787 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 01:44:53.790 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 01:44:53.790 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 01:44:53.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 01:44:53.827 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 01:44:53.829 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 01:44:53.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 01:44:53.833 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 01:44:53.840 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 01:44:53.843 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 01:44:53.844 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 01:44:53.847 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 01:44:53.850 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 01:44:53.853 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 01:44:53.861 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 01:44:53.865 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 01:44:53.869 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 01:44:53.872 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 01:44:53.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 01:44:53.877 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 01:44:53.877 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 01:44:53.887 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 01:44:53.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 01:44:53.891 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 01:44:53.894 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 01:44:53.896 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 01:44:53.899 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 01:44:53.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 01:44:53.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 01:44:53.903 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 01:44:53.906 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 01:44:53.908 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 01:44:53.910 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 01:44:53.912 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 01:44:53.914 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 01:44:53.917 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 01:44:53.920 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 01:44:53.924 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 01:44:53.924 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 01:44:53.937 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 01:44:53.941 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 01:44:53.944 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 01:44:53.947 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 01:44:53.949 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 01:44:53.953 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 01:44:53.958 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 01:44:53.959 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 01:44:53.961 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 01:44:53.982 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 01:44:53.992 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 01:44:53.996 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 01:44:54.001 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 01:44:54.008 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 01:44:54.016 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 01:44:54.115 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 01:44:54.119 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 01:44:54.120 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 01:44:54.750 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 01:44:54.775 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 01:44:54.778 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 01:44:54.782 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 01:44:54.786 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 01:44:54.820 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 01:44:54.948 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 01:44:54.956 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 01:44:54.959 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 01:44:54.962 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 01:44:54.966 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 01:44:54.969 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 01:44:54.972 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 01:44:55.049 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 01:44:55.053 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 01:44:55.060 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 01:44:55.063 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 01:44:55.063 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 01:44:55.087 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 01:44:55.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 01:44:55.095 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 01:44:55.105 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 01:44:55.111 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 01:44:55.115 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 01:44:55.118 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 01:44:55.118 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 01:44:55.122 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 01:44:55.126 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 01:44:55.130 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 01:44:55.133 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 01:44:55.136 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 01:44:55.144 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 01:44:55.146 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 01:44:55.153 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 01:44:55.173 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 01:44:55.173 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 01:44:57.406 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:44:57.722 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 01:44:57.734 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 01:44:57.739 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 01:44:57.740 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 01:44:57.745 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 01:44:57.849 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 01:44:57.849 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 01:44:57.955 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@434ee422, existing ref count 0
2021-02-28 01:44:57.971 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:44:57.972 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 01:44:57.980 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 11112 (auto-detected)
2021-02-28 01:44:57.982 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 01:44:57.982 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 01:44:58.777 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 01:44:58.779 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 01:44:59.260 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 01:44:59.283 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 01:44:59.283 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 01:44:59.283 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 01:44:59.313 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 01:44:59.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 01:44:59.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 01:44:59.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 01:44:59.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 01:44:59.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 01:44:59.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 01:44:59.326 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@789240cb
2021-02-28 01:44:59.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x5e2743bd, [id: 0x4c212065] (inactive), chid=0x1] channelRegistered()
2021-02-28 01:44:59.370 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 01:44:59.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 01:44:59.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 01:44:59.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 01:44:59.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 01:44:59.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 01:44:59.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 01:44:59.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 01:44:59.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:44:59.380 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:44:59.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 01:44:59.387 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:44:59.397 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:44:59.411 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3a3ad14)
2021-02-28 01:44:59.436 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:44:59.436 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:44:59.437 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:44:59.445 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 01:44:59.448 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:59.450 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:59.453 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:44:59.452 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:44:59.454 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:59.458 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 01:44:59.458 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:44:59.458 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:44:59.462 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:44:59.487 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 01:44:59.488 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 01:44:59.494 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 01:44:59.495 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 01:44:59.526 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 01:44:59.530 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 01:44:59.531 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 01:44:59.532 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 01:44:59.534 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 01:44:59.534 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 01:44:59.534 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 01:44:59.535 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 01:44:59.535 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 01:44:59.536 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 01:44:59.538 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 01:44:59.539 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 01:44:59.539 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 01:44:59.539 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 01:44:59.539 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 01:44:59.539 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 01:45:04.079 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 01:45:07.383 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 01:45:09.120 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 01:45:09.148 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 01:45:09.181 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x0e348eba, [id: 0x7dee5fb8] (inactive), chid=0x2] channelRegistered()
2021-02-28 01:45:09.186 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 01:45:09.187 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 01:45:09.187 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 01:45:09.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 01:45:09.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 01:45:09.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 01:45:09.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 01:45:09.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 01:45:09.189 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:45:09.190 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:45:09.190 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 01:45:09.461 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:45:09.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:45:09.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@83329ea)
2021-02-28 01:45:09.725 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:45:09.726 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:45:09.731 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 01:45:09.734 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 01:45:09.745 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:09.754 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:09.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:45:09.755 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:45:09.757 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:09.761 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 01:45:09.761 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:45:09.761 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:09.763 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:45:09.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:45:09.767 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:45:12.656 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:12.656 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:12.657 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 01:45:12.657 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:45:12.658 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:12.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 01:45:12.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 01:45:12.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:12.663 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:45:12.718 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 37.694 seconds (JVM running for 41.907)
2021-02-28 01:45:24.184 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 01:45:24.249 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:24.250 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:24.250 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:45:24.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:45:24.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:24.254 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:45:24.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:45:24.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:45:24.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:45:24.314 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 01:45:24.474 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6200cc94
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@29a3d27c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6eeebafb
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 01:45:24.476 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 01:46:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:46:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:46:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:46:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:46:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:46:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:46:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:46:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:46:23.609 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:23.609 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:23.609 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:46:23.609 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:46:23.610 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:23.614 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:46:23.614 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:46:23.614 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:46:23.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:47:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:47:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:47:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:47:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:47:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:47:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:47:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:48:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:48:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:48:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:48:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:48:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:48:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:48:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:48:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:49:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:49:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:49:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:49:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:49:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:49:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:49:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:49:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:49:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:49:48.932 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:48.932 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:48.933 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:49:48.933 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:49:48.936 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:48.940 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:49:48.941 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:49:48.941 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:49:48.941 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:50:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:50:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:50:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:50:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:50:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:50:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:51:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:51:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:51:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:51:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:51:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:51:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:51:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:52:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:52:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:52:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:52:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:52:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:04.200 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 01:53:04.200 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:04.201 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:04.202 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:04.203 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:05.115 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 01:53:05.115 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:05.115 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:07.238 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 01:53:07.238 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:07.239 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:20.321 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.321 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.322 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.322 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.322 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.326 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 384 bytes, 1 commands in the stack
2021-02-28 01:53:20.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@56ebe557=[B@49a9d7e3}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 01:53:20.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-28 01:53:20.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@56ebe557=[B@49a9d7e3}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@56ebe557=[B@49a9d7e3, [B@6df6aebb=[B@7185ef4c, [B@6a676a29=[B@295e04b1, [B@64df227f=[B@78390591}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.342 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.342 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.342 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.342 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.343 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.347 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:53:20.348 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.348 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.348 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.349 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.349 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.350 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.350 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.350 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:20.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.358 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.359 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.359 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.359 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:20.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.367 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.367 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.368 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:20.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.373 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.374 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.374 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.375 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:20.380 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.380 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.380 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.380 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.380 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.380 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.381 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.381 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.385 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:20.385 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.385 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.386 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.386 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.386 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.386 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.386 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.387 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.391 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@65e80c33=[B@3bc9604d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@65e80c33=[B@3bc9604d}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@65e80c33=[B@3bc9604d, [B@62eb9009=[B@759ce0f, [B@52ce0448=[B@390c6d35, [B@77e213b6=[B@1bc2d218}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:20.405 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.405 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.406 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:20.406 [ http-nio-5001-exec-7 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:20.407 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.411 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 01:53:20.411 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:20.411 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:20.412 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7c5a1d75=[B@4e477e61, [B@353a8d47=[B@2ff6825b, [B@6f852b10=[B@69edf11e, [B@625a76ea=[B@58b127ef}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:35.058 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 01:53:35.059 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:35.059 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:43.095 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 71 bytes, 0 commands in the stack
2021-02-28 01:53:43.095 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:53:43.096 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:53:48.066 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.066 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.066 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.066 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 01:53:48.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@306c279f=[B@56f61b35, [B@6133e022=[B@283ac339, [B@4b9ef574=[B@14b3a61f, [B@777949b=[B@2fdb2b5e}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.078 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.078 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.078 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.079 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.079 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 01:53:48.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.084 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.085 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.085 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.085 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.085 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.090 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:48.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.091 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.091 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.092 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.092 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:48.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.098 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.098 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.098 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.098 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.099 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:48.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.104 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.104 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.105 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.105 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.106 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:48.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.110 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.111 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.111 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.111 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:53:48.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.117 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.118 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.118 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.118 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.118 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 01:53:48.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4992b223=[B@374f9323}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4992b223=[B@374f9323}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4992b223=[B@374f9323, [B@3ec5588b=[B@5f70fa6c, [B@48b215d6=[B@4be5f009, [B@146db549=[B@13215006}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:53:48.131 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.132 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:53:48.132 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:53:48.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 01:53:48.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:53:48.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:53:48.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6a1f68d6=[B@5e15d4c1, [B@32644c63=[B@4e029c34, [B@56e5979e=[B@34a1bb0d, [B@4f5d4c24=[B@11b8edd1}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:54:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:54:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:54:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:54:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:54:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:54:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:54:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:55:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:55:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:55:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:55:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:55:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:55:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:55:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:55:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:55:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:56:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:56:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:56:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:56:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:57:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:57:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:58:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:58:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:58:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:58:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:58:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:58:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:58:04.191 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 01:58:04.191 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:58:04.192 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:58:05.198 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 01:58:05.199 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 01:58:05.199 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 01:59:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:59:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 01:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 01:59:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 01:59:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 01:59:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 01:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 01:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.217 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.218 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.218 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.218 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.218 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 416 bytes, 1 commands in the stack
2021-02-28 02:00:46.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ee6a=[B@54024d9e}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 02:00:46.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 164 bytes, 1 commands in the stack
2021-02-28 02:00:46.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ee6a=[B@54024d9e}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ee6a=[B@54024d9e, [B@69c363bd=[B@137a1fa1, [B@40b611ea=[B@615658f8, [B@5552d628=[B@119f2c79}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.471 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.471 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.472 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.471 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.472 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.477 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 02:00:46.477 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.477 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.478 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.478 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.479 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.479 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.479 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.479 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.484 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.484 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.484 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.484 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.484 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 02:00:46.485 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:00:46.485 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:00:46.486 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.486 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.487 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.487 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.487 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.491 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.491 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.491 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.492 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.492 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.492 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.492 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.493 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.493 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.497 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.497 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.497 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.497 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.498 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.498 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.498 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.498 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.499 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.503 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.504 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.504 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.504 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.504 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.509 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.509 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.509 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.510 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:00:46.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.516 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.516 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.516 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.516 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.517 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 02:00:46.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.522 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.522 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@523f4bf4=[B@11fbc105}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 02:00:46.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 02:00:46.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@523f4bf4=[B@11fbc105}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.524 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@523f4bf4=[B@11fbc105, [B@42b9da5a=[B@4dd95e6a, [B@2a2dca90=[B@413e3681, [B@26544ca=[B@5031d7c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.529 [ http-nio-5001-exec-9 ] - [ ERROR ] [ org.thymeleaf.TemplateEngine : 1136 ] - [THYMELEAF][http-nio-5001-exec-9] Exception processing template "confirm": An error happened during template parsing (template: "class path resource [templates/confirm.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/confirm.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.attoparser.ParseException: Unfinished block structure <!--/*...*/-->
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: java.io.IOException: Unfinished block structure <!--/*...*/-->
	at org.thymeleaf.templateparser.reader.BlockAwareReader.read(BlockAwareReader.java:74)
	at org.thymeleaf.templateparser.reader.ParserLevelCommentMarkupReader.read(ParserLevelCommentMarkupReader.java:30)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:346)
	... 54 common frames omitted
2021-02-28 02:00:46.530 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.530 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.531 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:00:46.531 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.531 [ http-nio-5001-exec-9 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:00:46.535 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 02:00:46.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:00:46.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:00:46.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d685a02=[B@685d2e4b, [B@2ac56bcb=[B@69c78bb8, [B@1a7fda2c=[B@d8d9216, [B@70acce2=[B@5c313299}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:00:46.539 [ http-nio-5001-exec-9 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/confirm.html]")] with root cause
java.io.IOException: Unfinished block structure <!--/*...*/-->
	at org.thymeleaf.templateparser.reader.BlockAwareReader.read(BlockAwareReader.java:74)
	at org.thymeleaf.templateparser.reader.ParserLevelCommentMarkupReader.read(ParserLevelCommentMarkupReader.java:30)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:346)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 02:01:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:01:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:01:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:01:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:01:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:01:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:01:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:02:00.200 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.203 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.540 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:02:00.539 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:02:00.551 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.626 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:02:00.626 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:02:00.626 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.626 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:02:00.694 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.694 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.695 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:02:00.695 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:02:00.696 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.698 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:02:00.698 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:02:00.698 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:02:00.698 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:00.115 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.115 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.116 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:00.116 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:00.116 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:00.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:00.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:00.120 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.120 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.120 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:00.120 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:00.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:00.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:00.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:00.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.591 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.591 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.591 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.592 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.593 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.596 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 02:03:08.596 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.596 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.596 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5d9f6022=[B@850aa62}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 02:03:08.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 02:03:08.597 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.598 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5d9f6022=[B@850aa62}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.598 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5d9f6022=[B@850aa62, [B@69ac845c=[B@176a8557, [B@3cdcd60a=[B@1ae97d82, [B@1a642fc3=[B@40df8453}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.608 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.609 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.610 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.610 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.610 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 02:03:08.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.615 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.616 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.618 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.618 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.618 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.619 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.623 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.623 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.623 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.623 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 02:03:08.624 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.624 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:03:08.624 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:03:08.625 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.626 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.626 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.626 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.632 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.632 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.632 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.632 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.633 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.634 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.634 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.635 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.639 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.640 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.640 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.640 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.640 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.640 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.641 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.641 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.642 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.646 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.647 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.648 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.648 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.649 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.654 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.654 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.655 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.655 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.655 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.659 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:03:08.660 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.660 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.660 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.660 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.660 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.661 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.661 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.662 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 02:03:08.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7b7eb1bc=[B@38fdc3b9}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 02:03:08.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 02:03:08.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7b7eb1bc=[B@38fdc3b9}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7b7eb1bc=[B@38fdc3b9, [B@6929bc49=[B@d2308b3, [B@55e85023=[B@29cc26aa, [B@5b95f873=[B@3eb212f8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:03:08.699 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.699 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.700 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:03:08.700 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:03:08.701 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 02:03:08.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:03:08.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:03:08.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4a90333d=[B@721b7871, [B@5f63dc4c=[B@33db5bc2, [B@1752587c=[B@364f647d, [B@3959bdbc=[B@428f9b55}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:04:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:04:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:04:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:04:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:04:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:04:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:04:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:04:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:05:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:05:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:05:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:05:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:05:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:05:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:05:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:05:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:05:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:06:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:06:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:06:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:06:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:06:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:06:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:06:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:06:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:06:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:07:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:07:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:07:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:07:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:07:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:07:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:07:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:07:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:08:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:08:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:08:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:08:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:08:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:08:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:08:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:09:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:09:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:09:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:10:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:10:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:10:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:10:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:10:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:10:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:10:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:10:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:10:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:10:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:11:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:11:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:11:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:11:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:11:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:11:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:11:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:12:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:12:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:09.152 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.153 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.153 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:12:09.153 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:09.153 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.158 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 02:12:09.158 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:12:09.158 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.158 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:09.158 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:12:09.158 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.159 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:12:09.159 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.159 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:09.159 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:12:09.159 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.164 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 02:12:09.164 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:12:09.164 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:09.164 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:09.164 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 02:12:09.164 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 02:12:09.167 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 02:12:09.168 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 02:12:09.169 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 02:12:09.169 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 02:12:09.169 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 02:12:09.169 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x0e348eba, /192.168.31.49:58026 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 02:12:16.035 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 02:12:16.035 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 02:12:16.036 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 02:12:16.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x5e2743bd, /192.168.31.49:58008 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 02:12:16.040 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@434ee422
2021-02-28 02:12:16.041 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 8 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 02:12:16.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 13 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 02:12:16.144 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 02:12:16.147 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 02:12:29.882 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 02:12:29.886 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 02:12:29.897 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 02:12:29.900 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 02:12:29.901 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 02:12:29.902 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 02:12:29.909 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 02:12:29.937 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 02:12:30.079 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 02:12:30.085 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 02:12:30.085 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 02:12:30.086 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 02:12:30.086 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 02:12:30.086 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 02:12:31.070 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 02:12:31.915 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 02:12:31.916 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 02:12:32.223 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 02:12:33.042 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 02:12:33.043 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 02:12:33.044 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 02:12:33.466 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 02:12:33.550 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 02:12:33.552 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 02:12:33.564 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 02:12:33.590 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 02:12:33.591 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 02:12:33.599 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 02:12:33.599 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 02:12:33.602 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@710ae6a7
2021-02-28 02:12:33.605 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 02:12:33.607 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 02:12:33.607 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 02:12:33.609 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 02:12:33.610 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 02:12:33.612 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 02:12:33.615 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 02:12:33.617 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 02:12:33.619 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @509d60ae
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:17)
2021-02-28 02:12:33.620 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 02:12:33.621 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 02:12:33.622 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 02:12:33.622 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 02:12:33.623 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 02:12:33.624 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 02:12:33.625 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 02:12:33.626 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 02:12:33.626 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 02:12:33.629 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 02:12:33.643 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 02:12:33.668 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 02:12:33.758 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 02:12:33.758 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 02:12:33.759 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 02:12:33.759 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 02:12:33.759 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 02:12:33.760 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 02:12:33.760 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 02:12:33.760 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 02:12:33.761 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 02:12:33.762 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 02:12:33.762 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 02:12:33.763 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 02:12:34.557 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 02:12:34.755 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 02:12:34.766 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 02:12:34.769 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 02:12:34.792 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 02:12:34.794 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 02:12:34.802 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 02:12:34.804 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 02:12:34.805 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 02:12:34.808 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 02:12:34.810 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 02:12:34.814 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 02:12:34.818 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 02:12:34.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 02:12:34.826 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 02:12:34.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 02:12:34.835 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 02:12:34.838 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 02:12:34.839 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 02:12:34.853 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 02:12:34.856 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 02:12:34.858 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 02:12:34.860 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 02:12:34.862 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 02:12:34.865 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 02:12:34.867 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 02:12:34.868 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 02:12:34.869 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 02:12:34.871 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 02:12:34.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 02:12:34.876 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 02:12:34.879 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 02:12:34.882 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 02:12:34.894 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 02:12:34.896 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 02:12:34.899 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 02:12:34.899 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 02:12:34.921 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 02:12:34.923 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 02:12:34.924 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 02:12:34.927 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 02:12:34.930 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 02:12:34.932 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 02:12:34.935 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 02:12:34.936 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 02:12:34.938 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 02:12:34.940 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 02:12:34.942 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 02:12:34.945 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 02:12:34.947 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 02:12:34.949 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 02:12:34.951 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 02:12:34.953 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 02:12:34.955 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 02:12:34.956 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 02:12:34.970 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 02:12:34.973 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 02:12:34.976 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 02:12:34.978 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 02:12:34.980 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 02:12:34.985 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 02:12:34.988 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 02:12:34.988 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 02:12:34.990 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 02:12:34.993 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 02:12:34.996 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 02:12:34.999 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 02:12:35.002 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 02:12:35.004 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 02:12:35.007 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 02:12:35.009 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 02:12:35.011 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 02:12:35.012 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 02:12:35.022 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 02:12:35.024 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 02:12:35.025 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 02:12:35.027 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 02:12:35.029 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 02:12:35.034 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 02:12:35.035 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 02:12:35.036 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 02:12:35.038 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 02:12:35.039 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 02:12:35.042 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 02:12:35.043 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 02:12:35.046 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 02:12:35.049 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 02:12:35.051 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 02:12:35.053 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 02:12:35.055 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 02:12:35.055 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 02:12:35.063 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 02:12:35.065 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 02:12:35.067 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 02:12:35.069 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 02:12:35.070 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 02:12:35.072 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 02:12:35.075 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 02:12:35.075 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 02:12:35.081 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 02:12:35.083 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 02:12:35.085 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 02:12:35.087 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 02:12:35.090 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 02:12:35.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 02:12:35.094 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 02:12:35.097 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 02:12:35.101 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 02:12:35.101 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 02:12:35.116 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 02:12:35.118 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 02:12:35.134 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 02:12:35.136 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 02:12:35.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 02:12:35.142 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 02:12:35.144 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 02:12:35.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 02:12:35.148 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 02:12:35.150 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 02:12:35.152 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 02:12:35.154 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 02:12:35.156 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 02:12:35.158 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 02:12:35.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 02:12:35.162 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 02:12:35.165 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 02:12:35.166 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 02:12:35.185 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 02:12:35.187 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 02:12:35.189 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 02:12:35.191 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 02:12:35.193 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 02:12:35.196 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 02:12:35.198 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 02:12:35.198 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 02:12:35.200 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 02:12:35.202 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 02:12:35.204 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 02:12:35.206 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 02:12:35.207 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 02:12:35.209 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 02:12:35.211 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 02:12:35.214 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 02:12:35.216 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 02:12:35.216 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 02:12:36.231 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 02:12:36.382 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 02:12:36.384 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 02:12:36.387 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 02:12:36.387 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 02:12:36.388 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 02:12:36.394 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 02:12:36.394 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 02:12:36.418 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@591a4d25, existing ref count 0
2021-02-28 02:12:36.435 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 02:12:36.436 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 02:12:36.442 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 8648 (auto-detected)
2021-02-28 02:12:36.444 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 02:12:36.445 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 02:12:36.777 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 02:12:36.778 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 02:12:37.149 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 02:12:37.189 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 02:12:37.190 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 02:12:37.190 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 02:12:37.212 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 02:12:37.213 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 02:12:37.213 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 02:12:37.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 02:12:37.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 02:12:37.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 02:12:37.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 02:12:37.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4dd968f5
2021-02-28 02:12:37.256 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x3b07e989, [id: 0x2362e1bd] (inactive), chid=0x1] channelRegistered()
2021-02-28 02:12:37.264 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 02:12:37.265 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 02:12:37.265 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 02:12:37.265 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 02:12:37.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 02:12:37.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 02:12:37.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 02:12:37.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 02:12:37.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:37.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:37.276 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 02:12:37.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:37.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:12:37.289 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7d8785c2)
2021-02-28 02:12:37.291 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 02:12:37.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:12:37.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:37.298 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 02:12:37.301 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:37.302 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:37.305 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:37.305 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:12:37.306 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:37.310 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 02:12:37.311 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:12:37.311 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:37.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:37.338 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 02:12:37.338 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 02:12:37.344 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 02:12:37.345 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 02:12:37.378 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 02:12:37.384 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 02:12:37.385 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 02:12:37.386 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 02:12:37.388 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 02:12:37.388 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 02:12:37.388 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 02:12:37.389 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 02:12:37.389 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 02:12:37.390 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 02:12:37.394 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 02:12:37.394 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 02:12:37.395 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 02:12:37.395 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 02:12:37.395 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 02:12:37.395 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 02:12:38.493 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 02:12:39.760 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 02:12:40.368 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 02:12:40.368 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 02:12:40.372 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x84a5a032, [id: 0x9ebe7a96] (inactive), chid=0x2] channelRegistered()
2021-02-28 02:12:40.377 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 02:12:40.377 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 02:12:40.377 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 02:12:40.377 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 02:12:40.377 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 02:12:40.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 02:12:40.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 02:12:40.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 02:12:40.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:40.378 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:40.379 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 02:12:40.379 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:40.380 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:12:40.380 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@52b4244c)
2021-02-28 02:12:40.384 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 02:12:40.384 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:12:40.385 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 02:12:40.387 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 02:12:40.390 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.391 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.392 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:12:40.392 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:40.393 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.398 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 02:12:40.398 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:12:40.398 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.400 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:40.403 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:12:40.403 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:12:40.810 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.810 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.811 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:12:40.811 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:12:40.812 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.816 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 02:12:40.816 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:12:40.816 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:12:40.816 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:12:40.980 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.926 seconds (JVM running for 17.098)
2021-02-28 02:12:44.426 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 02:12:44.426 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:12:44.426 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:13:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:00.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:00.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:01.303 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 02:13:01.303 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:13:01.304 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:13:40.576 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 02:13:40.627 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:40.628 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:40.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:40.628 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:40.630 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:40.633 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 02:13:40.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:40.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:40.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@42b0daf9=[B@43d1c253, [B@68c013df=[B@41114269}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 02:13:40.635 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 02:13:40.635 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:40.635 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@42b0daf9=[B@43d1c253, [B@68c013df=[B@41114269}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:40.636 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@42b0daf9=[B@43d1c253, [B@68c013df=[B@41114269, [B@200a0e9b=[B@7f186f1e, [B@6b4302f9=[B@36842fd5}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:40.699 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 02:13:40.901 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@61b63f8a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@71b3553f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2eb9893e
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 02:13:40.903 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 02:13:41.265 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.265 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.266 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 02:13:41.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.273 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.274 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.274 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.274 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:41.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.281 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.281 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.285 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.285 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.286 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.291 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:41.291 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.291 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.291 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.294 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.295 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.295 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.295 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.296 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:41.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.301 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.301 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.302 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.302 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.303 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.307 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:41.307 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.307 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.307 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.308 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.308 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.309 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.309 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.309 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:13:41.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.314 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.315 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.315 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.316 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 02:13:41.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.321 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@468a9148=[B@c8e40b8, [B@35ad17aa=[B@514316c4, [B@971fe9e=[B@5740877c, [B@1e1c82e2=[B@2d3114e4}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:13:41.384 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.384 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.385 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:13:41.385 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:13:41.386 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.390 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 02:13:41.391 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:13:41.391 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:13:41.391 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@53c41a7a=[B@1f87b772, [B@1af8d3f0=[B@43bc8021, [B@49d0dcb4=[B@cc6c19e, [B@6ce3675e=[B@7b688ecf}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:14:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:14:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:14:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:14:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:14:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:14:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:14:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:15:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:15:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:15:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:15:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:15:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:15:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:15:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:15:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:15:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:16:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:16:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:16:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:16:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:16:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:17:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:17:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:17:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:17:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:17:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:17:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:17:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:17:13.706 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 02:17:13.707 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:17:13.707 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:17:14.511 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 02:17:14.512 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:17:14.512 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:18:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:18:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:18:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:18:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:18:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:18:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:18:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:18:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:19:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:19:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:19:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:19:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:20:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:20:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:20:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:20:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:20:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:20:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:20:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:20:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:20:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:21:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:21:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:21:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:22:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:22:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:22:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:22:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:22:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:22:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:23:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:23:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:23:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:23:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:24:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:24:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:24:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:24:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:24:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:24:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:24:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:24:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:25:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:25:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:25:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:25:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:25:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:25:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:25:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:26:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 02:26:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 02:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 02:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:26:15.548 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.548 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.549 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:26:15.549 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:26:15.550 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.554 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 02:26:15.554 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:26:15.554 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.555 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:26:15.555 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 02:26:15.555 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 02:26:15.555 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.555 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 02:26:15.556 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 02:26:15.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 02:26:15.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 02:26:15.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 02:26:15.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 02:26:15.561 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 02:26:15.561 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 02:26:15.566 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 02:26:15.566 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 02:26:15.567 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 02:26:15.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 02:26:15.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 02:26:15.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x84a5a032, /192.168.31.49:59783 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 02:26:23.291 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 02:26:23.291 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 02:26:23.292 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 02:26:23.292 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x3b07e989, /192.168.31.49:59775 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 02:26:23.296 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@591a4d25
2021-02-28 02:26:23.297 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 02:26:23.397 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 15 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 02:26:23.400 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 02:26:23.402 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 20:04:40.602 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 20:04:40.624 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 20:04:40.639 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 20:04:40.642 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 20:04:40.643 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 20:04:40.644 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 20:04:40.654 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 20:04:40.727 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 20:04:41.053 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 20:04:41.061 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 20:04:41.062 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 20:04:41.062 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 20:04:41.063 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 20:04:41.065 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 20:04:43.746 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 20:04:45.843 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 20:04:45.846 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 20:04:47.317 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 20:04:49.224 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 20:04:49.225 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 20:04:49.226 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 20:04:49.559 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 20:04:49.694 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 20:04:49.698 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 20:04:49.716 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 20:04:49.757 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 20:04:49.757 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 20:04:49.769 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 20:04:49.769 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 20:04:49.776 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@54463380
2021-02-28 20:04:49.785 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 20:04:49.787 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 20:04:49.788 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 20:04:49.790 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 20:04:49.792 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 20:04:49.793 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 20:04:49.798 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 20:04:49.806 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 20:04:49.815 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @509d60ae
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 20:04:49.898 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 20:04:49.899 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 20:04:49.900 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 20:04:49.901 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 20:04:49.902 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 20:04:49.909 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 20:04:49.910 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 20:04:49.913 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 20:04:49.914 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 20:04:49.918 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 20:04:49.940 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 20:04:49.984 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 20:04:50.121 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 20:04:50.121 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 20:04:50.122 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 20:04:50.123 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 20:04:50.124 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 20:04:50.124 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 20:04:50.124 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 20:04:50.124 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 20:04:50.125 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 20:04:50.125 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 20:04:50.126 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 20:04:50.127 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 20:04:56.156 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 20:04:58.446 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 20:04:58.511 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 20:04:58.517 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 20:04:58.591 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 20:04:58.597 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 20:04:58.618 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 20:04:58.639 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 20:04:58.641 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 20:04:58.644 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 20:04:58.648 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 20:04:58.666 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 20:04:58.671 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 20:04:58.676 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 20:04:58.702 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 20:04:58.710 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 20:04:58.740 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 20:04:58.753 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 20:04:58.754 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 20:04:58.778 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 20:04:58.809 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 20:04:58.827 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 20:04:58.875 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 20:04:58.883 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 20:04:58.891 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 20:04:58.895 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 20:04:58.896 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 20:04:58.899 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 20:04:59.097 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 20:04:59.102 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 20:04:59.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 20:04:59.110 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 20:04:59.113 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 20:04:59.116 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 20:04:59.120 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 20:04:59.124 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 20:04:59.124 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 20:04:59.137 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 20:04:59.141 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 20:04:59.143 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 20:04:59.148 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 20:04:59.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 20:04:59.156 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 20:04:59.159 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 20:04:59.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 20:04:59.162 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 20:04:59.165 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 20:04:59.206 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 20:04:59.209 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 20:04:59.212 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 20:04:59.215 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 20:04:59.218 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 20:04:59.221 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 20:04:59.224 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 20:04:59.238 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 20:04:59.272 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 20:04:59.278 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 20:04:59.281 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 20:04:59.284 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 20:04:59.286 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 20:04:59.292 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 20:04:59.296 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 20:04:59.318 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 20:04:59.327 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 20:04:59.330 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 20:04:59.335 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 20:04:59.339 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 20:04:59.347 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 20:04:59.351 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 20:04:59.355 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 20:04:59.367 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 20:04:59.379 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 20:04:59.381 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 20:04:59.402 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 20:04:59.527 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 20:04:59.534 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 20:04:59.537 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 20:04:59.542 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 20:04:59.546 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 20:04:59.549 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 20:04:59.566 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 20:04:59.570 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 20:04:59.579 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 20:04:59.588 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 20:04:59.592 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 20:04:59.607 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 20:04:59.611 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 20:04:59.614 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 20:04:59.617 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 20:04:59.620 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 20:04:59.621 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 20:04:59.741 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 20:04:59.744 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 20:04:59.747 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 20:04:59.750 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 20:04:59.753 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 20:04:59.759 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 20:04:59.762 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 20:04:59.763 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 20:04:59.776 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 20:04:59.779 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 20:04:59.783 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 20:04:59.786 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 20:04:59.793 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 20:04:59.797 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 20:04:59.799 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 20:04:59.803 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 20:04:59.815 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 20:04:59.816 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 20:04:59.836 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 20:04:59.848 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 20:04:59.864 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 20:04:59.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 20:04:59.877 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 20:04:59.881 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 20:04:59.883 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 20:04:59.884 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 20:05:00.126 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 20:05:00.129 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 20:05:00.132 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 20:05:00.135 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 20:05:00.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 20:05:00.142 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 20:05:00.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 20:05:00.148 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 20:05:00.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 20:05:00.151 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 20:05:00.166 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 20:05:00.169 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 20:05:00.172 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 20:05:00.175 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 20:05:00.178 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 20:05:00.181 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 20:05:00.184 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 20:05:00.185 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 20:05:00.189 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 20:05:00.192 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 20:05:00.194 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 20:05:00.220 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 20:05:00.228 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 20:05:00.232 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 20:05:00.236 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 20:05:00.240 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 20:05:00.245 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 20:05:00.245 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 20:05:02.617 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 20:05:02.960 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 20:05:02.965 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 20:05:02.969 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 20:05:02.969 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 20:05:02.969 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 20:05:02.977 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 20:05:02.978 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 20:05:03.011 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@7577589, existing ref count 0
2021-02-28 20:05:03.041 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 20:05:03.043 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 20:05:03.057 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 13444 (auto-detected)
2021-02-28 20:05:03.060 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 20:05:03.060 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 20:05:03.618 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 20:05:03.620 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 20:05:05.191 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 20:05:05.264 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 20:05:05.264 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 20:05:05.265 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 20:05:05.381 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 20:05:05.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 20:05:05.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 20:05:05.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 20:05:05.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 20:05:05.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 20:05:05.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 20:05:05.405 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@44edb30e
2021-02-28 20:05:05.469 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x57b8cca1, [id: 0x12bbf114] (inactive), chid=0x1] channelRegistered()
2021-02-28 20:05:05.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 20:05:05.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 20:05:05.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 20:05:05.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 20:05:05.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 20:05:05.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 20:05:05.535 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 20:05:05.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 20:05:05.541 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:05.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:05.546 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 20:05:05.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:05.558 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:05:05.560 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7e26038b)
2021-02-28 20:05:05.567 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 20:05:05.567 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:05:05.568 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:05.575 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 20:05:05.579 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:05.617 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:05.620 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:05:05.620 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:05:05.620 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:05.624 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 20:05:05.625 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:05:05.625 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:05.630 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:05:05.818 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 20:05:05.818 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 20:05:05.880 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 20:05:05.881 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 20:05:05.933 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 20:05:05.940 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 20:05:05.941 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 20:05:05.942 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 20:05:05.945 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 20:05:05.945 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 20:05:05.946 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 20:05:05.946 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 20:05:05.947 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 20:05:05.949 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 20:05:05.952 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 20:05:05.953 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 20:05:05.954 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 20:05:05.954 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 20:05:05.954 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 20:05:05.954 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 20:05:07.796 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 20:05:10.168 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 20:05:11.163 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 20:05:11.164 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 20:05:11.172 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x326da607, [id: 0xfdb37704] (inactive), chid=0x2] channelRegistered()
2021-02-28 20:05:11.178 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 20:05:11.178 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 20:05:11.178 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 20:05:11.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 20:05:11.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 20:05:11.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 20:05:11.179 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 20:05:11.180 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 20:05:11.180 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:11.180 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:11.181 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 20:05:11.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:11.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 20:05:11.185 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@60703cf1)
2021-02-28 20:05:11.189 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 20:05:11.189 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 20:05:11.190 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 20:05:11.193 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 20:05:11.200 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.204 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.205 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:05:11.205 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 20:05:11.206 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.211 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 20:05:11.211 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 20:05:11.211 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.213 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:05:11.216 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:05:11.216 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:05:11.550 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.550 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.551 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 20:05:11.551 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:05:11.552 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 20:05:11.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 20:05:11.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:05:11.556 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:05:11.686 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 38.114 seconds (JVM running for 44.309)
2021-02-28 20:06:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:06:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:06:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:06:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:06:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:06:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:06:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:06:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:06:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:06:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:06:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:07:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:07:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:07:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:07:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:07:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:07:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:07:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:07:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:07:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:08:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:08:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:08:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:08:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:08:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:08:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:08:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:08:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:08:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:08:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:09:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:09:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:09:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:09:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:09:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:09:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:09:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:09:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:10:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.030 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:10:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.033 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:10:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:10:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:10:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:10:00.040 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.041 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:10:00.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.042 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:10:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:10:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:10:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:10:00.048 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:11:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:11:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:11:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:11:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:11:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:11:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:11:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:11:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:11:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:11:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:12:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:12:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:12:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:12:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:12:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:12:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:12:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:12:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:13:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:13:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:13:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:13:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:13:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:13:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:13:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:13:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:13:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:14:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:14:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:14:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:14:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:14:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:14:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:14:35.346 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 20:14:35.346 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:14:35.347 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:14:35.352 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:14:35.353 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:14:37.291 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:14:37.291 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:14:37.291 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:14:45.257 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 20:14:45.258 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:14:45.258 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:15:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:15:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:15:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:15:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:15:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:15:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:15:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:15:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:15:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:15:07.141 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 20:15:07.142 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:15:07.143 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:16:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.352 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 20:16:18.397 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.398 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.399 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.399 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.399 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.403 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 352 bytes, 1 commands in the stack
2021-02-28 20:16:18.403 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.403 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7755424d=[B@65aaa14a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:16:18.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 228 bytes, 1 commands in the stack
2021-02-28 20:16:18.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7755424d=[B@65aaa14a}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7755424d=[B@65aaa14a, [B@7a81396b=[B@63731ad8, [B@4a917780=[B@10ca2dbc, [B@1e12addd=[B@51267552}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.515 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.516 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.516 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.516 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.517 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 20:16:18.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.522 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.523 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.524 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.524 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.524 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.529 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.528 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:16:18.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:16:18.530 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:16:18.530 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.531 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.531 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.532 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.537 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.537 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.537 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.540 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.540 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.541 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.540 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.541 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.549 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.549 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.553 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.554 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.554 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.554 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.554 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.558 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.558 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.559 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.559 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.559 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.559 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.559 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.559 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.560 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:18.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.565 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.566 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.566 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.566 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.567 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 432 bytes, 1 commands in the stack
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ad156ee=[B@210f22b6}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 148 bytes, 1 commands in the stack
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ad156ee=[B@210f22b6}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.571 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ad156ee=[B@210f22b6, [B@60e94ce6=[B@a73fbb6, [B@287294c=[B@20d70862, [B@523179d4=[B@1ba1887d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.574 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:16:18.581 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.581 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.582 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:18.582 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:18.582 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.586 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 20:16:18.587 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:18.587 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:18.587 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4287bd04=[B@27d5a44e, [B@57bc50a9=[B@12d99105, [B@4fb0c624=[B@5b91e49c, [B@58c54dcf=[B@29c87114}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:18.588 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:16:18.588 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost] : 175 ] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 40 common frames omitted
2021-02-28 20:16:51.691 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.691 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.692 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.692 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.692 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.697 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 20:16:51.697 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.697 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.698 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@295b1552=[B@13392dfa, [B@43f181bc=[B@5c8ab240, [B@4af06e8a=[B@15470365, [B@6239456a=[B@3d7d06b2}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.701 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.701 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.702 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.701 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.702 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.707 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 20:16:51.707 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.708 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.708 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.708 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.708 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.709 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.709 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.709 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.713 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:51.713 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.713 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.714 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.714 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.714 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.714 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.714 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.715 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.720 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:51.720 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.720 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.720 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.720 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.720 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.721 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.721 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.722 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.725 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:51.726 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.726 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.726 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.726 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.727 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.728 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.728 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.729 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.733 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:51.733 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.733 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.733 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.734 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.735 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.736 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.736 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.736 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:16:51.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.741 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.741 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.741 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.741 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.741 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.742 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 20:16:51.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.748 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@67f1aa1a=[B@6ee01c16}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:16:51.748 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 20:16:51.748 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.748 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@67f1aa1a=[B@6ee01c16}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@67f1aa1a=[B@6ee01c16, [B@43917684=[B@1229ca51, [B@160cb0d2=[B@5a44abc6, [B@7cc76973=[B@29bd1a7c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.749 [ http-nio-5001-exec-2 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:16:51.751 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.752 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.752 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:16:51.752 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:16:51.753 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.757 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 20:16:51.757 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:16:51.757 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:16:51.757 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6e7672c9=[B@51a69743, [B@32d15614=[B@697f1a95, [B@4d34d113=[B@2a8e2e0, [B@c1b5c33=[B@5404dc42}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:16:51.758 [ http-nio-5001-exec-2 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:16:51.759 [ http-nio-5001-exec-2 ] - [ ERROR ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost] : 175 ] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 40 common frames omitted
2021-02-28 20:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:16.784 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:16.785 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:16.785 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:16.785 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:16.801 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:16.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 20:17:16.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:16.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:16.807 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6e729a75=[B@1af4c90f, [B@779fcd4f=[B@13888aab, [B@178166e6=[B@f22786a, [B@60af465d=[B@15255a7d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.057 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.057 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.057 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.059 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 20:17:36.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.067 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.068 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.068 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.068 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.068 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.069 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.073 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:17:36.073 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:17:36.073 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:17:36.073 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.075 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.076 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.076 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.077 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.077 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.082 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.083 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.083 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.088 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.088 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.088 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.093 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.093 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.093 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.094 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.098 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.098 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.098 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.098 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.098 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.098 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.099 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.099 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.099 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.103 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:17:36.103 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.103 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.103 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.104 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.104 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.104 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:36.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:36.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.108 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 20:17:36.108 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.108 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@625289bd=[B@5d9bd138}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:17:36.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 20:17:36.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:36.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@625289bd=[B@5d9bd138}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:36.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@625289bd=[B@5d9bd138, [B@5e962981=[B@2fbc98ce, [B@5ac4ebf6=[B@40896699, [B@2cad9e72=[B@3d6fbe25}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:36.111 [ http-nio-5001-exec-3 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:17:38.067 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:38.067 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:38.068 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:17:38.068 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:17:38.068 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:38.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 20:17:38.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:17:38.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:17:38.073 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7d71f9f4=[B@f649686, [B@36c0747c=[B@3a326082, [B@3df66193=[B@34c664ae, [B@7da87e9e=[B@aa4b026}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:17:38.073 [ http-nio-5001-exec-3 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 20:17:38.074 [ http-nio-5001-exec-3 ] - [ ERROR ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost] : 175 ] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class cn.smile.common.vo.LoginUserInfo (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; cn.smile.common.vo.LoginUserInfo is in unnamed module of loader 'app')
	at cn.smile.smilemall.order.interceptor.UserLoginInterceptor.preHandle(UserLoginInterceptor.java:25)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 40 common frames omitted
2021-02-28 20:18:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:18:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:18:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:18:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:18:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:18:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:18:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:18:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:18:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:18:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:19:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:19:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:19:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:19:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:19:35.371 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:19:35.372 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:19:35.373 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:19:37.280 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:19:37.281 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:19:37.281 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:20:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:20:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:20:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:20:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:20:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:20:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:20:41.805 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 20:20:41.805 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:20:41.805 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:20:45.724 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 20:20:45.726 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:20:45.726 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:20:45.727 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:20:45.727 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:20:47.124 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:20:47.124 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:20:47.124 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:21:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:21:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:21:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:21:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:21:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:21:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:21:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:21:06.224 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:21:06.224 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:21:06.224 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:21:17.055 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 20:21:17.055 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:21:17.056 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:22:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:22:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:22:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:22:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:22:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:22:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:22:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:23:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:23:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:23:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:23:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:23:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:23:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:23:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:23:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:24:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:24:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:24:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:24:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:24:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:24:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:24:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.022 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:24:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:24:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:24:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:24:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:25:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:25:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:25:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:25:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:25:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:25:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:25:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:25:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:25:45.787 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:25:45.788 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:25:45.788 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:25:47.199 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:25:47.199 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:25:47.199 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:26:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:26:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:26:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:26:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:26:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:26:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:26:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:26:35.061 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:26:35.061 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:26:35.062 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:27:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:27:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:27:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:27:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:27:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:27:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:27:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:27:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:28:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:28:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:28:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:28:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:28:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:28:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:28:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:28:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:28:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:28:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:28:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:29:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:29:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:29:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:29:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:29:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:29:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:29:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:29:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:29:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:29:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:29:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:30:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:30:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:30:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:30:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:30:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:30:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:30:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:30:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:31:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:31:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:31:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:31:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:31:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:31:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:31:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:31:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:32:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:32:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:32:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:32:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:32:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:32:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:32:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:33:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:33:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:33:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:33:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:33:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:33:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:33:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:33:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:33:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:33:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:34:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:34:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:34:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:34:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:34:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:34:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:34:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:34:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:34:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:35:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:35:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:35:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:35:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:35:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:36:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:36:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:36:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:36:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:36:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:36:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:36:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:37:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:37:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:37:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:37:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:37:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:38:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:38:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:38:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:38:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:38:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:38:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:38:36.536 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:38:36.537 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:38:36.537 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:39:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:39:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:39:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:39:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:39:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:39:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:39:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:40:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:40:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:40:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:40:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:40:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:40:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:40:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:40:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:40:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:40:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:40:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:41:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:41:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:41:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:41:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:41:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:41:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:41:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:42:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:42:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:42:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:42:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:42:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:42:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:42:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:42:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:42:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:42:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:42:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:43:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:43:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:43:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:43:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:43:46.729 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:43:46.729 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:43:46.730 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:44:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:44:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:44:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:44:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:44:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:44:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:44:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:44:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:44:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:45:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:45:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:45:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:45:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:45:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:45:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:45:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:45:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:45:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:46:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:46:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:46:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:46:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:46:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:46:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:46:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:46:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:46:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:47:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:47:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:47:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:47:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:47:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:47:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:47:36.162 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-28 20:47:36.162 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:47:36.163 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:47:36.165 [ springSessionRedisMessageListenerContainer-23 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.165 [ springSessionRedisMessageListenerContainer-23 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:47:36.166 [ springSessionRedisMessageListenerContainer-23 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:47:36.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 64 bytes, 1 commands in the stack
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 128 bytes, 1 commands in the stack
2021-02-28 20:47:36.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 192 bytes, 1 commands in the stack
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 196 bytes, 1 commands in the stack
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:47:36.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@202ed76b=[B@7f94f16b, [B@73f4cfcf=[B@51e1715d, [B@5f65c7b3=[B@43e4619, [B@926d6bb=[B@75174172}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:48:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:48:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:48:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 57 bytes, 1 commands in the stack
2021-02-28 20:48:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[[B@4a3bd265], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:48:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:48:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:48:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.012 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:48:00.012 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:48:00.013 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:48:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:48:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:48:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:48:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:48:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:48:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:48:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:48:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:48:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:49:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:49:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:49:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:49:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:49:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:49:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:49:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:49:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:50:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:50:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.026 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:50:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:50:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:50:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:50:00.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:50:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:50:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:50:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:51:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:51:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:51:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:51:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:51:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:51:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:51:37.768 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:51:37.768 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:51:37.768 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:52:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:52:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:52:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:52:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:52:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:52:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:52:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:52:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:52:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:52:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:52:36.152 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 113 bytes, 0 commands in the stack
2021-02-28 20:52:36.152 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:52:36.152 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:53:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:53:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:53:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:53:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:53:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:53:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:53:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:53:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:54:00.027 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:54:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:54:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:54:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:54:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:54:00.033 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.033 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:54:00.034 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:54:00.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.039 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:54:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:54:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:54:00.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:54:01.327 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:54:01.327 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:54:01.327 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:54:07.487 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 20:54:07.488 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:54:07.488 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:54:07.488 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:54:07.489 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:55:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:55:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:55:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:55:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:55:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:55:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:55:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:55:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:56:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:56:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:56:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:56:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:56:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:56:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:56:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:56:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:56:06.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:56:06.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:56:06.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:57:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:57:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:57:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:57:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:57:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:57:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:58:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:58:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:58:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:58:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:58:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:58:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:58:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:58:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:59:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:59:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:59:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 20:59:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 20:59:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 20:59:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 20:59:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 20:59:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 20:59:07.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 20:59:07.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:59:07.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 20:59:27.544 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 20:59:27.544 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 20:59:27.544 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:00:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:00:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:00:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:00:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:00:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:00:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:00:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:00:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:00:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:00:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:00:58.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 21:00:58.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:00:58.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:00:58.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:00:58.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:01:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:01:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:01:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:01:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:01:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:01:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.031 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.032 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:01:00.033 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.032 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:01:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:01:00.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:01:00.038 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:01:00.038 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:01:01.188 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 21:01:01.189 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:01:01.190 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:01:31.076 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 21:01:31.076 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:01:31.076 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:02:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:02:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:02:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:02:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:02:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:02:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:03:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:03:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:03:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:03:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:03:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:03:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:03:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:03:55.043 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.043 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.043 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:03:55.043 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:03:55.044 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.048 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:03:55.048 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:03:55.048 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.049 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:03:55.049 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:03:55.049 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:03:55.049 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.049 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.050 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:03:55.050 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:03:55.050 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.054 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:03:55.054 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:03:55.054 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:03:55.054 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:03:55.055 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:03:55.055 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:03:55.063 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:03:55.064 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:03:55.065 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:03:55.066 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:03:55.066 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:03:55.066 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x326da607, /192.168.31.49:62976 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:04:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:04:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:04:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:04:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:04:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:04:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:04:02.234 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:04:02.234 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:04:02.235 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:04:02.235 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x57b8cca1, /192.168.31.49:62876 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:04:02.241 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@7577589
2021-02-28 21:04:02.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:04:02.343 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 20 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:04:02.347 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:04:02.351 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:04:13.882 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:04:13.887 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:04:13.898 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:04:13.901 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:04:13.901 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:04:13.902 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:04:13.909 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:04:13.936 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:04:14.086 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:04:14.095 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:04:14.096 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:04:14.097 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:04:14.098 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:04:14.099 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:04:15.129 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:04:16.028 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:04:16.029 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:04:16.369 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:04:17.008 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:04:17.009 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:04:17.009 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:04:17.176 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:04:17.260 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:04:17.263 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:04:17.274 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:04:17.305 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:04:17.306 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:04:17.313 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:04:17.314 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:04:17.317 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@23ea8830
2021-02-28 21:04:17.322 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:04:17.323 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:04:17.324 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:04:17.325 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:04:17.326 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:04:17.328 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:04:17.330 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:04:17.332 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:04:17.334 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @4597d92e
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:04:17.336 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:04:17.337 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:04:17.337 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:04:17.338 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:04:17.338 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:04:17.340 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:04:17.341 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:04:17.343 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:04:17.343 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:04:17.346 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:04:17.360 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:04:17.385 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:04:17.452 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:04:17.452 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:04:17.452 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:04:17.452 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:04:17.452 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:04:17.453 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:04:17.454 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:04:18.382 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:04:18.590 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:04:18.599 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:04:18.602 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:04:18.626 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:04:18.629 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:04:18.638 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:04:18.643 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:04:18.644 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:04:18.647 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:04:18.649 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:04:18.665 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:04:18.669 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:04:18.673 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:04:18.677 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:04:18.682 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:04:18.688 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:04:18.692 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:04:18.693 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:04:18.706 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:04:18.710 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:04:18.713 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:04:18.715 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:04:18.717 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:04:18.720 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:04:18.723 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:04:18.723 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:04:18.725 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:04:18.727 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:04:18.729 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:04:18.731 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:04:18.735 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:04:18.738 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:04:18.740 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:04:18.742 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:04:18.744 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:04:18.745 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:04:18.755 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:04:18.758 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:04:18.760 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:04:18.762 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:04:18.764 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:04:18.767 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:04:18.769 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:04:18.770 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:04:18.771 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:04:18.773 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:04:18.775 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:04:18.777 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:04:18.779 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:04:18.782 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:04:18.784 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:04:18.786 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:04:18.788 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:04:18.789 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:04:18.809 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:04:18.813 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:04:18.817 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:04:18.820 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:04:18.824 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:04:18.830 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:04:18.833 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:04:18.833 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:04:18.837 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:04:18.840 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:04:18.844 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:04:18.848 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:04:18.851 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:04:18.855 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:04:18.859 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:04:18.862 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:04:18.866 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:04:18.867 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:04:18.882 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:04:18.886 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:04:18.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:04:18.891 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:04:18.893 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:04:18.898 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:04:18.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:04:18.902 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:04:18.905 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:04:18.908 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:04:18.910 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:04:18.912 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:04:18.915 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:04:18.931 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:04:18.934 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:04:18.937 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:04:18.940 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:04:18.941 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:04:18.963 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:04:18.965 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:04:18.967 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:04:18.968 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:04:18.970 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:04:18.972 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:04:18.974 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:04:18.975 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:04:18.976 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:04:18.978 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:04:18.980 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:04:18.982 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:04:18.984 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:04:18.986 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:04:18.988 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:04:18.990 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:04:18.993 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:04:18.993 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:04:19.002 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:04:19.004 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:04:19.006 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:04:19.008 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:04:19.010 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:04:19.012 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:04:19.014 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:04:19.014 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:04:19.017 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:04:19.019 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:04:19.025 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:04:19.027 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:04:19.029 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:04:19.032 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:04:19.035 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:04:19.040 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:04:19.043 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:04:19.044 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:04:19.058 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:04:19.060 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:04:19.062 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:04:19.064 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:04:19.067 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:04:19.070 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:04:19.074 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:04:19.074 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:04:19.077 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:04:19.079 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:04:19.081 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:04:19.083 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:04:19.086 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:04:19.089 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:04:19.091 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:04:19.093 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:04:19.096 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:04:19.096 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:04:19.952 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:04:20.107 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:04:20.110 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:04:20.112 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:04:20.112 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:04:20.112 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:04:20.118 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:04:20.118 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:04:20.136 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@1a85e86e, existing ref count 0
2021-02-28 21:04:20.148 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:04:20.150 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:04:20.156 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 12748 (auto-detected)
2021-02-28 21:04:20.158 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:04:20.159 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:04:20.518 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:04:20.520 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:04:20.868 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:04:20.888 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:04:20.888 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:04:20.888 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:04:20.911 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:04:20.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:04:20.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:04:20.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:04:20.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:04:20.921 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:04:20.921 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:04:20.921 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@156b8da6
2021-02-28 21:04:20.951 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xea76c6d1, [id: 0xb35c16f2] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:04:20.959 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:04:20.959 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:04:20.960 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:04:20.960 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:04:20.960 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:04:20.960 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:04:20.961 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:04:20.962 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:04:20.965 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:20.968 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:20.969 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:04:20.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:20.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:04:20.980 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@5645e58)
2021-02-28 21:04:20.982 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:04:20.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:04:20.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:20.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:04:21.018 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:21.019 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:21.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:04:21.022 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:04:21.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:21.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:04:21.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:04:21.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:21.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:04:21.055 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:04:21.055 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:04:21.088 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:04:21.088 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:04:21.139 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:04:21.144 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:04:21.145 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:04:21.146 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:04:21.147 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:04:21.148 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:04:21.148 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:04:21.149 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:04:21.149 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:04:21.150 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:04:21.153 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:04:21.153 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:04:21.153 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:04:21.154 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:04:21.154 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:04:21.154 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:04:22.114 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:04:23.228 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:04:23.829 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:04:23.829 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:04:23.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xf03f9c09, [id: 0xc9f5de73] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:04:23.838 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:04:23.838 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:04:23.838 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:04:23.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:23.840 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:23.840 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:04:23.840 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:23.841 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:04:23.841 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6c3e8576)
2021-02-28 21:04:23.844 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:04:23.845 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:04:23.846 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:04:23.847 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:04:23.851 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:23.852 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:23.852 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:04:23.852 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:04:23.854 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:23.858 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:04:23.858 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:04:23.858 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:23.859 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:04:23.861 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:04:23.862 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:04:24.272 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:24.273 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:24.273 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:04:24.273 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:04:24.274 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:24.278 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:04:24.278 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:04:24.278 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:04:24.279 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:04:24.419 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.62 seconds (JVM running for 15.3)
2021-02-28 21:05:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:05:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:05:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:05:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:05:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:05:00.028 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.029 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:05:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:05:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:05:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:05:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:05:00.035 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:05:58.671 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 21:05:58.671 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:05:58.672 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:06:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:06:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:06:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:06:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:06:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:06:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:06:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:06:01.183 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 21:06:01.183 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:06:01.184 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:43.359 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 234 bytes, 0 commands in the stack
2021-02-28 21:06:43.360 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:06:43.360 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:43.360 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:06:43.361 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:44.009 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 87 bytes, 0 commands in the stack
2021-02-28 21:06:44.009 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:06:44.009 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:46.499 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:06:46.499 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:06:46.501 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:06:55.106 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:06:55.139 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:55.139 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:55.139 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:06:55.139 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:06:55.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:55.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 21:06:55.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:06:55.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:55.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d091724=[B@67419540}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:06:55.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 21:06:55.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:06:55.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d091724=[B@67419540}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:06:55.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d091724=[B@67419540, [B@76998001=[B@70c1a52e, [B@1d19f007=[B@4ae2babf, [B@3d51ff2=[B@18a9f22c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:02.120 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.427 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.427 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:02.427 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:02.428 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:02.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:02.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.432 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:02.432 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.433 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:02.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.436 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:02.439 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:02.439 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:02.440 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:02.440 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:13.985 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 151 bytes, 0 commands in the stack
2021-02-28 21:07:13.985 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:07:13.985 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:07:55.493 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.494 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.494 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.494 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.495 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.500 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:07:55.500 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.500 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.500 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.502 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.503 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.503 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.504 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:55.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.513 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.514 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.514 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.514 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.519 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:55.519 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.520 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.526 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.526 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.527 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.527 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:55.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.533 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.534 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.534 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.536 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.540 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:55.540 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.540 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.541 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.549 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.551 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:07:55.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.565 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.568 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.568 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:07:55.570 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:07:55.572 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.577 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 21:07:55.577 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.578 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.578 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@33285444=[B@4ebd7fda}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:07:55.579 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 21:07:55.579 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:07:55.579 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@33285444=[B@4ebd7fda}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:07:55.580 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@33285444=[B@4ebd7fda, [B@115513f0=[B@1227b70e, [B@463abb64=[B@2b54fc29, [B@37414d93=[B@382683bc}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:07:55.589 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
Caused by: java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:773)
	... 1014 common frames omitted
2021-02-28 21:08:01.946 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.947 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.947 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:08:01.948 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.948 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:08:01.951 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:08:01.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:08:01.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.952 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:08:01.952 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.952 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.953 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:08:01.953 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:08:01.953 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.957 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:08:01.957 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:08:01.958 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:01.958 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:08:02.012 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:02.012 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:02.013 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:08:02.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:08:02.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:02.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:08:02.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:08:02.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:08:02.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5b66cfe=[B@1c6f2467, [B@2a863481=[B@7d63957, [B@26bf204c=[B@58b4d4a1, [B@2a087c44=[B@31b769af}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:08:02.019 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] threw exception
com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
Caused by: java.lang.StackOverflowError: null
	at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(WriterBasedJsonGenerator.java:914)
	at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject(WriterBasedJsonGenerator.java:311)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:174)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
2021-02-28 21:08:02.026 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost] : 175 ] - Exception Processing ErrorPage[errorCode=0, location=/error]
com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"]->com.fasterxml.jackson.databind.ObjectMapper["factory"]->com.fasterxml.jackson.databind.MappingJsonFactory["codec"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
Caused by: java.lang.StackOverflowError: null
	at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(WriterBasedJsonGenerator.java:914)
	at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject(WriterBasedJsonGenerator.java:311)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:174)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
2021-02-28 21:09:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:09:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:24.456 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.456 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.456 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:09:24.456 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:24.457 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.461 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:09:24.461 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:09:24.461 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.461 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:24.462 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:09:24.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:09:24.462 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:24.462 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:09:24.462 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:09:24.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:09:24.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:24.467 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:24.468 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:09:24.468 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:09:24.471 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:09:24.471 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:09:24.472 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:09:24.472 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:09:24.472 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:09:24.473 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xf03f9c09, /192.168.31.49:3422 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:09:30.482 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:09:30.482 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:09:30.482 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:09:30.482 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:09:30.482 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:09:30.483 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:09:30.483 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:09:30.483 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:09:30.483 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xea76c6d1, /192.168.31.49:3411 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:09:30.486 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@1a85e86e
2021-02-28 21:09:30.487 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:09:30.587 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 11 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:09:30.689 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:09:30.692 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:09:41.779 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:09:41.784 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:09:41.796 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:09:41.798 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:09:41.799 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:09:41.800 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:09:41.806 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:09:41.837 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:09:41.988 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:09:41.998 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:09:41.999 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:09:42.000 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:09:42.000 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:09:42.001 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:09:43.014 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:09:43.917 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:09:43.918 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:09:44.259 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:09:44.877 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:09:44.878 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:09:44.879 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:09:45.047 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:09:45.136 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:09:45.139 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:09:45.155 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:09:45.183 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:09:45.184 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:09:45.191 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:09:45.191 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:09:45.195 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d421fe
2021-02-28 21:09:45.198 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:09:45.200 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:09:45.201 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:09:45.202 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:09:45.203 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:09:45.203 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:09:45.206 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:09:45.208 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:09:45.210 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6be7817a
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:09:45.212 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:09:45.212 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:09:45.213 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:09:45.213 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:09:45.214 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:09:45.215 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:09:45.216 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:09:45.217 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:09:45.218 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:09:45.220 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:09:45.235 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:09:45.259 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:09:45.326 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:09:45.326 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:09:45.327 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:09:45.328 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:09:45.328 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:09:45.328 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:09:46.468 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:09:46.680 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:09:46.688 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:09:46.691 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:09:46.715 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:09:46.717 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:09:46.724 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:09:46.728 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:09:46.729 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:09:46.732 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:09:46.734 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:09:46.738 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:09:46.754 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:09:46.758 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:09:46.762 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:09:46.767 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:09:46.781 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:09:46.786 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:09:46.787 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:09:46.800 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:09:46.804 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:09:46.807 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:09:46.809 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:09:46.811 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:09:46.814 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:09:46.817 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:09:46.817 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:09:46.819 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:09:46.821 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:09:46.823 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:09:46.825 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:09:46.828 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:09:46.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:09:46.833 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:09:46.835 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:09:46.838 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:09:46.838 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:09:46.848 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:09:46.850 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:09:46.852 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:09:46.854 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:09:46.855 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:09:46.858 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:09:46.860 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:09:46.860 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:09:46.862 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:09:46.864 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:09:46.866 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:09:46.868 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:09:46.870 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:09:46.872 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:09:46.875 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:09:46.878 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:09:46.879 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:09:46.880 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:09:46.902 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:09:46.907 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:09:46.910 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:09:46.913 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:09:46.915 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:09:46.919 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:09:46.923 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:09:46.924 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:09:46.926 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:09:46.929 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:09:46.934 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:09:46.938 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:09:46.942 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:09:46.946 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:09:46.949 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:09:46.952 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:09:46.955 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:09:46.956 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:09:46.967 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:09:46.969 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:09:46.972 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:09:46.973 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:09:46.976 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:09:46.979 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:09:46.983 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:09:46.984 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:09:46.986 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:09:46.989 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:09:46.992 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:09:46.995 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:09:46.997 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:09:47.001 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:09:47.004 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:09:47.007 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:09:47.021 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:09:47.021 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:09:47.042 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:09:47.044 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:09:47.046 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:09:47.048 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:09:47.049 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:09:47.051 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:09:47.053 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:09:47.054 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:09:47.056 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:09:47.058 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:09:47.059 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:09:47.061 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:09:47.064 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:09:47.065 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:09:47.067 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:09:47.069 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:09:47.071 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:09:47.072 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:09:47.081 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:09:47.083 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:09:47.084 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:09:47.086 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:09:47.088 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:09:47.090 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:09:47.091 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:09:47.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:09:47.094 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:09:47.095 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:09:47.098 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:09:47.100 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:09:47.102 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:09:47.104 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:09:47.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:09:47.108 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:09:47.110 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:09:47.110 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:09:47.122 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:09:47.126 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:09:47.129 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:09:47.132 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:09:47.134 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:09:47.137 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:09:47.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:09:47.140 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:09:47.141 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:09:47.143 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:09:47.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:09:47.149 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:09:47.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:09:47.153 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:09:47.155 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:09:47.157 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:09:47.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:09:47.160 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:09:48.014 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:09:48.168 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:09:48.170 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:09:48.172 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:09:48.172 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:09:48.173 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:09:48.177 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:09:48.178 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:09:48.196 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@4a9ff419, existing ref count 0
2021-02-28 21:09:48.211 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:09:48.212 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:09:48.218 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 11020 (auto-detected)
2021-02-28 21:09:48.220 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:09:48.220 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:09:48.567 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:09:48.569 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:09:48.908 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:09:48.931 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:09:48.931 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:09:48.932 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:09:48.955 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:09:48.956 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:09:48.956 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:09:48.956 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:09:48.957 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:09:48.965 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:09:48.965 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:09:48.965 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@619d4c91
2021-02-28 21:09:48.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x8e2908eb, [id: 0x6ed001dc] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:09:49.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:09:49.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:09:49.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:09:49.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:09:49.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:09:49.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:09:49.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:09:49.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:09:49.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:49.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:49.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:09:49.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:49.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:09:49.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@25bc77b3)
2021-02-28 21:09:49.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:09:49.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:09:49.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:49.034 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:09:49.037 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:49.038 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:49.040 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:49.040 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:09:49.041 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:49.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:09:49.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:09:49.045 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:49.049 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:49.093 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:09:49.093 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:09:49.101 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:09:49.101 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:09:49.135 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:09:49.175 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:09:49.176 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:09:49.177 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:09:49.178 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:09:49.179 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:09:49.179 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:09:49.179 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:09:49.179 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:09:49.181 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:09:49.185 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:09:49.186 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:09:49.186 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:09:49.187 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:09:49.187 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:09:49.187 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:09:50.136 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:09:51.214 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:09:51.822 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:09:51.823 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:09:51.827 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x42fd2a7e, [id: 0xdc9464ee] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:09:51.832 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:09:51.832 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:09:51.832 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:09:51.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:51.834 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:51.834 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:09:51.834 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:51.835 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:09:51.836 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@736b1429)
2021-02-28 21:09:51.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:09:51.839 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:09:51.840 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:09:51.842 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:09:51.845 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:51.846 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:51.846 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:09:51.847 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:51.848 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:51.852 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:09:51.852 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:09:51.852 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:51.854 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:51.856 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:09:51.856 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:09:52.264 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:52.264 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:52.264 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:09:52.264 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:09:52.265 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:52.270 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:09:52.270 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:09:52.270 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:09:52.270 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:09:52.385 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.844 seconds (JVM running for 15.163)
2021-02-28 21:10:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:10:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:10:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:10:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:10:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:10:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:10:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:10:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:10:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:10:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:00.028 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:10:57.131 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:10:57.170 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:57.171 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:57.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:10:57.171 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:10:57.172 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:57.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:10:57.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:10:57.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:57.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@a993446=[B@5486299c, [B@9ad5abf=[B@3f35933}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:10:57.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:10:57.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:10:57.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@a993446=[B@5486299c, [B@9ad5abf=[B@3f35933}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:10:57.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@a993446=[B@5486299c, [B@9ad5abf=[B@3f35933, [B@463fa324=[B@44bceef3, [B@5f1c4011=[B@622afa4b}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:00.141 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.142 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:00.144 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:11:00.439 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.444 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:11:00.444 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:11:00.444 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.444 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:00.444 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.444 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.445 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:00.445 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:11:00.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.450 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:11:00.450 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:11:00.450 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:00.450 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:11.330 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.330 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.331 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:11.331 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:11:11.335 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.339 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:11:11.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:11:11.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:11.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:11:11.340 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.340 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:11:11.340 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.341 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:11.345 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.341 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:11:11.351 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:11:11.351 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:11:11.351 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:11.351 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:11.352 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:11:11.352 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:11:11.358 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:11:11.359 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:11:11.363 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:11:11.364 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:11:11.369 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:11:11.369 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x42fd2a7e, /192.168.31.49:3744 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:11:25.422 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:11:25.423 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:11:25.425 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:11:25.425 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:11:25.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:11:25.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:11:25.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:11:25.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:11:25.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x8e2908eb, /192.168.31.49:3735 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:11:25.431 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@4a9ff419
2021-02-28 21:11:25.433 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:11:25.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 9 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:11:25.560 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:11:25.565 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:11:42.378 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:11:42.383 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:11:42.393 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:11:42.396 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:11:42.397 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:11:42.397 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:11:42.404 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:11:42.433 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:11:42.577 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:11:42.584 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:11:42.585 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:11:42.586 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:11:42.586 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:11:42.587 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:11:43.628 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:11:44.567 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:11:44.568 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:11:44.940 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:11:45.745 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:11:45.746 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:11:45.746 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:11:45.961 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:11:46.066 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:11:46.069 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:11:46.084 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:11:46.113 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:11:46.113 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:11:46.119 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:11:46.120 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:11:46.123 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@496cedbb
2021-02-28 21:11:46.128 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:11:46.130 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:11:46.130 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:11:46.131 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:11:46.133 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:11:46.133 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:11:46.136 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:11:46.138 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:11:46.140 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @59872a20
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:11:46.142 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:11:46.142 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:11:46.143 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:11:46.144 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:11:46.144 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:11:46.147 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:11:46.148 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:11:46.149 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:11:46.150 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:11:46.153 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:11:46.172 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:11:46.223 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:11:46.347 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:11:46.349 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:11:46.349 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:11:46.349 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:11:46.350 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:11:46.350 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:11:46.351 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:11:46.351 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:11:46.352 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:11:46.352 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:11:46.352 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:11:46.353 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:11:47.469 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:11:47.761 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:11:47.770 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:11:47.774 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:11:47.804 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:11:47.806 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:11:47.816 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:11:47.821 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:11:47.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:11:47.825 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:11:47.827 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:11:47.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:11:47.836 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:11:47.842 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:11:47.847 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:11:47.851 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:11:47.855 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:11:47.858 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:11:47.859 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:11:47.877 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:11:47.881 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:11:47.884 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:11:47.887 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:11:47.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:11:47.892 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:11:47.895 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:11:47.896 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:11:47.898 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:11:47.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:11:47.904 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:11:47.908 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:11:47.910 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:11:47.913 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:11:47.915 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:11:47.918 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:11:47.921 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:11:47.921 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:11:47.932 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:11:47.935 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:11:47.937 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:11:47.939 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:11:47.941 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:11:47.943 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:11:47.945 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:11:47.945 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:11:47.947 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:11:47.949 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:11:47.951 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:11:47.953 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:11:47.955 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:11:47.957 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:11:47.959 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:11:47.961 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:11:47.964 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:11:47.964 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:11:48.012 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:11:48.018 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:11:48.022 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:11:48.024 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:11:48.027 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:11:48.033 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:11:48.037 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:11:48.038 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:11:48.041 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:11:48.045 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:11:48.050 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:11:48.057 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:11:48.060 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:11:48.063 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:11:48.069 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:11:48.073 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:11:48.076 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:11:48.076 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:11:48.087 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:11:48.090 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:11:48.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:11:48.093 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:11:48.095 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:11:48.098 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:11:48.100 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:11:48.101 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:11:48.103 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:11:48.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:11:48.111 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:11:48.113 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:11:48.116 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:11:48.119 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:11:48.121 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:11:48.124 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:11:48.126 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:11:48.127 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:11:48.137 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:11:48.140 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:11:48.142 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:11:48.144 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:11:48.146 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:11:48.149 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:11:48.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:11:48.152 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:11:48.154 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:11:48.157 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:11:48.159 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:11:48.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:11:48.163 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:11:48.166 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:11:48.168 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:11:48.173 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:11:48.177 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:11:48.177 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:11:48.191 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:11:48.194 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:11:48.197 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:11:48.200 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:11:48.204 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:11:48.208 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:11:48.211 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:11:48.212 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:11:48.215 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:11:48.220 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:11:48.223 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:11:48.226 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:11:48.230 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:11:48.233 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:11:48.237 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:11:48.241 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:11:48.244 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:11:48.244 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:11:48.258 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:11:48.271 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:11:48.274 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:11:48.276 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:11:48.278 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:11:48.281 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:11:48.283 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:11:48.284 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:11:48.287 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:11:48.289 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:11:48.291 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:11:48.293 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:11:48.295 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:11:48.298 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:11:48.300 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:11:48.302 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:11:48.305 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:11:48.306 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:11:49.247 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:11:49.382 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:11:49.384 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:11:49.387 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:11:49.387 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:11:49.387 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:11:49.393 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:11:49.393 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:11:49.411 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@2c224096, existing ref count 0
2021-02-28 21:11:49.424 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:11:49.425 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:11:49.431 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 11724 (auto-detected)
2021-02-28 21:11:49.433 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:11:49.433 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:11:49.786 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:11:49.788 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:11:50.128 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:11:50.151 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:11:50.151 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:11:50.151 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:11:50.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:11:50.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:11:50.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:11:50.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:11:50.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:11:50.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:11:50.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:11:50.183 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@634c49d3
2021-02-28 21:11:50.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x98e0a939, [id: 0x6c61642d] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:11:50.222 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:11:50.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:11:50.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:11:50.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:11:50.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:11:50.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:11:50.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:11:50.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:11:50.229 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:50.231 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:50.232 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:11:50.236 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:50.241 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:11:50.243 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1194bede)
2021-02-28 21:11:50.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:11:50.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:11:50.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:50.252 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:11:50.255 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:50.255 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:50.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:50.257 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:11:50.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:50.279 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:11:50.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:11:50.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:50.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:50.329 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:11:50.329 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:11:50.338 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:11:50.338 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:11:50.414 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:11:50.434 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:11:50.435 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:11:50.436 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:11:50.438 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:11:50.438 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:11:50.438 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:11:50.439 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:11:50.439 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:11:50.440 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:11:50.441 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:11:50.442 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:11:50.442 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:11:50.442 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:11:50.442 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:11:50.442 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:11:51.364 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:11:52.585 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:11:53.237 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:11:53.237 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:11:53.241 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x00de41c0, [id: 0x36ec8ad0] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:11:53.246 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:11:53.247 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:11:53.247 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:11:53.247 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:53.247 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:53.248 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:11:53.250 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:53.251 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:11:53.251 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@5635744c)
2021-02-28 21:11:53.254 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:11:53.255 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:11:53.256 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:11:53.257 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:11:53.261 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.261 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.262 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:53.262 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:11:53.263 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.267 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:11:53.267 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:11:53.267 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.268 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:53.271 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:11:53.271 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:11:53.682 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.682 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.683 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:11:53.683 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:11:53.683 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.687 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:11:53.688 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:11:53.688 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:11:53.688 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:11:53.801 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 13.433 seconds (JVM running for 16.171)
2021-02-28 21:12:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:12:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:12:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:12:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:12:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:12:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:12:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:12:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:12:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:12:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:12:14.269 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:12:14.269 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:12:14.269 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:12:23.512 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:12:23.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:23.548 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:23.549 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:12:23.549 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:12:23.549 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:23.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:12:23.554 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:12:23.554 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:23.554 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6de6ad06=[B@4a25b22e, [B@7a4aa47d=[B@2e804431}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:12:23.555 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:12:23.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:12:23.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6de6ad06=[B@4a25b22e, [B@7a4aa47d=[B@2e804431}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:12:23.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6de6ad06=[B@4a25b22e, [B@7a4aa47d=[B@2e804431, [B@3ec3044f=[B@564fabdb, [B@124e6e6a=[B@cc99c62}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:03.424 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.425 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.425 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:03.426 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:03.427 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.429 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:03.429 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:03.429 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.429 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:03.429 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.430 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.430 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:03.430 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:03.431 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.434 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:03.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:03.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:03.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:11.385 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:13:11.385 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:13:11.386 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:13:11.386 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:13:11.422 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:13:11.440 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:13:11.440 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:13:11.440 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:13:11.448 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:13:11.462 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:13:11.462 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:13:11.462 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:13:11.462 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:13:11.469 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:13:11.470 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:13:11.471 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:13:11.471 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:13:11.472 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:13:11.473 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5876e19b
2021-02-28 21:13:11.542 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:13:11.551 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:13:11.752 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:13:11.753 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:13:11.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:13:31.515 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:13:31.516 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:13:31.516 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:13:31.516 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:13:31.516 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:13:31.519 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:13:31.524 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:13:31.526 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:13:31.527 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:13:34.084 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 21:13:34.421 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@48ae0ad9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@597ee159
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3cb9d5c3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 21:13:34.423 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 21:13:34.996 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.001 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:13:35.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.009 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.012 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.015 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:35.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.016 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.031 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.033 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.036 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.037 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.042 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:35.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.043 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.046 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.059 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.061 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.065 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.067 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.069 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:35.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.070 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.071 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.071 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.072 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.073 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.077 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:35.078 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.078 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.078 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.080 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.081 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.081 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.089 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.092 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:13:35.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.096 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.096 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.097 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.098 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:13:35.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2a0e00c8=[B@60686d1f, [B@4b5206dd=[B@2002c7fc}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:13:35.102 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:13:35.103 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.104 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2a0e00c8=[B@60686d1f, [B@4b5206dd=[B@2002c7fc}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.105 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2a0e00c8=[B@60686d1f, [B@4b5206dd=[B@2002c7fc, [B@7a508b74=[B@2cc8fba, [B@21ef0e0d=[B@34c78538}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:35.216 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.217 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.218 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:13:35.219 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.218 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:13:35.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:13:35.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:13:35.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:13:35.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4a32b3ff=[B@2237e39c, [B@137443d2=[B@136c5edb, [B@7523bf59=[B@7bddf298, [B@7d451a80=[B@2e997679}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:13:41.344 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:14:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:01.528 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:14:01.529 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:14:01.529 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:14:01.529 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:14:01.529 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:14:01.530 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:14:01.530 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:14:11.345 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:14:17.192 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:17.193 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:17.193 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:17.193 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:17.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:17.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:14:17.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:17.198 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:17.199 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@561922ff=[B@5548253, [B@3356acfb=[B@363d776, [B@7a692f47=[B@30c3c34a, [B@1a45453e=[B@1f1cd9}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:31.545 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:14:31.546 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:14:31.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:14:31.548 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:14:31.549 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:14:31.549 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:14:31.549 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:14:35.761 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:14:35.763 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:14:36.870 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:14:36.870 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:14:36.871 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:14:40.753 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.754 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.754 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:14:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.760 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.760 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.761 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.765 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:14:40.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:14:40.767 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:14:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.768 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.768 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.769 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.769 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.770 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.775 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.775 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.776 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.775 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.776 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.781 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.781 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.781 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.781 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.782 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.781 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.787 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.787 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.787 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.787 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.788 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.788 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.789 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.793 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.794 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.794 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.794 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.795 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:14:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.799 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.800 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.800 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.800 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.801 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@21785093=[B@3c3dfbad}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@21785093=[B@3c3dfbad}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@21785093=[B@3c3dfbad, [B@12cab6f3=[B@5ae7d2b1, [B@6a4b99a7=[B@1ddd9a30, [B@9d4a0b5=[B@2b6dae8d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:40.815 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.816 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.816 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:14:40.816 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:14:40.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:14:40.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:14:40.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:14:40.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@710625d=[B@50a20f49, [B@63864a54=[B@1a72be3, [B@12fb400e=[B@4914e0e9, [B@54248d1a=[B@3928f88c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:14:41.346 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:15:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:15:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:15:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:15:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:15:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:15:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:15:01.551 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:15:11.347 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:15:31.553 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:15:41.348 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:16:00.000 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:16:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:16:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:16:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:16:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:16:01.554 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:16:01.555 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:16:11.349 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:16:30.193 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:30.193 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:30.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:16:30.194 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:16:30.194 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:30.199 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 21:16:30.199 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:16:30.199 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:30.200 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2f0d172e=[B@519f66db}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:16:30.201 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 21:16:30.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:16:30.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2f0d172e=[B@519f66db}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:16:30.202 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2f0d172e=[B@519f66db, [B@2bd00117=[B@236a6d2, [B@6fc66a00=[B@2945d73a, [B@2835b4b1=[B@758f2e78}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:16:32.535 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:16:32.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:16:32.536 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:16:32.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:16:32.538 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:16:32.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:16:32.539 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:17:21.726 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:17:21.727 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:17:21.728 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:17:21.729 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:17:21.729 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:17:21.727 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:17:21.729 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:17:58.648 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:17:21.730 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:17:58.649 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:17:58.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:17:58.649 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:17:58.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:17:58.651 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:17:58.652 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:01.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:02.970 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:02.970 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:01.972 [ pool-3-thread-6 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:18:02.972 [ pool-3-thread-6 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:18:02.972 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:02.973 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:02.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:02.975 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:02.975 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.425 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.425 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.426 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.469 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:18:03.470 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:18:03.470 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:18:03.482 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.482 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.483 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.483 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.484 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.488 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:18:03.488 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.488 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.489 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.489 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.489 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.490 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.490 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.491 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.494 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.495 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.495 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.495 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.495 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.495 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.496 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.496 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.498 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.502 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.502 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.502 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.502 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.502 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.503 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.503 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.503 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.504 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.508 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.508 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.509 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.509 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.509 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.510 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.514 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.514 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.514 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.515 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.515 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.515 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.515 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.516 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.520 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.520 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.520 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.520 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.521 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.521 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.521 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.521 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.522 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.526 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:18:03.526 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.526 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.526 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.527 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.527 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.527 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.527 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:18:03.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4056477b=[B@4ca64de7}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:18:03.532 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:18:03.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4056477b=[B@4ca64de7}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4056477b=[B@4ca64de7, [B@687a009b=[B@4e70e92e, [B@4258a91b=[B@763656a3, [B@304753b4=[B@71a1290f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:03.542 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.542 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.544 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:18:03.545 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:18:03.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.549 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:18:03.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:18:03.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:18:03.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7b710e7c=[B@7da631d6, [B@3201a1a5=[B@4295ab4e, [B@76c66a08=[B@7460f3e, [B@e57dc8e=[B@374500f4}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:18:28.649 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:18:28.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:18:28.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:18:28.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:18:28.653 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:18:28.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:18:28.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:18:28.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:18:58.649 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:18:58.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:18:58.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:18:58.654 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:18:58.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:18:58.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:18:58.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:18:58.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.439 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.440 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.440 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.440 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.441 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.445 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:19:09.445 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.445 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@238976eb=[B@4af9bbe8, [B@3cd490ce=[B@534472e9}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:19:09.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:19:09.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@238976eb=[B@4af9bbe8, [B@3cd490ce=[B@534472e9}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.446 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@238976eb=[B@4af9bbe8, [B@3cd490ce=[B@534472e9, [B@3b126844=[B@24f91460, [B@23d8dd08=[B@545ae92c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.450 [ pool-3-thread-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:19:09.450 [ pool-3-thread-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:19:09.501 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:19:09.501 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:19:09.501 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:19:09.517 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.518 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.518 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.518 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.519 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.522 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:19:09.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.523 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.523 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.524 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.524 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.524 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.525 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.529 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.529 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.530 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.530 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:19:09.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:19:09.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:19:09.531 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.532 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.533 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.533 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.538 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.539 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.539 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.540 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.544 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.544 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.544 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.544 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.544 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.544 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.545 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.546 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.545 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.550 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.551 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.551 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.551 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.551 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.552 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.556 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.556 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.558 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.558 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.558 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.559 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.563 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:09.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.564 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.564 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.564 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.565 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.565 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.569 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@19f749aa=[B@76d190fd, [B@75c104e0=[B@1d45d23f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@19f749aa=[B@76d190fd, [B@75c104e0=[B@1d45d23f}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.570 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@19f749aa=[B@76d190fd, [B@75c104e0=[B@1d45d23f, [B@3e5c7224=[B@396bb1f6, [B@43c7870b=[B@a8c48ce}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:09.588 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.589 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.589 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:09.591 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.589 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:09.595 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:19:09.595 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:09.595 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:09.595 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@571cd6e9=[B@1524c6bf, [B@281cfcde=[B@5a9132c9, [B@4c9c0c2a=[B@764098ed, [B@243ee74f=[B@25170df5}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.281 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.281 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.281 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.282 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.282 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:19:25.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.287 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2af1fdb0=[B@69a5f3da, [B@154d6dae=[B@177bd35d, [B@5aae12e5=[B@3d68d26d, [B@4c1c9b94=[B@15002e6f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.292 [ pool-3-thread-10 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:19:25.292 [ pool-3-thread-10 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:19:25.338 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:19:25.338 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:19:25.339 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:19:25.348 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.349 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.349 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.350 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:19:25.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.355 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.355 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.355 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.356 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.359 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:25.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.360 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.360 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.360 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.361 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.364 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:25.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.365 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.365 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.366 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.366 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.366 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.366 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.370 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:25.370 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.371 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.371 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.371 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.376 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:25.376 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.376 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.376 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.377 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.377 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.377 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.377 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:19:25.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.382 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.382 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.383 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.383 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.388 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:19:25.388 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.388 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.389 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1ad5f42f=[B@75b29fb1, [B@6155a6a2=[B@4fd4d9a5}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:19:25.389 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:19:25.389 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.389 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1ad5f42f=[B@75b29fb1, [B@6155a6a2=[B@4fd4d9a5}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.389 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1ad5f42f=[B@75b29fb1, [B@6155a6a2=[B@4fd4d9a5, [B@7a9538fc=[B@5717bfcb, [B@36b9f1ba=[B@3e675d7d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:25.398 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.398 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.399 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:19:25.399 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:19:25.400 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:19:25.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:19:25.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:19:25.404 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6d66d095=[B@211967bf, [B@142bc8a2=[B@6b3dc5e6, [B@7e28c40b=[B@538d4c16, [B@7aa0e206=[B@2ec024b3}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:19:28.649 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:19:28.655 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:19:28.656 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:19:58.650 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:19:58.658 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:00.007 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:28.651 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:20:28.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:20:28.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:20:28.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:20:28.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:20:28.660 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:20:28.661 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:20:28.661 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:20:44.236 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.237 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.238 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.238 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.243 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:20:44.243 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.243 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.243 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@784d7c10=[B@7e686430, [B@57073a16=[B@10d13661, [B@676b3e6f=[B@2ef7ea52, [B@6d562876=[B@72be7262}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.246 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:20:44.247 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:20:44.286 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:20:44.286 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:20:44.286 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:20:44.296 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.297 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.297 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.297 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.298 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:20:44.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.302 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.303 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.303 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.304 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.304 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.304 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:44.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.308 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.309 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.309 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.310 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.309 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.310 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:44.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.314 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.315 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.315 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.315 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.316 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.319 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:44.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.320 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.320 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.320 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.321 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:44.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.326 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.326 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.326 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.326 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.331 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:20:44.331 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.331 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.331 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.332 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.332 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.332 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.332 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4fcac1e1=[B@56318447}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4fcac1e1=[B@56318447}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.338 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4fcac1e1=[B@56318447, [B@478551a9=[B@53ca6a1, [B@46a91659=[B@6859b7b6, [B@5ff512a4=[B@664c7f3a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:44.344 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.344 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.344 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:44.344 [ http-nio-5001-exec-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:20:44.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:20:44.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:20:44.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:44.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@115b2165=[B@19db3a89, [B@71b28441=[B@7c2e357f, [B@54f379c6=[B@33dc5e75, [B@514369cd=[B@799b54c2}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:50.746 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:20:50.750 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.751 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.751 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:20:50.751 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:50.751 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:20:50.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:20:50.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.755 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:50.756 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:20:50.756 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.756 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:20:50.756 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.756 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:20:50.756 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:20:50.756 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:20:50.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:20:50.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:20:50.760 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:20:50.761 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:20:50.761 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:20:50.764 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:20:50.765 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:20:50.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:20:50.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:20:50.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:20:50.766 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x00de41c0, /192.168.31.49:3914 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:20:58.651 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:20:59.245 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:20:59.246 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:20:59.256 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:20:59.256 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:20:59.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:20:59.257 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:20:59.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:20:59.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:20:59.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:20:59.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:20:59.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x98e0a939, /192.168.31.49:3904 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:20:59.262 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@2c224096
2021-02-28 21:20:59.263 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 8 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:20:59.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 12 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:20:59.368 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:20:59.374 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:21:12.689 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:21:12.695 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:21:12.707 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:21:12.709 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:21:12.710 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:21:12.711 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:21:12.718 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:21:12.749 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:21:12.890 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:21:12.897 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:21:12.898 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:21:12.899 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:21:12.900 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:21:12.900 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:21:14.056 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:21:14.987 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:21:14.988 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:21:15.337 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:21:16.046 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:21:16.047 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:21:16.048 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:21:16.246 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:21:16.331 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:21:16.333 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:21:16.346 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:21:16.373 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:21:16.373 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:21:16.380 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:21:16.381 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:21:16.385 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@26ca12a2
2021-02-28 21:21:16.389 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:21:16.391 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:21:16.391 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:21:16.393 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:21:16.394 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:21:16.395 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:21:16.399 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:21:16.401 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:21:16.403 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6632c403
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:21:16.405 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:21:16.405 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:21:16.406 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:21:16.407 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:21:16.407 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:21:16.409 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:21:16.410 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:21:16.412 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:21:16.412 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:21:16.415 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:21:16.430 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:21:16.453 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:21:16.517 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:21:16.517 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:21:16.518 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:21:16.519 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:21:16.519 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:21:16.519 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:21:16.519 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:21:17.573 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:21:17.895 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:21:17.903 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:21:17.907 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:21:17.930 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:21:17.932 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:21:17.940 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:21:17.944 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:21:17.946 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:21:17.948 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:21:17.950 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:21:17.954 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:21:17.958 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:21:17.973 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:21:17.978 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:21:17.984 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:21:17.999 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:21:18.003 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:21:18.004 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:21:18.017 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:21:18.022 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:21:18.024 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:21:18.026 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:21:18.028 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:21:18.031 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:21:18.034 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:21:18.035 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:21:18.037 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:21:18.039 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:21:18.041 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:21:18.045 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:21:18.049 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:21:18.052 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:21:18.056 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:21:18.059 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:21:18.062 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:21:18.063 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:21:18.076 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:21:18.079 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:21:18.081 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:21:18.084 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:21:18.087 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:21:18.090 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:21:18.091 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:21:18.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:21:18.094 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:21:18.097 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:21:18.099 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:21:18.101 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:21:18.104 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:21:18.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:21:18.109 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:21:18.111 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:21:18.113 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:21:18.113 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:21:18.129 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:21:18.133 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:21:18.136 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:21:18.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:21:18.140 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:21:18.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:21:18.148 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:21:18.149 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:21:18.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:21:18.153 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:21:18.157 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:21:18.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:21:18.162 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:21:18.165 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:21:18.168 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:21:18.171 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:21:18.173 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:21:18.174 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:21:18.183 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:21:18.185 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:21:18.187 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:21:18.189 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:21:18.191 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:21:18.193 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:21:18.196 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:21:18.197 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:21:18.199 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:21:18.202 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:21:18.205 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:21:18.207 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:21:18.209 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:21:18.211 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:21:18.212 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:21:18.215 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:21:18.227 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:21:18.228 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:21:18.245 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:21:18.247 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:21:18.249 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:21:18.251 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:21:18.252 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:21:18.255 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:21:18.257 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:21:18.258 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:21:18.260 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:21:18.261 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:21:18.263 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:21:18.265 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:21:18.267 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:21:18.269 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:21:18.270 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:21:18.273 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:21:18.275 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:21:18.275 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:21:18.284 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:21:18.286 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:21:18.288 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:21:18.289 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:21:18.291 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:21:18.293 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:21:18.295 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:21:18.295 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:21:18.297 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:21:18.299 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:21:18.301 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:21:18.303 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:21:18.306 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:21:18.308 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:21:18.312 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:21:18.316 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:21:18.319 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:21:18.320 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:21:18.332 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:21:18.335 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:21:18.338 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:21:18.340 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:21:18.344 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:21:18.346 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:21:18.349 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:21:18.350 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:21:18.352 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:21:18.355 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:21:18.357 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:21:18.359 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:21:18.361 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:21:18.363 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:21:18.365 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:21:18.367 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:21:18.370 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:21:18.370 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:21:19.252 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:21:19.397 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:21:19.398 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:21:19.401 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:21:19.401 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:21:19.402 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:21:19.407 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:21:19.407 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:21:19.425 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@21ab919c, existing ref count 0
2021-02-28 21:21:19.438 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:21:19.440 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:21:19.445 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 14996 (auto-detected)
2021-02-28 21:21:19.447 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:21:19.447 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:21:19.830 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:21:19.831 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:21:20.169 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:21:20.192 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:21:20.193 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:21:20.193 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:21:20.214 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:21:20.215 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:21:20.215 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:21:20.215 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:21:20.215 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:21:20.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:21:20.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:21:20.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@ed36e8
2021-02-28 21:21:20.258 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xe546a690, [id: 0x1d7ebb11] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:21:20.265 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:21:20.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:21:20.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:21:20.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:21:20.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:21:20.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:21:20.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:21:20.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:21:20.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:20.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:20.275 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:21:20.279 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:20.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:21:20.285 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7b7a017f)
2021-02-28 21:21:20.288 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:21:20.288 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:21:20.288 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:20.295 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:21:20.330 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:20.331 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:20.335 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:21:20.335 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:21:20.336 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:20.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:21:20.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:21:20.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:20.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:21:20.366 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:21:20.366 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:21:20.373 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:21:20.373 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:21:20.465 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:21:20.474 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:21:20.475 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:21:20.476 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:21:20.479 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:21:20.480 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:21:20.480 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:21:20.481 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:21:20.482 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:21:20.483 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:21:20.486 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:21:20.487 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:21:20.487 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:21:20.488 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:21:20.489 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:21:20.490 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:21:22.146 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:21:23.538 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:21:24.233 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:21:24.233 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:21:24.237 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x5bdce8bb, [id: 0x051c23a6] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:21:24.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:21:24.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:21:24.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:21:24.242 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:21:24.243 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:21:24.243 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:21:24.243 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:21:24.243 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:21:24.244 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:24.244 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:24.244 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:21:24.245 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:24.245 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:21:24.245 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@2bcf53ef)
2021-02-28 21:21:24.249 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:21:24.249 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:21:24.250 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:21:24.251 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:21:24.255 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.256 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.256 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:21:24.256 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:21:24.257 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.262 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:21:24.262 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:21:24.262 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.264 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:21:24.266 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:21:24.266 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:21:24.677 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.678 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.678 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:21:24.678 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:21:24.679 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.683 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:21:24.683 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:21:24.684 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:21:24.684 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:21:24.833 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 15.731 seconds (JVM running for 19.189)
2021-02-28 21:22:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:22:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:22:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:22:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:22:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:22:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:22:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:22:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:22:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:22:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:22:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:23:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:23:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:23:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:23:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:23:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:23:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:23:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:23:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:23:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:00.004 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:00.011 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:04.179 [ http-nio-5001-exec-2 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:24:04.217 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:04.218 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:04.218 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:04.218 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:04.219 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:04.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:24:04.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:04.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:04.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2b78619b=[B@7cc8b8c8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:24:04.224 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:24:04.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:04.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2b78619b=[B@7cc8b8c8}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:04.225 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2b78619b=[B@7cc8b8c8, [B@4c6892fe=[B@65584ee5, [B@75df7d43=[B@6d2fdfd2, [B@6370b702=[B@63949251}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:14.385 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:24:14.386 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:24:14.386 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:24:14.386 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:24:14.417 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:24:14.438 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:24:14.438 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:24:14.438 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:24:14.446 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:24:14.458 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:14.458 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:14.458 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:24:14.458 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:24:14.465 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:24:14.466 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:24:14.466 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:24:14.467 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:24:14.467 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:24:14.468 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@382ae21f
2021-02-28 21:24:14.536 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:24:14.542 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:24:14.594 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 168 bytes, 0 commands in the stack
2021-02-28 21:24:14.594 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:24:14.595 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:24:17.436 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:17.437 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:17.437 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:24:17.437 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:24:17.438 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:24:17.438 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:24:17.438 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:24:17.439 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:24:17.440 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:24:17.466 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 21:24:17.586 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@62f969e9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2261ecd5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@48c1129f
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 21:24:17.588 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 21:24:17.833 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.834 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.834 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.834 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.835 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.839 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:24:17.840 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.840 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.840 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.841 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.842 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.842 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.843 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.848 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.849 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:24:17.849 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.849 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:24:17.850 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:24:17.850 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.853 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.854 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.855 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.855 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.856 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.861 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.869 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.870 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.870 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.870 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.871 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.875 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.878 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.879 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.880 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.880 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.881 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.885 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.885 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.885 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.885 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.885 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.886 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.886 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.886 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.892 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.892 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.893 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.893 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.893 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.898 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:24:17.899 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.899 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.899 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.899 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.900 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.900 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.900 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.901 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.905 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:24:17.905 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.905 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.905 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5baf186=[B@2232a8b2}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:24:17.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:24:17.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5baf186=[B@2232a8b2}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5baf186=[B@2232a8b2, [B@31703269=[B@13158a8d, [B@76b1380c=[B@23c601fc, [B@24d5c19d=[B@5c483cd0}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:17.978 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.978 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:24:17.979 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:24:17.980 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:24:17.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:24:17.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:24:17.985 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@561bc7ed=[B@6fa0d1e8, [B@69657e41=[B@2df53d2b, [B@7a3f4b70=[B@2d11872e, [B@678c565b=[B@282a3259}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:24:44.350 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:24:47.441 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:25:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:25:00.005 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:25:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:25:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:25:00.014 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:25:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:25:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:25:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:25:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:25:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:25:14.351 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:25:17.443 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:25:17.444 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:25:44.351 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:25:47.445 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:26:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:26:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:26:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:26:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:00.019 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:26:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:26:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:26:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:04.728 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:26:04.731 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.731 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.731 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:26:04.731 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:04.732 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:26:04.738 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.738 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:26:04.738 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.739 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:04.739 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:26:04.739 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:26:04.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:26:04.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:04.743 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:04.743 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:26:04.744 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:26:04.746 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:26:04.747 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:26:04.748 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:26:04.750 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:26:04.750 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:26:04.750 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x5bdce8bb, /192.168.31.49:4423 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:26:13.643 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:26:13.644 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:26:13.649 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:26:13.649 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:26:13.650 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:26:13.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xe546a690, /192.168.31.49:4416 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:26:13.654 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@21ab919c
2021-02-28 21:26:13.654 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:26:13.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:26:13.856 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:26:13.858 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:26:25.214 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:26:25.220 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:26:25.231 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:26:25.235 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:26:25.236 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:26:25.237 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:26:25.244 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:26:25.274 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:26:25.419 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:26:25.428 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:26:25.429 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:26:25.429 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:26:25.430 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:26:25.431 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:26:26.445 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:26:27.330 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:26:27.330 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:26:27.663 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:26:28.286 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:26:28.287 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:26:28.287 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:26:28.455 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:26:28.533 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:26:28.537 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:26:28.550 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:26:28.577 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:26:28.578 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:26:28.585 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:26:28.586 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:26:28.589 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@710ae6a7
2021-02-28 21:26:28.592 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:26:28.594 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:26:28.595 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:26:28.596 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:26:28.597 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:26:28.598 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:26:28.601 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:26:28.603 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:26:28.605 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1409eac0
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:26:28.607 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:26:28.608 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:26:28.609 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:26:28.609 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:26:28.609 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:26:28.611 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:26:28.612 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:26:28.613 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:26:28.614 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:26:28.616 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:26:28.631 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:26:28.654 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:26:28.720 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:26:28.721 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:26:28.722 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:26:28.722 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:26:28.722 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:26:28.722 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:26:28.722 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:26:29.697 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:26:29.975 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:26:29.982 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:26:29.985 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:26:30.016 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:26:30.019 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:26:30.030 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:26:30.037 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:26:30.039 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:26:30.041 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:26:30.044 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:26:30.061 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:26:30.066 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:26:30.072 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:26:30.076 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:26:30.082 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:26:30.099 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:26:30.104 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:26:30.104 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:26:30.121 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:26:30.125 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:26:30.128 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:26:30.131 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:26:30.132 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:26:30.136 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:26:30.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:26:30.140 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:26:30.142 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:26:30.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:26:30.148 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:26:30.151 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:26:30.153 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:26:30.156 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:26:30.160 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:26:30.163 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:26:30.167 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:26:30.167 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:26:30.181 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:26:30.185 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:26:30.188 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:26:30.191 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:26:30.194 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:26:30.197 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:26:30.200 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:26:30.201 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:26:30.204 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:26:30.207 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:26:30.210 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:26:30.214 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:26:30.218 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:26:30.222 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:26:30.227 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:26:30.230 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:26:30.233 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:26:30.234 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:26:30.257 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:26:30.262 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:26:30.266 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:26:30.269 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:26:30.272 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:26:30.279 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:26:30.284 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:26:30.285 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:26:30.288 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:26:30.292 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:26:30.295 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:26:30.299 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:26:30.302 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:26:30.306 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:26:30.308 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:26:30.311 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:26:30.314 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:26:30.315 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:26:30.325 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:26:30.328 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:26:30.329 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:26:30.332 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:26:30.334 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:26:30.337 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:26:30.339 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:26:30.340 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:26:30.342 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:26:30.344 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:26:30.346 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:26:30.349 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:26:30.352 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:26:30.354 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:26:30.357 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:26:30.370 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:26:30.373 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:26:30.373 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:26:30.404 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:26:30.407 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:26:30.409 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:26:30.411 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:26:30.413 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:26:30.417 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:26:30.420 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:26:30.421 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:26:30.424 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:26:30.426 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:26:30.429 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:26:30.433 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:26:30.436 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:26:30.438 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:26:30.441 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:26:30.445 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:26:30.449 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:26:30.449 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:26:30.463 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:26:30.470 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:26:30.473 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:26:30.475 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:26:30.477 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:26:30.480 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:26:30.483 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:26:30.484 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:26:30.486 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:26:30.489 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:26:30.492 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:26:30.494 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:26:30.496 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:26:30.498 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:26:30.500 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:26:30.503 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:26:30.506 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:26:30.506 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:26:30.516 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:26:30.518 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:26:30.520 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:26:30.521 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:26:30.523 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:26:30.525 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:26:30.526 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:26:30.526 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:26:30.528 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:26:30.530 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:26:30.531 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:26:30.534 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:26:30.536 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:26:30.537 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:26:30.540 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:26:30.541 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:26:30.543 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:26:30.544 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:26:31.365 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:26:31.518 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:26:31.521 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:26:31.523 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:26:31.524 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:26:31.524 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:26:31.530 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:26:31.531 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:26:31.553 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@5444f1c3, existing ref count 0
2021-02-28 21:26:31.568 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:26:31.569 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:26:31.574 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 10976 (auto-detected)
2021-02-28 21:26:31.576 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:26:31.576 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:26:31.910 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:26:31.912 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:26:32.247 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:26:32.267 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:26:32.268 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:26:32.268 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:26:32.289 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:26:32.290 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:26:32.290 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:26:32.290 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:26:32.290 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:26:32.299 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:26:32.299 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:26:32.299 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d3ed2d4
2021-02-28 21:26:32.329 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x59b35246, [id: 0xda1e754d] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:26:32.336 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:26:32.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:26:32.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:26:32.337 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:26:32.338 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:26:32.338 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:26:32.339 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:26:32.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:26:32.343 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:32.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:32.346 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:26:32.350 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:32.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:26:32.357 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@62f82a1f)
2021-02-28 21:26:32.359 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:26:32.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:26:32.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:32.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:26:32.370 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:32.370 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:32.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:32.373 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:26:32.374 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:32.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:26:32.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:26:32.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:32.410 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:32.430 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:26:32.431 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:26:32.437 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:26:32.437 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:26:32.536 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:26:32.541 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:26:32.542 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:26:32.542 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:26:32.544 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:26:32.544 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:26:32.545 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:26:32.545 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:26:32.546 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:26:32.547 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:26:32.550 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:26:32.551 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:26:32.551 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:26:32.551 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:26:32.551 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:26:32.551 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:26:33.452 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:26:34.528 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:26:35.122 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:26:35.123 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:26:35.127 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xa1fdcc69, [id: 0x45478e59] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:26:35.131 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:26:35.131 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:26:35.132 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:35.133 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:35.133 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:26:35.134 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:35.134 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:26:35.134 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@43d63694)
2021-02-28 21:26:35.137 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:26:35.138 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:26:35.139 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:26:35.140 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:26:35.144 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.145 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.145 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:26:35.145 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:35.146 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.151 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:26:35.151 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:26:35.151 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.152 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:35.155 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:26:35.155 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:26:35.567 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.568 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.568 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:26:35.568 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:26:35.569 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:26:35.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:26:35.573 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:26:35.574 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:26:35.713 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.654 seconds (JVM running for 15.186)
2021-02-28 21:27:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:00.013 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.021 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:00.027 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:26.726 [ http-nio-5001-exec-2 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:27:26.768 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:26.768 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:26.769 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:26.769 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:26.770 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:26.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:27:26.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:26.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:26.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d9dde0b=[B@d01924d, [B@731d6bbf=[B@5fb8d1e2}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:27:26.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:27:26.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:26.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d9dde0b=[B@d01924d, [B@731d6bbf=[B@5fb8d1e2}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:26.775 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2d9dde0b=[B@d01924d, [B@731d6bbf=[B@5fb8d1e2, [B@5dc9808=[B@31459677, [B@1cf26e90=[B@42f10628}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.060 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:27:40.061 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:27:40.061 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:27:40.061 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:27:40.091 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:27:40.109 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:27:40.110 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:27:40.110 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:27:40.117 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:27:40.129 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:27:40.129 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:27:40.129 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:27:40.129 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:27:40.135 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:27:40.137 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:27:40.137 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:27:40.138 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:27:40.138 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:27:40.139 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@70cb2360
2021-02-28 21:27:40.209 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:27:40.215 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:27:40.306 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 21:27:40.412 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5ce93703
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@794de581
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@10999c41
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 21:27:40.413 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 21:27:40.739 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.739 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.739 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.739 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.744 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:27:40.744 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.744 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.744 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.745 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.745 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.746 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.746 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.746 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.750 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:40.750 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.750 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.751 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.754 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.754 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.754 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.761 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.762 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.762 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.762 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.762 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.766 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.767 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.767 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.768 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:40.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.772 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.772 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.773 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:27:40.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.777 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.778 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.778 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.778 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.782 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:27:40.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@230cdaa6=[B@3e78c713, [B@2c05b6b9=[B@3f490e1b, [B@316e7b60=[B@7dbed7e9, [B@7be4fb23=[B@21df169e}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:40.816 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.819 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:40.820 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:40.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:27:40.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:40.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:40.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@59671de9=[B@1d782949, [B@2ea9f908=[B@7cf8e257, [B@25a372ab=[B@4270f149, [B@7c91eb67=[B@31c9f0b3}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:27:41.121 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:27:41.121 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:27:41.121 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:27:41.121 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:27:41.122 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:27:41.122 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:27:41.122 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:27:41.124 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:27:41.124 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:27:59.312 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:59.312 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:59.313 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:27:59.313 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:27:59.313 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:59.317 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:27:59.317 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:27:59.318 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:27:59.318 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@13495135=[B@26816f2, [B@6dfb7787=[B@34190e77, [B@3d21c53f=[B@7222df6, [B@5bf13440=[B@55235a66}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:02.387 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:02.388 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:02.392 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:02.397 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:05.854 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:05.856 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:05.856 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:05.856 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:06.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:06.544 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:06.544 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:06.551 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:06.551 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:06.553 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:07.289 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:07.289 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:07.289 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:07.290 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:10.701 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:28:10.705 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:28:10.706 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:28:11.258 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:28:11.259 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:28:11.259 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:28:11.261 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:28:11.261 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:28:11.262 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:28:11.262 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:28:11.280 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:28:11.280 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:28:11.281 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:28:17.634 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.634 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.634 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.635 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.639 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:28:17.639 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.639 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.639 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.640 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.640 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.640 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.640 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.641 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:17.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.645 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.645 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.646 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.646 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:17.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.650 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.651 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.652 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.653 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.653 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.654 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:17.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.659 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.659 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.659 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.659 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.660 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.665 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:17.665 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.665 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.665 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.665 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.666 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.666 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.666 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.671 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:28:17.671 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.671 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.671 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.671 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.672 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.672 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.672 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5810c888=[B@2c55d836}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:28:17.677 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.678 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5810c888=[B@2c55d836}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.678 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5810c888=[B@2c55d836, [B@2bb295fa=[B@38a9aad3, [B@64b5814c=[B@78be579, [B@3abf51da=[B@4ffcab25}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:17.702 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.702 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.705 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:28:17.705 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:28:17.706 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:28:17.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:28:17.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:28:17.711 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@f0d1281=[B@6f0efce9, [B@7a07ce81=[B@2b39544f, [B@227f4c95=[B@737abe59, [B@8707e7c=[B@7872bdd4}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:28:40.702 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:28:41.263 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:29:00.073 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.074 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.075 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:00.075 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:29:00.076 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.080 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:29:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.081 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:00.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.082 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:00.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.083 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:29:00.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:29:00.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:00.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:00.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:10.703 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:29:11.265 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:29:11.266 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:29:27.679 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-28 21:29:27.680 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:29:27.680 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:29:27.747 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:27.748 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:27.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:27.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:27.750 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:29:27.753 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@35a69ec3=[B@1f8a641a, [B@7e3332f7=[B@1e5ba1ae, [B@642927cf=[B@79988c18}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Received: 32 bytes, 1 commands in the stack
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:27.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@35a69ec3=[B@1f8a641a, [B@7e3332f7=[B@1e5ba1ae, [B@642927cf=[B@79988c18}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:27.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@35a69ec3=[B@1f8a641a, [B@7e3332f7=[B@1e5ba1ae, [B@642927cf=[B@79988c18, [B@5422cbbb=[B@1844cf91}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:33.590 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:29:33.596 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.596 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.597 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:29:33.597 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:33.597 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.601 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:29:33.601 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:29:33.602 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.602 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:33.602 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:29:33.603 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:29:33.602 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.603 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.604 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:33.604 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:29:33.604 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.608 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:29:33.609 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:29:33.609 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:33.609 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:33.609 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:29:33.609 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:29:33.615 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:29:33.616 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:29:33.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:29:33.618 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:29:33.618 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:29:33.619 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xa1fdcc69, /192.168.31.49:4710 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:29:40.704 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:29:40.792 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:29:40.793 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:29:40.798 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:29:40.798 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:29:40.799 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:29:40.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x59b35246, /192.168.31.49:4698 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:29:40.802 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@5444f1c3
2021-02-28 21:29:40.803 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:29:40.905 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 12 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:29:40.906 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:29:40.908 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:29:52.635 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:29:52.640 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:29:52.650 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:29:52.653 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:29:52.654 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:29:52.655 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:29:52.661 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:29:52.691 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:29:52.841 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:29:52.851 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:29:52.852 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:29:52.853 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:29:52.853 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:29:52.854 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:29:53.859 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:29:54.775 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:29:54.776 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:29:55.118 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:29:55.751 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:29:55.751 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:29:55.752 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:29:55.921 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:29:56.001 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:29:56.007 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:29:56.019 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:29:56.051 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:29:56.051 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:29:56.058 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:29:56.059 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:29:56.061 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@489f62a3
2021-02-28 21:29:56.066 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:29:56.068 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:29:56.068 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:29:56.069 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:29:56.070 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:29:56.071 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:29:56.074 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:29:56.076 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:29:56.078 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @313cffe2
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:29:56.079 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:29:56.080 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:29:56.081 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:29:56.081 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:29:56.081 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:29:56.083 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:29:56.083 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:29:56.085 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:29:56.085 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:29:56.087 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:29:56.104 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:29:56.132 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:29:56.196 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:29:56.197 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:29:56.198 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:29:56.198 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:29:56.198 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:29:56.198 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:29:56.198 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:29:57.147 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:29:57.367 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:29:57.374 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:29:57.378 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:29:57.401 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:29:57.403 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:29:57.434 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:29:57.438 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:29:57.439 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:29:57.442 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:29:57.444 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:29:57.448 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:29:57.451 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:29:57.456 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:29:57.460 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:29:57.466 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:29:57.470 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:29:57.474 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:29:57.475 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:29:57.522 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:29:57.526 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:29:57.528 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:29:57.531 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:29:57.534 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:29:57.536 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:29:57.539 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:29:57.539 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:29:57.541 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:29:57.543 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:29:57.546 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:29:57.548 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:29:57.550 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:29:57.553 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:29:57.555 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:29:57.557 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:29:57.560 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:29:57.560 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:29:57.571 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:29:57.574 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:29:57.576 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:29:57.578 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:29:57.581 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:29:57.584 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:29:57.586 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:29:57.587 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:29:57.589 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:29:57.592 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:29:57.596 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:29:57.599 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:29:57.601 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:29:57.604 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:29:57.607 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:29:57.609 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:29:57.612 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:29:57.612 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:29:57.629 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:29:57.634 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:29:57.637 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:29:57.640 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:29:57.643 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:29:57.648 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:29:57.652 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:29:57.653 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:29:57.656 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:29:57.659 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:29:57.661 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:29:57.666 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:29:57.669 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:29:57.672 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:29:57.676 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:29:57.680 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:29:57.683 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:29:57.684 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:29:57.693 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:29:57.695 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:29:57.697 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:29:57.699 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:29:57.701 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:29:57.712 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:29:57.714 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:29:57.715 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:29:57.717 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:29:57.718 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:29:57.720 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:29:57.723 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:29:57.725 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:29:57.728 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:29:57.730 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:29:57.732 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:29:57.735 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:29:57.735 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:29:57.754 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:29:57.756 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:29:57.758 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:29:57.759 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:29:57.761 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:29:57.763 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:29:57.765 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:29:57.766 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:29:57.767 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:29:57.769 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:29:57.771 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:29:57.773 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:29:57.775 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:29:57.777 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:29:57.779 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:29:57.782 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:29:57.785 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:29:57.786 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:29:57.798 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:29:57.801 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:29:57.803 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:29:57.805 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:29:57.807 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:29:57.810 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:29:57.813 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:29:57.813 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:29:57.816 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:29:57.819 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:29:57.823 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:29:57.825 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:29:57.828 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:29:57.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:29:57.834 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:29:57.836 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:29:57.839 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:29:57.839 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:29:57.850 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:29:57.853 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:29:57.855 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:29:57.858 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:29:57.862 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:29:57.866 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:29:57.870 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:29:57.871 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:29:57.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:29:57.876 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:29:57.878 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:29:57.880 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:29:57.884 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:29:57.885 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:29:57.888 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:29:57.890 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:29:57.892 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:29:57.892 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:29:58.754 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:29:58.886 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:29:58.888 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:29:58.891 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:29:58.891 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:29:58.891 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:29:58.896 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:29:58.896 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:29:58.914 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@1dadd172, existing ref count 0
2021-02-28 21:29:58.928 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:29:58.929 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:29:58.934 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 10856 (auto-detected)
2021-02-28 21:29:58.936 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:29:58.936 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:29:59.283 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:29:59.284 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:29:59.625 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:29:59.645 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:29:59.646 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:29:59.646 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:29:59.668 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:29:59.669 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:29:59.669 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:29:59.669 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:29:59.669 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:29:59.679 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:29:59.679 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:29:59.680 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7a0af7aa
2021-02-28 21:29:59.710 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xde03920b, [id: 0x4c4f108e] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:29:59.717 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:29:59.718 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:29:59.718 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:29:59.719 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:29:59.719 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:29:59.719 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:29:59.720 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:29:59.721 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:29:59.725 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:29:59.727 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:29:59.728 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:29:59.732 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:29:59.737 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:29:59.739 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@5622e676)
2021-02-28 21:29:59.741 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:29:59.741 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:59.742 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:29:59.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:29:59.750 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:59.750 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:59.753 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:29:59.753 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:29:59.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:59.758 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:29:59.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:29:59.759 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:29:59.788 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:29:59.808 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:29:59.808 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:29:59.815 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:29:59.815 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:29:59.907 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:29:59.912 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:29:59.914 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:29:59.915 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:29:59.916 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:29:59.916 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:29:59.916 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:29:59.917 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:29:59.917 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:29:59.918 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:29:59.921 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:29:59.922 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:29:59.922 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:29:59.922 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:29:59.922 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:29:59.924 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:30:00.864 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:30:01.944 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:30:02.537 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:30:02.537 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:30:02.541 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xe480da94, [id: 0xb14d53de] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:30:02.546 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:30:02.546 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:30:02.547 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:30:02.548 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:30:02.548 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:30:02.548 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:30:02.549 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:30:02.549 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7be5d3db)
2021-02-28 21:30:02.553 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:30:02.553 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:30:02.554 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:30:02.555 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:30:02.559 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.559 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.559 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:30:02.560 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:30:02.561 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.565 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:30:02.565 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:30:02.566 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.567 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:30:02.569 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:30:02.569 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:30:02.982 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.982 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.982 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:30:02.982 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:30:02.983 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.987 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:30:02.987 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:30:02.987 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:02.987 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:30:03.098 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.668 seconds (JVM running for 15.642)
2021-02-28 21:30:53.712 [ http-nio-5001-exec-2 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:30:53.755 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:53.755 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:53.755 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:30:53.756 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:30:53.756 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:53.760 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:30:53.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:30:53.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:30:53.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@57d02bbb=[B@7e6e6a9f, [B@3832a98f=[B@533dca0c, [B@4e863770=[B@2c7f4aac, [B@28b511c1=[B@2cc46dfb}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:01.339 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.340 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.340 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:01.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:01.341 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.344 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:01.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:01.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.345 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:01.347 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.347 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:01.348 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:01.348 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:01.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:04.871 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:04.871 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:04.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:04.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:07.035 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:31:07.038 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:31:07.041 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:31:07.043 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:31:07.348 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:31:07.526 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [cn-smile-smilemall-member]:  pingIntervalSeconds set to 30
2021-02-28 21:31:07.527 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [cn-smile-smilemall-member]: maxTotalPingTime set to 2
2021-02-28 21:31:07.529 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: cn-smile-smilemall-member instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-member,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:31:07.588 [ http-nio-5001-exec-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:31:07.647 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:07.649 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:07.650 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:31:07.652 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:07.698 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:31:07.716 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:31:07.718 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  initialized
2021-02-28 21:31:07.729 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:31:07.730 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:07.736 [ http-nio-5001-exec-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client cn-smile-smilemall-member initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-member,current list of Servers=[192.168.31.49:4001],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:4001;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@24284b73
2021-02-28 21:31:08.414 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:31:08.445 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:31:08.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:08.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:08.618 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:31:08.619 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:08.619 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:31:08.619 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:31:08.620 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  initialized
2021-02-28 21:31:08.623 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:31:08.625 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:09.583 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:31:10.596 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:31:10.715 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:4001
2021-02-28 21:31:10.815 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.816 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.816 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.816 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:31:10.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.823 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.823 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.823 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.823 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.830 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.830 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.830 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.831 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.830 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:31:10.833 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:31:10.834 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:31:10.835 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.835 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.836 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.836 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.837 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.841 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.842 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.846 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.846 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.846 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.846 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.847 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.851 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.851 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.851 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.851 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.854 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.854 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.855 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.855 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.855 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.859 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.859 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.860 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.861 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.861 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.861 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.867 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.867 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.867 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.867 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.867 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.867 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.868 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:31:10.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.872 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.873 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.873 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.873 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:10.873 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:10.874 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.878 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:31:10.878 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.878 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.878 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3f7c2d71=[B@3405ed70}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:31:10.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:31:10.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:10.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3f7c2d71=[B@3405ed70}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:10.879 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3f7c2d71=[B@3405ed70, [B@10b1cfa8=[B@618c681b, [B@b44cea3=[B@7fde270d, [B@6cdcc4cf=[B@5242df83}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:10.881 [ http-nio-5001-exec-2 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://cn-smile-smilemall-member/member/memberreceiveaddress/getAddress/10] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:746)
	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1610)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.lambda$execute$0(RetryableFeignLoadBalancer.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:52)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy96.getAddressByUserId(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:62)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$21dec67.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:31:16.457 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:16.457 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:16.458 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:16.458 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:16.458 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:16.462 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:31:16.462 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:16.462 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:16.463 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@583293b8=[B@5c0dcb38, [B@5afcf415=[B@616cd0f0, [B@54144608=[B@173eeed3, [B@10ee25ce=[B@761f69af}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:31:36.643 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:31:38.626 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:31:44.528 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:31:44.529 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:31:44.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:31:45.670 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:45.671 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:45.671 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:31:45.671 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:31:45.674 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:45.678 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:31:45.678 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:31:45.678 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:31:45.679 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@23bdadb7=[B@2eb0980, [B@2e62ea7e=[B@3b6332b9, [B@2354042d=[B@38152c94, [B@4cf5c5bc=[B@5a2fd60f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:00.801 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.801 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.803 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:00.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.805 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:00.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:00.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:00.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:00.813 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.813 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.813 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:00.813 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:00.815 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.816 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:32:00.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:00.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:00.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:00.818 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:32:00.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:01.826 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:32:02.836 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:32:02.839 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:4001
2021-02-28 21:32:17.732 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:32:17.733 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.732 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:32:17.734 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.734 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.734 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.734 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:32:17.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:32:17.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:32:17.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:32:17.735 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:32:17.735 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:32:17.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:32:17.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.740 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.740 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.741 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.741 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.743 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.741 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:17.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.749 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.749 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.750 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.750 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.750 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.751 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:17.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.756 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.756 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.756 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.756 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.757 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:17.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.761 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.762 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.762 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.762 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.762 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:17.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.767 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.767 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.767 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.768 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:32:17.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.773 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.773 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.774 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.774 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.778 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:32:17.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@336696c2=[B@175db10f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:32:17.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:32:17.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@336696c2=[B@175db10f}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@336696c2=[B@175db10f, [B@482845c=[B@68110b11, [B@15695179=[B@7821d22b, [B@123e1590=[B@271ca6cf}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:17.781 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://cn-smile-smilemall-member/member/memberreceiveaddress/getAddress/10] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:746)
	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1610)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.lambda$execute$0(RetryableFeignLoadBalancer.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:52)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy96.getAddressByUserId(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:62)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$21dec67.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:32:17.790 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.790 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.791 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:17.791 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:17.791 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.796 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:32:17.796 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:17.796 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:17.797 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@456cb529=[B@310e8d97, [B@25457716=[B@3ffdb167, [B@5383491f=[B@767fcc36, [B@11ebb77e=[B@3a63d5c0}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:21.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:32:21.617 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:32:21.618 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:32:22.861 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:22.861 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:22.861 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:32:22.861 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:32:22.862 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:22.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:32:22.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:32:22.867 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:32:22.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@257602de=[B@61bb7d60, [B@19f1e65=[B@182e2b04, [B@5aa9868d=[B@ea54b62, [B@744ef1c5=[B@de643aa}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:32:36.207 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:32:36.209 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:32:53.692 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:32:53.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:32:53.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:32:53.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:32:53.693 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:32:53.694 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:32:53.696 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:32:53.697 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:32:54.960 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:32:54.963 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:32:54.966 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:32:54.968 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:32:54.983 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:32:55.010 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:32:55.011 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:32:55.013 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:32:55.034 [ http-nio-5001-exec-3 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:32:55.053 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:32:55.055 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:32:55.056 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:32:55.057 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:32:55.062 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:32:55.075 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:32:55.078 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:32:55.089 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:32:55.090 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:32:55.093 [ http-nio-5001-exec-3 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@531f623
2021-02-28 21:32:55.290 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:32:55.291 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///getCartHasCheck
2021-02-28 21:33:00.041 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:00.041 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:33:00.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:33:00.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:33:00.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:33:00.042 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:00.042 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:33:00.809 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:00.809 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:00.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:00.810 [ PollingServerListUpdater-1 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:33:00.812 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:33:13.672 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:13.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:13.673 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:13.674 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:34.962 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:34.963 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:33:34.963 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:33:34.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:33:34.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:33:34.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:33:34.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:33:34.964 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:33:34.961 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:33:34.965 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:33:34.965 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:34.965 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:34.965 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:34.967 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:33:34.966 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:34.967 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:33:37.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.134 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.135 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.135 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:33:37.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.141 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.141 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.141 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.141 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.142 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.146 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.146 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.146 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.147 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.147 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.151 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.151 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.151 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.152 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.152 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.152 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.153 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.157 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.157 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.157 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.158 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.158 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.158 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.163 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.163 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.164 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:33:37.168 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.169 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.169 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.169 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.169 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.170 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:33:37.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.174 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@370c6f0b=[B@5e9304e5}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:33:37.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:33:37.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@370c6f0b=[B@5e9304e5}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@370c6f0b=[B@5e9304e5, [B@7ac9aa0e=[B@57df9c8f, [B@450d5dee=[B@60f1c5a0, [B@11ad0673=[B@4fbc067d}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:33:37.175 [ http-nio-5001-exec-3 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$NotFound: [404] during [GET] to [http://smilemall-cart/getCartHasCheck] [CartFeignService#getCartHasCheck()]: [{"timestamp":"2021-02-28T13:32:55.354+00:00","status":404,"error":"Not Found","message":"","path":"/getCartHasCheck"}]] with root cause
feign.FeignException$NotFound: [404] during [GET] to [http://smilemall-cart/getCartHasCheck] [CartFeignService#getCartHasCheck()]: [{"timestamp":"2021-02-28T13:32:55.354+00:00","status":404,"error":"Not Found","message":"","path":"/getCartHasCheck"}]
	at feign.FeignException.clientErrorStatus(FeignException.java:201)
	at feign.FeignException.errorStatus(FeignException.java:177)
	at feign.FeignException.errorStatus(FeignException.java:169)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy97.getCartHasCheck(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:68)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$21dec67.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:33:37.181 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.181 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:33:37.181 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:33:37.182 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:33:37.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:33:37.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:33:37.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@365b1f67=[B@32173f2c, [B@1d4bd6c7=[B@71292a47, [B@7379dc0b=[B@4c0d29ed, [B@5cd9b3f7=[B@5dda6d90}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:34:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:34:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.017 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:34:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:34:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:34:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:04.987 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:34:04.988 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:34:04.988 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:34:04.988 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:34:25.522 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:34:25.524 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.525 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.525 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:34:25.525 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:25.526 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:34:25.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:34:25.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.530 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:25.531 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:34:25.531 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.531 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:34:25.531 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.531 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:34:25.531 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:25.532 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.536 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:34:25.536 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:34:25.536 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:25.537 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:25.537 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:34:25.537 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:34:25.541 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:34:25.541 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:34:25.542 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:34:25.542 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:34:25.543 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:34:25.543 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xe480da94, /192.168.31.49:4927 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:34:33.458 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:34:33.459 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:34:33.461 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:34:33.461 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:34:33.468 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:34:33.469 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:34:33.469 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:34:33.469 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:34:33.469 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:34:33.469 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:34:33.470 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:34:33.470 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:34:33.470 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xde03920b, /192.168.31.49:4917 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:34:33.475 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@1dadd172
2021-02-28 21:34:33.476 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:34:33.575 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:34:33.579 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:34:33.581 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:34:43.908 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:34:43.913 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:34:43.924 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:34:43.926 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:34:43.927 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:34:43.928 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:34:43.934 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:34:43.962 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:34:44.117 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:34:44.128 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:34:44.128 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:34:44.129 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:34:44.129 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:34:44.129 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:34:45.317 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:34:46.234 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:34:46.235 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:34:46.576 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:34:47.212 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:34:47.213 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:34:47.213 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:34:47.379 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:34:47.460 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:34:47.464 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:34:47.478 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:34:47.511 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:34:47.511 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:34:47.518 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:34:47.518 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:34:47.521 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5d767218
2021-02-28 21:34:47.525 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:34:47.527 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:34:47.528 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:34:47.529 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:34:47.530 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:34:47.531 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:34:47.534 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:34:47.536 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:34:47.538 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @24a78bb6
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:34:47.540 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:34:47.540 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:34:47.541 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:34:47.541 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:34:47.541 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:34:47.543 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:34:47.544 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:34:47.545 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:34:47.545 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:34:47.548 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:34:47.564 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:34:47.587 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:34:47.652 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:34:47.652 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:34:47.652 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:34:47.653 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:34:47.654 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:34:47.654 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:34:47.654 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:34:48.547 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@61064425
2021-02-28 21:34:48.788 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:34:48.796 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:34:48.799 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:34:48.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:34:48.824 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:34:48.831 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:34:48.837 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:34:48.838 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:34:48.841 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:34:48.843 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:34:48.847 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:34:48.851 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:34:48.855 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:34:48.858 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:34:48.861 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:34:48.866 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:34:48.869 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:34:48.870 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:34:48.884 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:34:48.887 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:34:48.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:34:48.892 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:34:48.893 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:34:48.896 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:34:48.899 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:34:48.899 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:34:48.901 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:34:48.903 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:34:48.905 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:34:48.907 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:34:48.910 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:34:48.912 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:34:48.915 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:34:48.917 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:34:48.919 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:34:48.920 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:34:48.930 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:34:48.933 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:34:48.935 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:34:48.936 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:34:48.938 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:34:48.940 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:34:48.942 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:34:48.943 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:34:48.946 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:34:48.947 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:34:48.949 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:34:48.951 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:34:48.954 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:34:48.956 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:34:48.958 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:34:48.960 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:34:48.962 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:34:48.962 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:34:48.977 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:34:48.981 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:34:48.983 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:34:48.985 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:34:48.987 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:34:48.990 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:34:48.993 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:34:48.994 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:34:48.996 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:34:48.999 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:34:49.003 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:34:49.007 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:34:49.009 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:34:49.014 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:34:49.018 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:34:49.021 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:34:49.039 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:34:49.039 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:34:49.069 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:34:49.072 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:34:49.075 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:34:49.077 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:34:49.080 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:34:49.082 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:34:49.085 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:34:49.085 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:34:49.088 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:34:49.090 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:34:49.092 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:34:49.094 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:34:49.097 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:34:49.100 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:34:49.103 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:34:49.106 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:34:49.109 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:34:49.109 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:34:49.120 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:34:49.122 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:34:49.124 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:34:49.125 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:34:49.127 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:34:49.129 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:34:49.131 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:34:49.131 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:34:49.133 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:34:49.135 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:34:49.137 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:34:49.139 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:34:49.141 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:34:49.143 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:34:49.145 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:34:49.147 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:34:49.149 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:34:49.149 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:34:49.157 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:34:49.159 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:34:49.161 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:34:49.163 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:34:49.165 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:34:49.167 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:34:49.169 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:34:49.169 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:34:49.170 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:34:49.173 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:34:49.175 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:34:49.177 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:34:49.179 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:34:49.181 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:34:49.183 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:34:49.185 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:34:49.187 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:34:49.187 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:34:49.197 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:34:49.199 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:34:49.201 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:34:49.204 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:34:49.206 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:34:49.208 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:34:49.211 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:34:49.211 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:34:49.214 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:34:49.216 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:34:49.219 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:34:49.221 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:34:49.224 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:34:49.231 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:34:49.234 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:34:49.236 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:34:49.239 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:34:49.240 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:34:50.120 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:34:50.257 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:34:50.259 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:34:50.261 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:34:50.261 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:34:50.261 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:34:50.267 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:34:50.267 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:34:50.284 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@1885dc2b, existing ref count 0
2021-02-28 21:34:50.298 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:34:50.299 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:34:50.306 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 10584 (auto-detected)
2021-02-28 21:34:50.308 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:34:50.308 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:34:50.665 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:34:50.666 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:34:51.017 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:34:51.039 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:34:51.039 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:34:51.039 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:34:51.060 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:34:51.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:34:51.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:34:51.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:34:51.061 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:34:51.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:34:51.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:34:51.071 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@40d69042
2021-02-28 21:34:51.101 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x8f838f29, [id: 0xb5688119] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:34:51.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:34:51.109 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:34:51.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:34:51.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:34:51.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:34:51.110 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:34:51.111 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:34:51.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:34:51.116 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:51.118 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:51.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:34:51.123 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:51.128 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:34:51.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1f3784ce)
2021-02-28 21:34:51.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:34:51.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:34:51.132 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:51.137 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:34:51.141 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:51.141 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:51.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:51.144 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:34:51.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:51.149 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:34:51.149 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:34:51.149 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:51.153 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:51.169 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:34:51.169 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:34:51.201 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:34:51.201 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:34:51.234 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:34:51.238 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:34:51.239 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:34:51.241 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:34:51.242 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:34:51.243 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:34:51.243 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:34:51.243 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:34:51.244 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:34:51.258 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:34:51.267 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:34:51.267 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:34:51.268 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:34:51.268 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:34:51.268 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:34:51.268 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:34:52.237 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:34:53.309 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:34:53.902 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:34:53.902 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:34:53.907 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0xcb9b1669, [id: 0x1558df73] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:34:53.912 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:34:53.912 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:34:53.912 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:34:53.912 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:34:53.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:34:53.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:34:53.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:34:53.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:34:53.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:53.914 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:53.914 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:34:53.915 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:53.915 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:34:53.915 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3a14edd3)
2021-02-28 21:34:53.919 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:34:53.919 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:34:53.920 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:34:53.921 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:34:53.925 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:53.926 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:53.926 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:53.926 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:34:53.927 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:53.932 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:34:53.932 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:34:53.932 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:53.934 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:53.936 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:34:53.936 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:34:54.347 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:54.347 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:54.347 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:34:54.347 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:34:54.348 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:54.352 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:34:54.352 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:34:54.352 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:34:54.352 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:34:54.493 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.872 seconds (JVM running for 15.156)
2021-02-28 21:35:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.012 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:35:00.012 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:35:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:35:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:35:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:35:00.020 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:35:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:35:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:35:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:35:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:36:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:36:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:36:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:36:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:36:00.010 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:36:00.011 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:36:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:36:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:36:00.015 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:00.045 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.046 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:00.047 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.049 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:00.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:00.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:00.051 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.052 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:00.052 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.052 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.053 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:00.054 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.053 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:00.057 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:00.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:00.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:00.058 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:03.090 [ http-nio-5001-exec-2 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:37:03.127 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:03.128 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:03.128 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:03.128 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:03.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:03.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:37:03.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:03.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:03.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@288c5b7b=[B@3adbada3}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:37:03.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:37:03.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:03.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@288c5b7b=[B@3adbada3}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:03.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@288c5b7b=[B@3adbada3, [B@76ba272b=[B@625dde23, [B@11eb3aea=[B@45f93e3c, [B@61db0b03=[B@d8d7003}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:15.601 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:37:15.605 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:37:15.609 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:37:15.613 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:37:15.899 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:37:16.054 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [cn-smile-smilemall-member]:  pingIntervalSeconds set to 30
2021-02-28 21:37:16.055 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [cn-smile-smilemall-member]: maxTotalPingTime set to 2
2021-02-28 21:37:16.058 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: cn-smile-smilemall-member instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-member,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:37:16.111 [ http-nio-5001-exec-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:37:16.187 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:16.189 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:16.192 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:37:16.195 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:16.247 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:37:16.266 [ http-nio-5001-exec-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:37:16.267 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  initialized
2021-02-28 21:37:16.279 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:37:16.280 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:16.285 [ http-nio-5001-exec-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client cn-smile-smilemall-member initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=cn-smile-smilemall-member,current list of Servers=[192.168.31.49:4001],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:4001;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5be04290
2021-02-28 21:37:16.886 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:16.920 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:37:17.134 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:17.134 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:17.134 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:37:17.134 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:17.134 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:37:17.135 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: cn-smile-smilemall-member.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:37:17.135 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  initialized
2021-02-28 21:37:17.137 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:37:17.137 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:18.022 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:19.031 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:19.053 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:4001
2021-02-28 21:37:19.103 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.104 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.105 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.105 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.106 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.111 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:37:19.111 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.112 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.114 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.114 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.114 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.114 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.115 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.120 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.120 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.120 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:37:19.121 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:37:19.122 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:37:19.126 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.126 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.127 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.130 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.138 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.138 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.139 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.139 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.144 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.148 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.150 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.151 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.151 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.151 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.155 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.156 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.156 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.156 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.157 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.158 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.158 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.161 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.165 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.165 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.165 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.166 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.166 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.167 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:37:19.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.171 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.172 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.172 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.173 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.173 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.173 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.177 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@34934c31=[B@52783fc8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.178 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@34934c31=[B@52783fc8}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.179 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@34934c31=[B@52783fc8, [B@59c96ec4=[B@60fdd320, [B@5d3419b9=[B@72503eb5, [B@73e824ea=[B@f540897}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:19.182 [ http-nio-5001-exec-2 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://cn-smile-smilemall-member/member/memberreceiveaddress/getAddress/10] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:746)
	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1610)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.lambda$execute$0(RetryableFeignLoadBalancer.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:52)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy96.getAddressByUserId(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:62)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$5e6beed6.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:37:19.246 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.246 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:19.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.248 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:19.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:37:19.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:19.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:19.252 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3da9b2e3=[B@1fe41667, [B@33c302a5=[B@3419f914, [B@401537fe=[B@5d5a82ae, [B@6faa9fdb=[B@66b59a99}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:45.149 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:37:47.140 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:37:50.352 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:50.352 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:50.353 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:37:50.353 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:37:50.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:50.358 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:37:50.358 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:37:50.359 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:37:50.359 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2b31c562=[B@6bbb21bf, [B@611ae3cf=[B@5d89a39c, [B@57099525=[B@4632a5b5, [B@4e84f7d8=[B@2fe1b09c}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:37:53.713 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:53.715 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:37:54.722 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:55.729 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:37:55.734 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:4001
2021-02-28 21:38:10.114 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.115 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.117 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.117 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.117 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.118 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.118 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.118 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 2 commands in the stack
2021-02-28 21:38:10.121 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 2 commands
2021-02-28 21:38:10.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.122 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.122 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.123 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.124 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.125 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.124 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.126 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 2 commands in the stack
2021-02-28 21:38:10.127 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 2 commands
2021-02-28 21:38:10.127 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.127 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.128 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.129 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.129 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.129 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 2 commands in the stack
2021-02-28 21:38:10.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 2 commands
2021-02-28 21:38:10.130 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.131 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.133 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:10.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.134 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.134 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.134 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.135 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.139 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:10.139 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.140 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.140 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.140 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.141 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.145 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:10.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.146 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.147 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.147 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.147 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.147 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.147 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.148 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:10.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.152 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.152 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.153 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.153 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.153 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.154 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.157 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:10.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.158 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.158 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.158 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.159 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.159 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:38:10.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.163 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1d65da06=[B@d600f75}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:38:10.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:38:10.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1d65da06=[B@d600f75}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.164 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1d65da06=[B@d600f75, [B@5e2c0c61=[B@427bc726, [B@7c6b2268=[B@7c8a840c, [B@4fed6209=[B@59578197}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:10.165 [ http-nio-5001-exec-1 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://cn-smile-smilemall-member/member/memberreceiveaddress/getAddress/10] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:746)
	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1610)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.lambda$execute$0(RetryableFeignLoadBalancer.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:52)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy96.getAddressByUserId(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:62)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$5e6beed6.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:38:10.174 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.175 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.175 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:10.175 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:10.176 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:38:10.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:10.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:10.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@61d0f7ee=[B@4588781f, [B@49d2b53c=[B@19af5ec7, [B@2c6ccea8=[B@53fccad4, [B@23018416=[B@7c72d589}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:12.661 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:12.662 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:12.662 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:12.662 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:12.663 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:12.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:38:12.668 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:12.668 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:12.668 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2c19f1e0=[B@1757e052, [B@46adb777=[B@3c6afbc0, [B@5c9f55f8=[B@1afc5920, [B@742299c7=[B@7af00719}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:16.475 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:38:17.294 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:38:19.337 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:38:19.337 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:38:19.338 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:38:19.338 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:38:19.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:38:19.339 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:38:19.342 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:19.343 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:38:22.825 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:38:22.827 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:38:22.830 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:38:22.833 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:38:22.848 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:38:22.874 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:38:22.876 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:38:22.878 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:38:22.896 [ http-nio-5001-exec-3 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:38:22.916 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:22.917 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:22.918 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:38:22.919 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:38:22.925 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:38:22.938 [ http-nio-5001-exec-3 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:38:22.939 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:38:22.950 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:38:22.952 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:38:22.954 [ http-nio-5001-exec-3 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@ce86dbc
2021-02-28 21:38:23.148 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:23.150 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:38:23.923 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:23.924 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:23.924 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:38:23.925 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:38:23.926 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:38:23.927 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:38:23.927 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:38:23.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:38:23.929 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:38:24.189 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:25.199 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:25.201 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:208
2021-02-28 21:38:34.741 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:38:34.741 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:38:34.741 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:38:34.741 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.741 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.742 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.742 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.743 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.745 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:38:34.746 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.746 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.746 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.746 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.746 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.746 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.747 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.752 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.753 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.753 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.754 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.754 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.754 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.755 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.755 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.756 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.760 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.760 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.760 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.760 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.761 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.761 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.761 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.761 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.762 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.766 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.766 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.767 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.767 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.767 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.771 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.772 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.772 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.772 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.773 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.773 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.777 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.778 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.778 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.778 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.778 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.778 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.778 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.779 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:34.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.783 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.784 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.784 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.784 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.784 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.785 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@520d2d65=[B@39d2781f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.790 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@520d2d65=[B@39d2781f}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.791 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@520d2d65=[B@39d2781f, [B@419f035c=[B@2a48fa3d, [B@3bad1cb9=[B@13f489cb, [B@7078ac=[B@40ef07d8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:34.791 [ http-nio-5001-exec-3 ] - [ ERROR ] [ o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] : 175 ] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://smilemall-cart/cart/getCartHasCheck] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:746)
	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1610)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.lambda$execute$0(RetryableFeignLoadBalancer.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:52)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy97.getCartHasCheck(Unknown Source)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl.confirmOrder(OrderServiceImpl.java:68)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$6874bd21.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at cn.smile.smilemall.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$5e6beed6.confirmOrder(<generated>)
	at cn.smile.smilemall.order.web.controller.OrderPageController.toConfirmPage(OrderPageController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-28 21:38:34.798 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.798 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:34.799 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:34.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.803 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:38:34.804 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:34.804 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:34.804 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4359b271=[B@2f0dbeb3, [B@2e2d2135=[B@686e06ee, [B@19a04fea=[B@73aadb16, [B@21c95ac1=[B@185e88f0}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:42.972 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:42.972 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:42.972 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:42.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:42.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:42.977 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:38:42.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:42.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:42.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@67727093=[B@6ef39cf6, [B@b877d85=[B@5ea8bff8, [B@73b096be=[B@29dac7f5, [B@1a7191c3=[B@3f33a484}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:45.321 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:45.322 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - cn-smile-smilemall-member using LB returned Server: 192.168.31.49:4001 for request http:///member/memberreceiveaddress/getAddress/10
2021-02-28 21:38:46.613 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:38:46.966 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:38:46.968 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:38:49.932 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:38:49.936 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:38:51.895 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:38:51.895 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:38:51.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:38:51.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:38:51.896 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:38:51.904 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 21:38:52.016 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7221b842
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7179f60f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5bedde87
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 21:38:52.018 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 21:38:52.243 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.243 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.244 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.244 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.245 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.249 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:38:52.249 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.249 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.249 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.249 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.250 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.250 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.254 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:52.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.255 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.255 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.255 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.256 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.260 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:52.260 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.260 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.260 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.260 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.260 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.261 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.265 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:52.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.266 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.266 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.266 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.267 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:52.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.271 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.271 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.272 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.272 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.272 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.273 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.277 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:38:52.277 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.277 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.277 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.277 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.277 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.278 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.278 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.278 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.282 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 480 bytes, 1 commands in the stack
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4d558bb8=[B@5699ba95}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4d558bb8=[B@5699ba95}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.283 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@4d558bb8=[B@5699ba95, [B@29033adc=[B@7189bca5, [B@b36acfc=[B@416cad92, [B@6a5fee69=[B@7f83a80f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.428 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.429 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.429 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:38:52.429 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:38:52.430 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.434 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:38:52.434 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:38:52.434 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:38:52.435 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6a3a2d30=[B@2b871e22, [B@56eac846=[B@2b2f5bec, [B@724eff34=[B@2e1da6e2, [B@10eff2a2=[B@41883b61}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:38:52.788 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:38:53.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:53.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:38:53.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:38:53.930 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:38:53.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:38:53.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:38:53.931 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:39:00.005 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.006 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:39:00.018 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.018 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:39:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:39:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.023 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:39:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:39:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:39:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:39:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:39:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:39:16.614 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:39:21.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:39:21.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for cn-smile-smilemall-member obtained from Discovery client: [192.168.31.49:4001]
2021-02-28 21:39:21.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member]: clearing server list (SET op)
2021-02-28 21:39:21.897 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member]:  addServer [192.168.31.49:4001]
2021-02-28 21:39:21.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:4001]}
2021-02-28 21:39:21.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [cn-smile-smilemall-member_unknown]: clearing server list (SET op)
2021-02-28 21:39:21.898 [ PollingServerListUpdater-1 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [cn-smile-smilemall-member_unknown]:  addServer [192.168.31.49:4001]
2021-02-28 21:39:22.788 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:39:23.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:39:23.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:39:23.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:39:23.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:39:23.933 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:39:23.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:39:23.934 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:39:25.104 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:39:25.107 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.108 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.108 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:39:25.108 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:39:25.108 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:39:25.113 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:39:25.113 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:39:25.113 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:39:25.113 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.117 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:39:25.118 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:39:25.118 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:25.118 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:39:25.118 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:39:25.119 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:39:25.122 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:39:25.123 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:39:25.125 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:39:25.125 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:39:25.125 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:39:25.125 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0xcb9b1669, /192.168.31.49:5224 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:39:32.984 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:39:32.985 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:39:32.988 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:39:32.988 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:39:32.993 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:39:32.994 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:39:32.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:39:32.994 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:39:32.994 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:39:32.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:39:32.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:39:32.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:39:32.995 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x8f838f29, /192.168.31.49:5213 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:39:32.998 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@1885dc2b
2021-02-28 21:39:32.999 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:39:33.099 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:39:33.101 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:39:33.103 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:39:48.663 [ background-preinit ] - [ DEBUG ] [ org.jboss.logging : 152 ] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-02-28 21:39:48.669 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 21 ] - HV000001: Hibernate Validator 6.1.6.Final
2021-02-28 21:39:48.683 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:39:48.686 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:39:48.687 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:39:48.688 [ background-preinit ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:39:48.696 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:39:48.733 [ background-preinit ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:39:48.923 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:39:48.932 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:39:48.932 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:39:48.933 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:39:48.934 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:39:48.934 [ background-preinit ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:39:50.212 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:39:51.480 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 274 ] - Searching for mappers annotated with @Mapper
2021-02-28 21:39:51.481 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 278 ] - Using auto-configuration base package 'cn.smile.smilemall.order'
2021-02-28 21:39:52.035 [ main ] - [ DEBUG ] [ org.apache.ibatis.logging.LogFactory : 105 ] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-28 21:39:53.016 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Initializing ProtocolHandler ["http-nio-5001"]
2021-02-28 21:39:53.017 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 173 ] - Starting service [Tomcat]
2021-02-28 21:39:53.017 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 173 ] - Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-02-28 21:39:53.239 [ main ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring embedded WebApplicationContext
2021-02-28 21:39:53.362 [ main ] - [ DEBUG ] [ i.n.util.internal.logging.InternalLoggerFactory : 45 ] - Using SLF4J as the default logging framework
2021-02-28 21:39:53.367 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 108 ] - -Dio.netty.eventLoopThreads: 4
2021-02-28 21:39:53.386 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2021-02-28 21:39:53.426 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 56 ] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2021-02-28 21:39:53.426 [ main ] - [ DEBUG ] [ io.netty.util.internal.InternalThreadLocalMap : 59 ] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2021-02-28 21:39:53.439 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 129 ] - -Dio.netty.leakDetection.level: simple
2021-02-28 21:39:53.440 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetector : 130 ] - -Dio.netty.leakDetection.targetRecords: 4
2021-02-28 21:39:53.445 [ main ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@ba4f370
2021-02-28 21:39:53.450 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1036 ] - Platform: Windows
2021-02-28 21:39:53.453 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 417 ] - -Dio.netty.noUnsafe: false
2021-02-28 21:39:53.454 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 897 ] - Java version: 11
2021-02-28 21:39:53.456 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 130 ] - sun.misc.Unsafe.theUnsafe: available
2021-02-28 21:39:53.457 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 154 ] - sun.misc.Unsafe.copyMemory: available
2021-02-28 21:39:53.459 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 192 ] - java.nio.Buffer.address: available
2021-02-28 21:39:53.463 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 266 ] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:232)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:39:53.466 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 331 ] - java.nio.Bits.unaligned: available, true
2021-02-28 21:39:53.470 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 390 ] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1409eac0
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:343)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:109)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:218)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:197)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:179)
	at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:163)
	at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:183)
	at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:562)
	at io.lettuce.core.resource.DefaultClientResources.create(DefaultClientResources.java:247)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:1906)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setRedisConnectionFactory(RedisHttpSessionConfiguration.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:754)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:886)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:790)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:540)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at cn.smile.smilemall.order.SmilemallOrderApplication.main(SmilemallOrderApplication.java:19)
2021-02-28 21:39:53.472 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent0 : 403 ] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
2021-02-28 21:39:53.473 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1079 ] - sun.misc.Unsafe: available
2021-02-28 21:39:53.474 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1181 ] - maxDirectMemory: 104857600 bytes (maybe)
2021-02-28 21:39:53.475 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1200 ] - -Dio.netty.tmpdir: C:\Users\Administrator\AppData\Local\Temp (java.io.tmpdir)
2021-02-28 21:39:53.476 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 1279 ] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-02-28 21:39:53.478 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 177 ] - -Dio.netty.maxDirectMemory: -1 bytes
2021-02-28 21:39:53.479 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 184 ] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2021-02-28 21:39:53.481 [ main ] - [ DEBUG ] [ io.netty.util.internal.CleanerJava9 : 71 ] - java.nio.ByteBuffer.cleaner(): available
2021-02-28 21:39:53.482 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 204 ] - -Dio.netty.noPreferDirect: false
2021-02-28 21:39:53.486 [ main ] - [ DEBUG ] [ io.netty.util.internal.PlatformDependent : 940 ] - org.jctools-core.MpscChunkedArrayQueue: available
2021-02-28 21:39:53.510 [ main ] - [ DEBUG ] [ reactor.util.Loggers$LoggerFactory : 249 ] - Using Slf4j logging framework
2021-02-28 21:39:53.549 [ main ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 204 ] - LatencyUtils/HdrUtils are not available, metrics are disabled
2021-02-28 21:39:53.659 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 154 ] - -Dio.netty.allocator.numHeapArenas: 1
2021-02-28 21:39:53.660 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 155 ] - -Dio.netty.allocator.numDirectArenas: 1
2021-02-28 21:39:53.661 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 157 ] - -Dio.netty.allocator.pageSize: 8192
2021-02-28 21:39:53.661 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 162 ] - -Dio.netty.allocator.maxOrder: 11
2021-02-28 21:39:53.661 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 166 ] - -Dio.netty.allocator.chunkSize: 16777216
2021-02-28 21:39:53.662 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 167 ] - -Dio.netty.allocator.smallCacheSize: 256
2021-02-28 21:39:53.662 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 168 ] - -Dio.netty.allocator.normalCacheSize: 64
2021-02-28 21:39:53.662 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 169 ] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2021-02-28 21:39:53.663 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 170 ] - -Dio.netty.allocator.cacheTrimInterval: 8192
2021-02-28 21:39:53.663 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 171 ] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2021-02-28 21:39:53.664 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 172 ] - -Dio.netty.allocator.useCacheForAllThreads: true
2021-02-28 21:39:53.665 [ main ] - [ DEBUG ] [ io.netty.buffer.PooledByteBufAllocator : 173 ] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2021-02-28 21:39:54.922 [ main ] - [ DEBUG ] [ com.zaxxer.hikari.HikariConfig : 946 ] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@7b1d7fff
2021-02-28 21:39:55.254 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.insert
2021-02-28 21:39:55.265 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.delete
2021-02-28 21:39:55.271 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteByMap
2021-02-28 21:39:55.311 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteById
2021-02-28 21:39:55.315 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.deleteBatchIds
2021-02-28 21:39:55.326 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.update
2021-02-28 21:39:55.332 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.updateById
2021-02-28 21:39:55.334 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectById
2021-02-28 21:39:55.337 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectBatchIds
2021-02-28 21:39:55.341 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectByMap
2021-02-28 21:39:55.347 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectOne
2021-02-28 21:39:55.367 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectCount
2021-02-28 21:39:55.373 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMaps
2021-02-28 21:39:55.379 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectMapsPage
2021-02-28 21:39:55.385 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectObjs
2021-02-28 21:39:55.408 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectList
2021-02-28 21:39:55.412 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderDao.selectPage
2021-02-28 21:39:55.413 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderDao.xml]'
2021-02-28 21:39:55.440 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.insert
2021-02-28 21:39:55.445 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.delete
2021-02-28 21:39:55.448 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteByMap
2021-02-28 21:39:55.452 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteById
2021-02-28 21:39:55.454 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.deleteBatchIds
2021-02-28 21:39:55.459 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.update
2021-02-28 21:39:55.462 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.updateById
2021-02-28 21:39:55.463 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectById
2021-02-28 21:39:55.466 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectBatchIds
2021-02-28 21:39:55.471 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectByMap
2021-02-28 21:39:55.475 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectOne
2021-02-28 21:39:55.478 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectCount
2021-02-28 21:39:55.483 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMaps
2021-02-28 21:39:55.487 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectMapsPage
2021-02-28 21:39:55.491 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectObjs
2021-02-28 21:39:55.495 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectList
2021-02-28 21:39:55.499 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderItemDao.selectPage
2021-02-28 21:39:55.500 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderItemDao.xml]'
2021-02-28 21:39:55.516 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.insert
2021-02-28 21:39:55.520 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.delete
2021-02-28 21:39:55.524 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteByMap
2021-02-28 21:39:55.526 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteById
2021-02-28 21:39:55.529 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.deleteBatchIds
2021-02-28 21:39:55.532 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.update
2021-02-28 21:39:55.535 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.updateById
2021-02-28 21:39:55.536 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectById
2021-02-28 21:39:55.538 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectBatchIds
2021-02-28 21:39:55.540 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectByMap
2021-02-28 21:39:55.543 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectOne
2021-02-28 21:39:55.546 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectCount
2021-02-28 21:39:55.550 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMaps
2021-02-28 21:39:55.554 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectMapsPage
2021-02-28 21:39:55.559 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectObjs
2021-02-28 21:39:55.564 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectList
2021-02-28 21:39:55.568 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderOperateHistoryDao.selectPage
2021-02-28 21:39:55.569 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderOperateHistoryDao.xml]'
2021-02-28 21:39:55.589 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.insert
2021-02-28 21:39:55.595 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.delete
2021-02-28 21:39:55.598 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteByMap
2021-02-28 21:39:55.600 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteById
2021-02-28 21:39:55.603 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.deleteBatchIds
2021-02-28 21:39:55.610 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.update
2021-02-28 21:39:55.614 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.updateById
2021-02-28 21:39:55.615 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectById
2021-02-28 21:39:55.618 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectBatchIds
2021-02-28 21:39:55.620 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectByMap
2021-02-28 21:39:55.624 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectOne
2021-02-28 21:39:55.629 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectCount
2021-02-28 21:39:55.633 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMaps
2021-02-28 21:39:55.637 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectMapsPage
2021-02-28 21:39:55.640 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectObjs
2021-02-28 21:39:55.643 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectList
2021-02-28 21:39:55.647 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnApplyDao.selectPage
2021-02-28 21:39:55.648 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnApplyDao.xml]'
2021-02-28 21:39:55.661 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.insert
2021-02-28 21:39:55.664 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.delete
2021-02-28 21:39:55.667 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteByMap
2021-02-28 21:39:55.668 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteById
2021-02-28 21:39:55.670 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.deleteBatchIds
2021-02-28 21:39:55.674 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.update
2021-02-28 21:39:55.677 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.updateById
2021-02-28 21:39:55.678 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectById
2021-02-28 21:39:55.681 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectBatchIds
2021-02-28 21:39:55.684 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectByMap
2021-02-28 21:39:55.686 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectOne
2021-02-28 21:39:55.688 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectCount
2021-02-28 21:39:55.691 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMaps
2021-02-28 21:39:55.694 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectMapsPage
2021-02-28 21:39:55.697 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectObjs
2021-02-28 21:39:55.700 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectList
2021-02-28 21:39:55.715 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderReturnReasonDao.selectPage
2021-02-28 21:39:55.715 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderReturnReasonDao.xml]'
2021-02-28 21:39:55.748 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.insert
2021-02-28 21:39:55.752 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.delete
2021-02-28 21:39:55.755 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteByMap
2021-02-28 21:39:55.758 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteById
2021-02-28 21:39:55.760 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.deleteBatchIds
2021-02-28 21:39:55.763 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.update
2021-02-28 21:39:55.766 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.updateById
2021-02-28 21:39:55.766 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectById
2021-02-28 21:39:55.769 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectBatchIds
2021-02-28 21:39:55.771 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectByMap
2021-02-28 21:39:55.774 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectOne
2021-02-28 21:39:55.777 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectCount
2021-02-28 21:39:55.781 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMaps
2021-02-28 21:39:55.784 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectMapsPage
2021-02-28 21:39:55.787 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectObjs
2021-02-28 21:39:55.789 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectList
2021-02-28 21:39:55.793 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.OrderSettingDao.selectPage
2021-02-28 21:39:55.793 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\OrderSettingDao.xml]'
2021-02-28 21:39:55.807 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.insert
2021-02-28 21:39:55.810 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.delete
2021-02-28 21:39:55.813 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteByMap
2021-02-28 21:39:55.817 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteById
2021-02-28 21:39:55.819 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.deleteBatchIds
2021-02-28 21:39:55.822 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.update
2021-02-28 21:39:55.825 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.updateById
2021-02-28 21:39:55.826 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectById
2021-02-28 21:39:55.829 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectBatchIds
2021-02-28 21:39:55.832 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectByMap
2021-02-28 21:39:55.837 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectOne
2021-02-28 21:39:55.840 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectCount
2021-02-28 21:39:55.843 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMaps
2021-02-28 21:39:55.846 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectMapsPage
2021-02-28 21:39:55.849 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectObjs
2021-02-28 21:39:55.853 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectList
2021-02-28 21:39:55.856 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.PaymentInfoDao.selectPage
2021-02-28 21:39:55.856 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\PaymentInfoDao.xml]'
2021-02-28 21:39:55.871 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.insert
2021-02-28 21:39:55.874 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.delete
2021-02-28 21:39:55.877 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteByMap
2021-02-28 21:39:55.879 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteById
2021-02-28 21:39:55.881 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.deleteBatchIds
2021-02-28 21:39:55.884 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.update
2021-02-28 21:39:55.887 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.updateById
2021-02-28 21:39:55.889 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectById
2021-02-28 21:39:55.892 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectBatchIds
2021-02-28 21:39:55.894 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectByMap
2021-02-28 21:39:55.897 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectOne
2021-02-28 21:39:55.900 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectCount
2021-02-28 21:39:55.903 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMaps
2021-02-28 21:39:55.906 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectMapsPage
2021-02-28 21:39:55.909 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectObjs
2021-02-28 21:39:55.911 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectList
2021-02-28 21:39:55.914 [ main ] - [ DEBUG ] [ com.baomidou.mybatisplus.core.MybatisConfiguration : 79 ] - addMappedStatement: cn.smile.smilemall.order.dao.RefundInfoDao.selectPage
2021-02-28 21:39:55.914 [ main ] - [ DEBUG ] [ c.b.m.e.spring.MybatisSqlSessionFactoryBean : 49 ] - Parsed mapper file: 'file [E:\idea project\idea web project\smilemall\smilemall-order\target\classes\mapper\order\RefundInfoDao.xml]'
2021-02-28 21:39:57.101 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 263 ] - Trying to get a Redis connection for: RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:39:57.447 [ main ] - [ DEBUG ] [ io.lettuce.core.EpollProvider : 70 ] - Starting without optional epoll library
2021-02-28 21:39:57.450 [ main ] - [ DEBUG ] [ io.lettuce.core.KqueueProvider : 72 ] - Starting without optional kqueue library
2021-02-28 21:39:57.455 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 85 ] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:39:57.456 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 196 ] - Creating executor io.netty.channel.nio.NioEventLoopGroup
2021-02-28 21:39:57.457 [ main ] - [ DEBUG ] [ io.netty.channel.MultithreadEventLoopGroup : 44 ] - -Dio.netty.eventLoopThreads: 8
2021-02-28 21:39:57.468 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 106 ] - -Dio.netty.noKeySetOptimization: false
2021-02-28 21:39:57.468 [ main ] - [ DEBUG ] [ io.netty.channel.nio.NioEventLoop : 107 ] - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-02-28 21:39:57.507 [ main ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 98 ] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@2212e291, existing ref count 0
2021-02-28 21:39:57.533 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:39:57.534 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:39:57.542 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 79 ] - -Dio.netty.processId: 12100 (auto-detected)
2021-02-28 21:39:57.545 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 135 ] - -Djava.net.preferIPv4Stack: false
2021-02-28 21:39:57.546 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 136 ] - -Djava.net.preferIPv6Addresses: false
2021-02-28 21:39:58.072 [ main ] - [ DEBUG ] [ io.netty.util.NetUtilInitializations : 129 ] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2021-02-28 21:39:58.073 [ main ] - [ DEBUG ] [ io.netty.util.NetUtil : 187 ] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2021-02-28 21:39:58.498 [ main ] - [ DEBUG ] [ io.netty.channel.DefaultChannelId : 101 ] - -Dio.netty.machineId: 00:0e:c6:ff:fe:ac:b1:3a (auto-detected)
2021-02-28 21:39:58.528 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 87 ] - -Dio.netty.allocator.type: pooled
2021-02-28 21:39:58.528 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 96 ] - -Dio.netty.threadLocalDirectBufferSize: 0
2021-02-28 21:39:58.528 [ main ] - [ DEBUG ] [ io.netty.buffer.ByteBufUtil : 99 ] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-02-28 21:39:58.562 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 102 ] - -Dio.netty.recycler.maxCapacityPerThread: 4096
2021-02-28 21:39:58.563 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 103 ] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
2021-02-28 21:39:58.563 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 104 ] - -Dio.netty.recycler.linkCapacity: 16
2021-02-28 21:39:58.563 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 105 ] - -Dio.netty.recycler.ratio: 8
2021-02-28 21:39:58.563 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.Recycler : 106 ] - -Dio.netty.recycler.delayedQueue.ratio: 8
2021-02-28 21:39:58.578 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 63 ] - -Dio.netty.buffer.checkAccessible: true
2021-02-28 21:39:58.579 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.AbstractByteBuf : 64 ] - -Dio.netty.buffer.checkBounds: true
2021-02-28 21:39:58.579 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.util.ResourceLeakDetectorFactory : 196 ] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@70fdc776
2021-02-28 21:39:58.634 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x542ecbde, [id: 0x1f239c4a] (inactive), chid=0x1] channelRegistered()
2021-02-28 21:39:58.644 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] channelActive()
2021-02-28 21:39:58.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:39:58.646 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] activating endpoint
2021-02-28 21:39:58.647 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] flushCommands()
2021-02-28 21:39:58.648 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] flushCommands() Flushing 0 commands
2021-02-28 21:39:58.648 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:39:58.649 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] channelActive() done
2021-02-28 21:39:58.651 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:39:58.657 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:39:58.660 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:39:58.662 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:39:58.667 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:39:58.675 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:39:58.679 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1594727)
2021-02-28 21:39:58.683 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:39:58.684 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:39:58.684 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:39:58.696 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:39:58.702 [ main ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:58.704 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:58.708 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:39:58.708 [ main ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:39:58.709 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:58.714 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 42 bytes, 1 commands in the stack
2021-02-28 21:39:58.715 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:39:58.715 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=CONFIG, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:39:58.795 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=CONFIG, output=MapOutput [output={notify-keyspace-events=gxE}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:39:58.898 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:39:58.898 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:39:58.906 [ main ] - [ WARN  ] [ com.netflix.config.sources.URLConfigurationSource : 121 ] - No URLs will be polled as dynamic configuration sources.
2021-02-28 21:39:58.906 [ main ] - [ INFO  ] [ com.netflix.config.sources.URLConfigurationSource : 122 ] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-28 21:39:58.968 [ main ] - [ DEBUG ] [ o.h.v.m.ResourceBundleMessageInterpolator : 172 ] - Loaded expression factory via original TCCL
2021-02-28 21:39:58.977 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 171 ] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-02-28 21:39:58.979 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 203 ] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-02-28 21:39:58.980 [ main ] - [ DEBUG ] [ o.h.v.internal.engine.AbstractConfigurationImpl : 217 ] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-02-28 21:39:58.983 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 120 ] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-02-28 21:39:58.983 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 53 ] - Trying to load META-INF/validation.xml via user class loader
2021-02-28 21:39:58.985 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 60 ] - Trying to load META-INF/validation.xml via TCCL
2021-02-28 21:39:58.986 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ResourceLoaderHelper : 66 ] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-02-28 21:39:58.987 [ main ] - [ DEBUG ] [ o.h.v.internal.xml.config.ValidationXmlParser : 127 ] - No META-INF/validation.xml found. Using annotation based configuration only.
2021-02-28 21:39:58.990 [ main ] - [ DEBUG ] [ o.h.v.i.engine.resolver.TraversableResolvers : 60 ] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-02-28 21:39:58.995 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 300 ] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-02-28 21:39:58.997 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 375 ] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-02-28 21:39:58.997 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 376 ] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-02-28 21:39:58.998 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 377 ] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-02-28 21:39:58.998 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 378 ] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-02-28 21:39:58.999 [ main ] - [ DEBUG ] [ o.h.v.i.engine.ValidatorFactoryConfigurationHelper : 379 ] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-02-28 21:40:00.775 [ main ] - [ DEBUG ] [ c.b.m.autoconfigure.MybatisPlusAutoConfiguration : 310 ] - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2021-02-28 21:40:02.554 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 173 ] - Starting ProtocolHandler ["http-nio-5001"]
2021-02-28 21:40:03.623 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 775 ] - Resolved SocketAddress 192.168.31.239:6379 using RedisURI [host='192.168.31.239', port=6379]
2021-02-28 21:40:03.624 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 312 ] - Connecting to Redis at 192.168.31.239:6379
2021-02-28 21:40:03.633 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 181 ] - [channel=0x61cea53d, [id: 0xc266eea3] (inactive), chid=0x2] channelRegistered()
2021-02-28 21:40:03.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 294 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] channelActive()
2021-02-28 21:40:03.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 421 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2021-02-28 21:40:03.638 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 426 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] activating endpoint
2021-02-28 21:40:03.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 508 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] flushCommands()
2021-02-28 21:40:03.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 523 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] flushCommands() Flushing 0 commands
2021-02-28 21:40:03.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 180 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelActive()
2021-02-28 21:40:03.639 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 308 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] channelActive() done
2021-02-28 21:40:03.640 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 359 ] - Connecting to Redis at 192.168.31.239:6379: Success
2021-02-28 21:40:03.640 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:40:03.641 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:40:03.641 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2021-02-28 21:40:03.643 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:40:03.644 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:40:03.644 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 148 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@67a192f5)
2021-02-28 21:40:03.647 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:40:03.648 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:40:03.649 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2021-02-28 21:40:03.652 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2021-02-28 21:40:03.656 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:03.657 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:03.658 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:40:03.658 [ springSessionRedisMessageListenerContainer-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:40:03.660 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379] writing command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:03.664 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 100 bytes, 1 commands in the stack
2021-02-28 21:40:03.664 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:40:03.664 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:03.666 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:40:03.669 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:40:03.669 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:40:04.020 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:04.020 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:04.021 [ springSessionRedisMessageListenerContainer-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:40:04.021 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:40:04.021 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379] writing command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:04.026 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 64 bytes, 1 commands in the stack
2021-02-28 21:40:04.026 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:40:04.026 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:40:04.026 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:40:04.110 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 17.536 seconds (JVM running for 22.167)
2021-02-28 21:41:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:41:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:41:00.017 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:41:00.021 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:41:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:41:00.025 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:41:00.025 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:41:00.029 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:41:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:41:46.585 [ http-nio-5001-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 173 ] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-28 21:41:46.622 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:46.622 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:46.623 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:41:46.623 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:41:46.623 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:46.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 512 bytes, 1 commands in the stack
2021-02-28 21:41:46.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:41:46.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:46.628 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@69e7d891=[B@76ae23e9, [B@2bd9618d=[B@419fc4e8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:41:46.629 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 68 bytes, 1 commands in the stack
2021-02-28 21:41:46.629 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:41:46.629 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@69e7d891=[B@76ae23e9, [B@2bd9618d=[B@419fc4e8}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:41:46.630 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@69e7d891=[B@76ae23e9, [B@2bd9618d=[B@419fc4e8, [B@7168a50a=[B@5b772f3, [B@4eef974b=[B@e64f7f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:05.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.081 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.082 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:05.083 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.086 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:05.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:05.087 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:05.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.087 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:05.087 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.088 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.088 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:05.089 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.089 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:05.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:05.093 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:05.094 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:05.094 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:05.648 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 83 ] - ZoneAffinity is set to false
2021-02-28 21:42:05.649 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 93 ] - activeReqeustsPerServerThreshold: 0.6
2021-02-28 21:42:05.649 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 95 ] - blackOutServerPercentageThreshold: 0.8
2021-02-28 21:42:05.650 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.ZoneAffinityServerListFilter : 97 ] - availableServersThreshold: 2
2021-02-28 21:42:05.704 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:42:05.733 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 338 ] - LoadBalancer [smilemall-cart]:  pingIntervalSeconds set to 30
2021-02-28 21:42:05.734 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 356 ] - LoadBalancer [smilemall-cart]: maxTotalPingTime set to 2
2021-02-28 21:42:05.734 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.loadbalancer.BaseLoadBalancer : 197 ] - Client: smilemall-cart instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-02-28 21:42:05.745 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 222 ] - Using serverListUpdater PollingServerListUpdater
2021-02-28 21:42:05.761 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:05.762 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:05.762 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:42:05.762 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:42:05.770 [ pool-3-thread-2 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:42:05.772 [ pool-3-thread-2 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:42:05.772 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:42:05.773 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:42:05.773 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:42:05.775 [ pool-3-thread-2 ] - [ INFO  ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 150 ] - DynamicServerListLoadBalancer for client smilemall-cart initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smilemall-cart,current list of Servers=[192.168.31.49:208],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.31.49:208;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@280da021
2021-02-28 21:42:05.847 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:42:05.855 [ pool-3-thread-2 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:42:05.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:42:05.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:42:05.913 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:42:18.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:18.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:18.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:42:18.889 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:42:18.890 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:42:18.890 [ PollingServerListUpdater-0 ] - [ INFO  ] [ com.netflix.config.ChainedDynamicProperty : 115 ] - Flipping property: smilemall-cart.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-02-28 21:42:18.891 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 147 ] - LoadBalancer [smilemall-cart_unknown]:  initialized
2021-02-28 21:42:18.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:42:18.892 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:42:55.343 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:55.343 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:42:55.343 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:42:55.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:42:55.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:42:55.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:42:55.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:42:55.347 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:42:55.367 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 325 ] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-02-28 21:42:55.494 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine.CONFIG : 158 ] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5013b932
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3d14a391
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@34ef5931
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-02-28 21:42:55.495 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ org.thymeleaf.TemplateEngine : 348 ] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-02-28 21:42:55.803 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.803 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.804 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.804 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.805 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:42:55.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.810 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.813 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.813 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.814 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.815 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.814 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.819 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.820 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.821 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.821 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.821 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.822 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.826 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.827 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.827 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.831 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.832 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.833 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.833 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.834 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.838 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.839 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.839 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.839 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.843 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.844 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.845 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.845 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.845 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.850 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.850 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.850 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.850 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.850 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.851 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.851 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.851 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.852 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.858 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.858 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.858 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.859 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.859 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.860 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.861 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.862 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.861 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:42:55.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.866 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.867 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.868 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.868 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.871 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.868 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 496 bytes, 1 commands in the stack
2021-02-28 21:42:55.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3492ea9c=[B@6f5668a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:42:55.876 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 84 bytes, 1 commands in the stack
2021-02-28 21:42:55.877 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.877 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3492ea9c=[B@6f5668a}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.877 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@3492ea9c=[B@6f5668a, [B@38ebbc4d=[B@4cdbece, [B@ac48198=[B@612163ce, [B@29214c56=[B@4fc7f633}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:42:55.918 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.919 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.919 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:42:55.919 [ http-nio-5001-exec-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:42:55.920 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.924 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:42:55.924 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:42:55.925 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:42:55.925 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6ca75061=[B@4954fee2, [B@5f5b8f5=[B@614ed52d, [B@6f208496=[B@a21e9a6, [B@1fa6912f=[B@21a52e24}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.003 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:00.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:00.004 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.008 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:11.532 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:11.533 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:11.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:11.534 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:11.534 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:11.538 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:43:11.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:11.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:11.539 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5d719a0d=[B@11a341b1, [B@552d4b89=[B@2e6d210f, [B@597196a7=[B@7bfc4ecb, [B@40d31a54=[B@2325fa5a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:14.072 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-28 21:43:14.073 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:43:14.074 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:43:34.099 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:43:34.103 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:43:34.104 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:43:34.104 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:43:34.104 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:43:34.105 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:43:34.105 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:34.105 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:43:34.105 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:43:34.105 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:43:34.105 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:34.106 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:34.106 [ springSessionRedisMessageListenerContainer-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:34.106 [ pool-3-thread-4 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:43:34.108 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:34.114 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-28 21:43:34.114 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:34.114 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:34.119 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@76312129=[B@2cf486cc, [B@7a4ae29f=[B@53b3d212, [B@562c1e29=[B@7ec09ce1}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:34.162 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:43:34.162 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:43:34.162 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:43:36.221 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.222 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.222 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.222 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.223 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.227 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:43:36.227 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.227 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.227 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.227 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.228 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.228 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.228 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.228 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.233 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.233 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.234 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.234 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.234 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.234 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.239 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.240 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.240 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.240 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.240 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.241 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.245 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.245 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.245 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.246 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.246 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.246 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.246 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.247 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.250 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.250 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.251 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.251 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.251 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.255 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.256 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.256 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.256 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.256 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.256 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.257 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.257 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:43:36.261 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.262 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.262 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.262 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.262 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.262 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.262 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.263 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:43:36.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.267 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@482b1846=[B@40613569}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:43:36.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:43:36.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@482b1846=[B@40613569}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.268 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@482b1846=[B@40613569, [B@d8f4c35=[B@2e288a94, [B@77d2fef1=[B@59b19580, [B@672b3165=[B@3974dd31}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:36.280 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.280 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.281 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:36.281 [ http-nio-5001-exec-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:36.281 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.285 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:43:36.285 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:36.286 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:36.287 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@7ea6363=[B@7393f106, [B@6d7c3520=[B@7f4a1f61, [B@3834a09a=[B@62675062, [B@27367ff8=[B@763a2a69}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:43:54.583 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:54.583 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:54.583 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:43:54.583 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:43:54.584 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:54.588 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:43:54.588 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:43:54.589 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:43:54.589 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6defe9ce=[B@27fa17d, [B@4aa1ef78=[B@47e04465, [B@3f6afee3=[B@2f15279c, [B@10cc8b33=[B@5b74b45e}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:08.338 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:44:08.339 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:44:08.339 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:44:08.339 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:08.340 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:08.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:08.340 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:08.341 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:44:08.342 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:08.342 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:44:08.342 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:44:08.342 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:44:08.342 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:44:08.342 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:44:08.343 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:44:08.343 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:44:09.655 [ pool-3-thread-6 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:44:09.655 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.655 [ pool-3-thread-6 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:44:09.655 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.656 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.656 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.656 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.657 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.658 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.658 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.661 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.661 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.661 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.661 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.703 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:44:09.704 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:44:09.704 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:44:09.780 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.780 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.780 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.780 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.781 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:44:09.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.786 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.786 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.787 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.788 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.788 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.788 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.793 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.794 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.794 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.794 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.794 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.795 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.799 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.799 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.799 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.799 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.802 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.806 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.806 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.806 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.807 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.807 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.807 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.811 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.812 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.812 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.812 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.812 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.813 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:09.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.817 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.817 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.817 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.818 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.818 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.820 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:44:09.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ea928c2=[B@134878fd}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:44:09.824 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:44:09.825 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.825 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ea928c2=[B@134878fd}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.825 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5ea928c2=[B@134878fd, [B@481ac31e=[B@52771339, [B@1550c941=[B@4ceb385a, [B@2280c11=[B@5fe2ea47}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:09.832 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.832 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.833 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:09.833 [ http-nio-5001-exec-3 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:09.834 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.838 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:44:09.838 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:09.838 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:09.838 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1de82d2e=[B@767563d7, [B@776c1b71=[B@61d549fb, [B@6250d42e=[B@5c0104b, [B@2aa8baf1=[B@6ad04d30}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:36.855 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 121 bytes, 0 commands in the stack
2021-02-28 21:44:36.856 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:44:36.856 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:44:36.858 [ springSessionRedisMessageListenerContainer-8 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:36.859 [ springSessionRedisMessageListenerContainer-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:36.859 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:36.859 [ springSessionRedisMessageListenerContainer-8 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:36.860 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:36.863 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 1 commands in the stack
2021-02-28 21:44:36.864 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:36.864 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:36.865 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@79f0f865=[B@525f8311, [B@112183a6=[B@2c926aef, [B@11443434=[B@31b3f068}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:38.341 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:44:38.344 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:44:45.278 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:45.279 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:45.279 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:45.279 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:45.280 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:45.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:44:45.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:45.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:45.284 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@107519c4=[B@6284f0c8, [B@3e6b9b12=[B@554481, [B@b072246=[B@32f243df, [B@5a876965=[B@53dfd8a5}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:51.048 [ pool-3-thread-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:44:51.049 [ pool-3-thread-8 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:44:51.101 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:44:51.102 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:44:51.102 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:44:53.882 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.882 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.883 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.883 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.884 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:44:53.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.888 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.889 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.889 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.889 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.889 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.890 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.894 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SREM, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.894 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.895 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.895 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.895 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.896 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.900 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.900 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.900 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.900 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.901 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.901 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.901 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.901 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.902 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.906 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.906 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.906 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.907 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.906 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.907 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.911 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.911 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.911 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.911 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.911 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.912 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.912 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.912 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.916 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.916 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.916 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.916 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.917 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.917 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.917 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.917 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.917 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.921 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:44:53.922 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.922 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.922 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.922 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.922 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.922 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.922 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.923 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@169860a6=[B@3c435fb8}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@169860a6=[B@3c435fb8}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.927 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@169860a6=[B@3c435fb8, [B@1c8f1f54=[B@426810e8, [B@3138e690=[B@26f9d24e, [B@64702d41=[B@5003ac67}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:53.933 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.934 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.934 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:53.934 [ http-nio-5001-exec-4 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:53.935 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.937 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:44:53.937 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:53.938 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:53.938 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@357c9903=[B@43da27de, [B@37912014=[B@7df52e31, [B@5f92ef0a=[B@35d7743a, [B@12bf100b=[B@5f0215c3}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:44:58.413 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:58.413 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:58.414 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:44:58.414 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:44:58.414 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:58.418 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:44:58.419 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:44:58.419 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:44:58.420 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@17dcc7a9=[B@7cf37cd2, [B@583f749c=[B@5f4b6c44, [B@344e8fcc=[B@1f3ba88e, [B@d630358=[B@ad701f2}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:45:02.174 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:45:02.175 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.175 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:45:02.176 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.179 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:45:02.180 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.179 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:45:02.181 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:45:02.181 [ pool-3-thread-10 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:45:02.181 [ pool-3-thread-10 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:45:02.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:45:02.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:45:02.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.185 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:45:02.186 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.186 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.186 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:45:02.186 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:45:02.187 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.190 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:45:02.190 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:45:02.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:45:02.191 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:45:02.228 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:45:02.228 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:45:02.229 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:46:07.954 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:46:07.955 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:46:07.958 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.959 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.959 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.960 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.958 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:46:07.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:07.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:07.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.964 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.964 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.965 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.965 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.966 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.966 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.966 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.970 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.971 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.972 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.972 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.973 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 2 commands in the stack
2021-02-28 21:46:07.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 2 commands
2021-02-28 21:46:07.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.974 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.977 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:46:07.977 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:07.977 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.977 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.977 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.978 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.978 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.978 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.979 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:07.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:07.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.983 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.984 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.984 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.984 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.984 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.985 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:07.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:07.989 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.990 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.990 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.990 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.991 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.990 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.992 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.996 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:07.996 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.996 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:07.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:07.997 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:07.997 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.001 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:08.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:08.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:08.002 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.002 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:08.002 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:08.003 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:46:08.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:08.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:08.008 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.008 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:08.009 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:08.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 448 bytes, 1 commands in the stack
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6da5f996=[B@6908912a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 132 bytes, 1 commands in the stack
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6da5f996=[B@6908912a}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6da5f996=[B@6908912a, [B@2b352b5d=[B@76581f29, [B@195f7758=[B@7435ad7c, [B@5b7454ac=[B@1632e115}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:08.021 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.021 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:08.022 [ http-nio-5001-exec-5 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:08.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:46:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:08.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@6f1a064b=[B@3e26f0a8, [B@598dedd6=[B@87349e7, [B@8ae5d6=[B@5f00a96a, [B@131869b=[B@5288f94f}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:46:37.958 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:46:37.959 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:46:37.959 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:46:38.676 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:46:38.676 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:46:38.676 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:46:40.134 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:40.134 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:40.135 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:46:40.135 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:46:40.136 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:40.140 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:46:40.141 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:46:40.141 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:46:40.141 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@131d0d46=[B@1d3fdcef, [B@6cadceb=[B@4d427627, [B@4aa4bef4=[B@22fe3265, [B@66339a52=[B@58e5cd62}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:47:03.365 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.365 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.366 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:47:03.366 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:47:03.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.369 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:47:03.369 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.LoadBalancerContext : 492 ] - smilemall-cart using LB returned Server: 192.168.31.49:208 for request http:///cart/getCartHasCheck
2021-02-28 21:47:03.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:47:03.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:47:03.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.371 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:47:03.371 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.372 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.372 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:47:03.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:47:03.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:47:03.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:47:03.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:47:03.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:47:04.373 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:47:05.377 [ pool-3-thread-12 ] - [ DEBUG ] [ com.netflix.loadbalancer.ZoneAwareLoadBalancer : 112 ] - Zone aware logic disabled or there is only one zone
2021-02-28 21:47:05.378 [ pool-3-thread-12 ] - [ DEBUG ] [ c.n.loadbalancer.reactive.LoadBalancerCommand : 314 ] - Got error java.net.SocketTimeoutException: Read timed out when executed on server 192.168.31.49:208
2021-02-28 21:49:52.307 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:49:52.307 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:49:52.307 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:49:52.307 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:49:52.307 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:49:52.308 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:49:52.308 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:49:52.308 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:49:52.310 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.310 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 448 bytes, 0 commands in the stack
2021-02-28 21:49:52.310 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.310 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.311 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.311 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.311 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.313 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.314 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.315 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.315 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.316 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.316 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.317 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.317 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.317 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: false
2021-02-28 21:49:52.318 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.317 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 408 bytes, 0 commands in the stack
2021-02-28 21:49:52.318 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.318 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.318 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.319 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.319 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.319 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.320 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:49:52.320 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:49:52.320 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.321 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.321 [ springSessionRedisMessageListenerContainer-14 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.322 [ springSessionRedisMessageListenerContainer-14 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.320 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.322 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.324 [ springSessionRedisMessageListenerContainer-17 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.324 [ springSessionRedisMessageListenerContainer-18 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.325 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.325 [ springSessionRedisMessageListenerContainer-18 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.322 [ springSessionRedisMessageListenerContainer-14 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.326 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.326 [ springSessionRedisMessageListenerContainer-18 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.326 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.325 [ springSessionRedisMessageListenerContainer-17 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.327 [ springSessionRedisMessageListenerContainer-17 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.327 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 4 commands in the stack
2021-02-28 21:49:52.328 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 4 commands
2021-02-28 21:49:52.329 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.329 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.330 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 122 bytes, 3 commands in the stack
2021-02-28 21:49:52.330 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 3 commands
2021-02-28 21:49:52.330 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.330 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@2e34b732=[B@44ce5a38, [B@471ccd4a=[B@4fc8f8b4, [B@681a5fab=[B@6e1f0a9a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.332 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 244 bytes, 2 commands in the stack
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 2 commands
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@5442e7f5=[B@7c33ad63, [B@626b78df=[B@3f8d805f, [B@6aee317e=[B@699aaf1}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.333 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@1de71e9d=[B@6487f178, [B@7cdee0f7=[B@41310883, [B@2f02084b=[B@4ae3810a}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.341 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.342 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.342 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.342 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.343 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.347 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
2021-02-28 21:49:52.347 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.347 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.347 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HMSET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.348 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.348 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.349 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.349 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.353 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.353 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.353 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.354 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SADD, output=IntegerOutput [output=1, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.354 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.355 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.355 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.355 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.356 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.360 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.361 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.361 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.361 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.362 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.362 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.363 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.367 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=APPEND, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.367 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.368 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.368 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.368 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.372 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.373 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.373 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.373 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.373 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.374 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.377 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:49:52.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.378 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=true, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.378 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.378 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.379 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.379 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 464 bytes, 1 commands in the stack
2021-02-28 21:49:52.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.383 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@751c984d=[B@2ecbbba7}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: false
2021-02-28 21:49:52.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 116 bytes, 1 commands in the stack
2021-02-28 21:49:52.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output={[B@751c984d=[B@2ecbbba7}, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.384 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@751c984d=[B@2ecbbba7, [B@6777dbed=[B@53604478, [B@31cafdd8=[B@a91454a, [B@2005c55c=[B@6c534dfd}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:49:52.389 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.389 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.390 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:49:52.389 [ http-nio-5001-exec-6 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:49:52.390 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.394 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 580 bytes, 1 commands in the stack
2021-02-28 21:49:52.394 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:49:52.394 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=HGETALL, output=MapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:49:52.394 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=HGETALL, output=MapOutput [output={[B@62f24a0e=[B@35c3262a, [B@336091ac=[B@2192ccf, [B@33db399f=[B@68e4ead2, [B@4511a6bc=[B@20888534}, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.001 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:00.002 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.002 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:50:00.006 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 110 bytes, 1 commands in the stack
2021-02-28 21:50:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:50:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.007 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[[B@cd60579, [B@47e23f78], error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.008 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.009 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:00.009 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:50:00.010 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.012 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 89 bytes, 0 commands in the stack
2021-02-28 21:50:00.012 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:50:00.012 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:50:00.013 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:50:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:50:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.014 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=DEL, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:00.015 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.016 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.016 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:00.019 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.020 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.022 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:00.023 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.024 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] write(ctx, AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:00.026 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379] writing command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.024 [ pool-4-thread-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] write() done
2021-02-28 21:50:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Received: 4 bytes, 1 commands in the stack
2021-02-28 21:50:00.030 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] Stack contains: 1 commands
2021-02-28 21:50:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:00.031 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:22.308 [ RibbonApacheHttpClientConfiguration.connectionManagerTimer ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 448 ] - Closing expired connections
2021-02-28 21:50:22.309 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 241 ] - List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:50:22.309 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 246 ] - Filtered List of Servers for smilemall-cart obtained from Discovery client: [192.168.31.49:208]
2021-02-28 21:50:22.309 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart]: clearing server list (SET op)
2021-02-28 21:50:22.309 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart]:  addServer [192.168.31.49:208]
2021-02-28 21:50:22.309 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ c.n.loadbalancer.DynamicServerListLoadBalancer : 179 ] - Setting server list for zones: {unknown=[192.168.31.49:208]}
2021-02-28 21:50:22.310 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 491 ] - LoadBalancer [smilemall-cart_unknown]: clearing server list (SET op)
2021-02-28 21:50:22.310 [ PollingServerListUpdater-0 ] - [ DEBUG ] [ com.netflix.loadbalancer.BaseLoadBalancer : 507 ] - LoadBalancer [smilemall-cart_unknown]:  addServer [192.168.31.49:208]
2021-02-28 21:50:39.659 [ Thread-24 ] - [ INFO  ] [ com.netflix.loadbalancer.PollingServerListUpdater : 53 ] - Shutting down the Executor Pool for PollingServerListUpdater
2021-02-28 21:50:39.661 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.661 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.662 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:50:39.662 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:39.662 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379] writing command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.666 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 106 bytes, 1 commands in the stack
2021-02-28 21:50:39.666 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:50:39.666 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.666 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:39.667 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode null
2021-02-28 21:50:39.667 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded null, empty stack: true
2021-02-28 21:50:39.667 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 179 ] - dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.667 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 389 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.667 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 173 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] write() done
2021-02-28 21:50:39.667 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 374 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] write(ctx, AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2021-02-28 21:50:39.668 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandEncoder : 101 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379] writing command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.672 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 570 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Received: 66 bytes, 1 commands in the stack
2021-02-28 21:50:39.672 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 616 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] Stack contains: 1 commands
2021-02-28 21:50:39.672 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 131 ] - Decode AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2021-02-28 21:50:39.672 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.RedisStateMachine : 145 ] - Decoded AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2021-02-28 21:50:39.673 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:50:39.673 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] closeAsync()
2021-02-28 21:50:39.676 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] channelInactive()
2021-02-28 21:50:39.677 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, epid=0x2] deactivating endpoint handler
2021-02-28 21:50:39.677 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] channelInactive() done
2021-02-28 21:50:39.678 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:50:39.678 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:50:39.678 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x61cea53d, /192.168.31.49:5558 -> /192.168.31.239:6379, chid=0x2] channelUnregistered()
2021-02-28 21:50:48.413 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 411 ] - Connection manager is shutting down
2021-02-28 21:50:48.415 [ SpringContextShutdownHook ] - [ DEBUG ] [ o.a.h.impl.conn.PoolingHttpClientConnectionManager : 434 ] - Connection manager shut down
2021-02-28 21:50:48.422 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisChannelHandler : 145 ] - closeAsync()
2021-02-28 21:50:48.422 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 549 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] closeAsync()
2021-02-28 21:50:48.423 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.RedisClient : 474 ] - Initiate shutdown (100, 100, MILLISECONDS)
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 332 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] channelInactive()
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.DefaultEndpoint : 463 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, epid=0x1] deactivating endpoint handler
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 358 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] channelInactive() done
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 188 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] channelInactive()
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.ConnectionWatchdog : 199 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, last known addr=/192.168.31.239:6379] Reconnect scheduling disabled
2021-02-28 21:50:48.423 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.lettuce.core.protocol.CommandHandler : 198 ] - [channel=0x542ecbde, /192.168.31.49:5544 -> /192.168.31.239:6379, chid=0x1] channelUnregistered()
2021-02-28 21:50:48.428 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 226 ] - Release executor io.netty.channel.nio.NioEventLoopGroup@2212e291
2021-02-28 21:50:48.429 [ lettuce-nioEventLoop-4-2 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2021-02-28 21:50:48.528 [ lettuce-nioEventLoop-4-1 ] - [ DEBUG ] [ io.netty.buffer.PoolThreadCache : 224 ] - Freed 13 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2021-02-28 21:50:48.530 [ SpringContextShutdownHook ] - [ DEBUG ] [ io.lettuce.core.resource.DefaultClientResources : 631 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:50:48.533 [ SpringContextShutdownHook ] - [ DEBUG ] [ i.l.core.resource.DefaultEventLoopGroupProvider : 263 ] - Initiate shutdown (0, 2, SECONDS)
2021-02-28 21:51:00.925 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:51:11.627 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 16.306 seconds (JVM running for 19.778)
2021-02-28 21:54:50.417 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 21:54:59.253 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 12.465 seconds (JVM running for 14.758)
2021-02-28 22:01:19.415 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 651 ] - No active profile set, falling back to default profiles: default
2021-02-28 22:01:28.151 [ main ] - [ INFO  ] [ cn.smile.smilemall.order.SmilemallOrderApplication : 61 ] - Started SmilemallOrderApplication in 11.937 seconds (JVM running for 15.008)
